{"version":3,"file":"AddressForm-Cz0XUJgF.js","sources":["../../../../dashboard/src/utils/billing.js","../../../../dashboard/src2/components/AddressForm.vue"],"sourcesContent":["export const indianStates = [\n\t'Andaman and Nicobar Islands',\n\t'Andhra Pradesh',\n\t'Arunachal Pradesh',\n\t'Assam',\n\t'Bihar',\n\t'Chandigarh',\n\t'Chhattisgarh',\n\t'Dadra and Nagar Haveli and Daman and Diu',\n\t'Delhi',\n\t'Goa',\n\t'Gujarat',\n\t'Haryana',\n\t'Himachal Pradesh',\n\t'Jammu and Kashmir',\n\t'Jharkhand',\n\t'Karnataka',\n\t'Kerala',\n\t'Ladakh',\n\t'Lakshadweep Islands',\n\t'Madhya Pradesh',\n\t'Maharashtra',\n\t'Manipur',\n\t'Meghalaya',\n\t'Mizoram',\n\t'Nagaland',\n\t'Odisha',\n\t'Other Territory',\n\t'Puducherry',\n\t'Punjab',\n\t'Rajasthan',\n\t'Sikkim',\n\t'Tamil Nadu',\n\t'Telangana',\n\t'Tripura',\n\t'Uttar Pradesh',\n\t'Uttarakhand',\n\t'West Bengal'\n];\n","<template>\n\t<div>\n\t\t<Form\n\t\t\tclass=\"mt-4\"\n\t\t\t:fields=\"fields\"\n\t\t\t:modelValue=\"address\"\n\t\t\t@update:modelValue=\"$emit('update:address', $event)\"\n\t\t/>\n\t\t<div class=\"mt-4\" v-show=\"address.country == 'India'\">\n\t\t\t<FormControl\n\t\t\t\tlabel=\"I have GSTIN\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tv-model=\"gstApplicable\"\n\t\t\t/>\n\t\t\t<FormControl\n\t\t\t\tclass=\"mt-2\"\n\t\t\t\tlabel=\"GSTIN\"\n\t\t\t\tv-if=\"gstApplicable\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tv-model=\"address.gstin\"\n\t\t\t\t:disabled=\"!gstApplicable\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Form from '@/components/Form.vue';\nimport { indianStates } from '@/utils/billing.js';\nimport { DashboardError } from '../utils/error';\n\nexport default {\n\tname: 'AddressForm',\n\tprops: ['address'],\n\temits: ['update:address'],\n\tcomponents: {\n\t\tForm\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tgstApplicable: false\n\t\t};\n\t},\n\tmounted() {\n\t\tif (this.address?.gstin && this.address.gstin !== 'Not Applicable') {\n\t\t\tthis.gstApplicable = true;\n\t\t} else {\n\t\t\tthis.update('gstin', 'Not Applicable');\n\t\t}\n\t},\n\twatch: {\n\t\t'address.gstin'(gstin) {\n\t\t\tthis.update('gstin', gstin);\n\t\t},\n\t\tgstApplicable(gstApplicable) {\n\t\t\tif (gstApplicable) {\n\t\t\t\tthis.update(\n\t\t\t\t\t'gstin',\n\t\t\t\t\tthis.address.gstin === 'Not Applicable' ? '' : this.address.gstin\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.update('gstin', 'Not Applicable');\n\t\t\t}\n\t\t}\n\t},\n\tresources: {\n\t\tcountryList: {\n\t\t\turl: 'press.api.account.country_list',\n\t\t\tauto: true,\n\t\t\tonSuccess() {\n\t\t\t\tlet userCountry = this.$team?.doc.country;\n\t\t\t\tif (userCountry) {\n\t\t\t\t\tlet country = this.countryList.find(d => d.label === userCountry);\n\t\t\t\t\tif (country) {\n\t\t\t\t\t\tthis.update('country', country.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tvalidateGST() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.billing.validate_gst',\n\t\t\t\tmakeParams() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taddress: this.address\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tupdate(key, value) {\n\t\t\tthis.$emit('update:address', {\n\t\t\t\t...this.address,\n\t\t\t\t[key]: value\n\t\t\t});\n\t\t},\n\t\tasync validateGST() {\n\t\t\tthis.update(\n\t\t\t\t'gstin',\n\t\t\t\tthis.gstApplicable ? this.address.gstin : 'Not Applicable'\n\t\t\t);\n\t\t\tawait this.$resources.validateGST.submit();\n\t\t},\n\t\tasync validateValues() {\n\t\t\tlet { country } = this.address;\n\t\t\tlet is_india = country == 'India';\n\t\t\tlet values = this.fields\n\t\t\t\t.flat()\n\t\t\t\t.filter(df => df.fieldname != 'gstin' || is_india)\n\t\t\t\t.map(df => this.address[df.fieldname]);\n\n\t\t\tif (!values.every(Boolean)) {\n\t\t\t\tthrow new DashboardError('Please fill required values');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait this.validateGST();\n\t\t\t} catch (error) {\n\t\t\t\tthrow new DashboardError(error.messages?.join('\\n'));\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\tcountryList() {\n\t\t\treturn (this.$resources.countryList.data || []).map(d => ({\n\t\t\t\tlabel: d.name,\n\t\t\t\tvalue: d.name\n\t\t\t}));\n\t\t},\n\t\tindianStates() {\n\t\t\treturn indianStates.map(d => ({\n\t\t\t\tlabel: d,\n\t\t\t\tvalue: d\n\t\t\t}));\n\t\t},\n\t\tfields() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Country',\n\t\t\t\t\tfieldname: 'country',\n\t\t\t\t\toptions: this.countryList,\n\t\t\t\t\trequired: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'Address',\n\t\t\t\t\tfieldname: 'address',\n\t\t\t\t\trequired: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'City',\n\t\t\t\t\tfieldname: 'city',\n\t\t\t\t\trequired: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: this.address.country === 'India' ? 'Select' : 'Data',\n\t\t\t\t\tlabel: 'State / Province / Region',\n\t\t\t\t\tfieldname: 'state',\n\t\t\t\t\trequired: 1,\n\t\t\t\t\toptions: this.address.country === 'India' ? this.indianStates : null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'Postal Code',\n\t\t\t\t\tfieldname: 'postal_code',\n\t\t\t\t\trequired: 1\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t}\n};\n</script>\n"],"names":["indianStates","_sfc_main","Form","gstApplicable","userCountry","_a","country","key","value","__async","df","is_india","d","_hoisted_1","$options","$props","_withDirectives","_createElementVNode","$data","_cache","$event","_createCommentVNode","_vShow"],"mappings":"45CAAY,MAACA,EAAe,CAC3B,8BACA,iBACA,oBACA,QACA,QACA,aACA,eACA,2CACA,QACA,MACA,UACA,UACA,mBACA,oBACA,YACA,YACA,SACA,SACA,sBACA,iBACA,cACA,UACA,YACA,UACA,WACA,SACA,kBACA,aACA,SACA,YACA,SACA,aACA,YACA,UACA,gBACA,cACA,aACD,ECPAC,EAAA,CACC,KAAA,cACA,MAAA,CAAA,SAAA,uCAGCC,KAAAA,GAED,MAAA,CACC,MAAA,CACC,cAAA,KAGF,SAAA,oGAIE,KAAA,OAAA,QAAA,gBAAA,GAGF,MAAA,6DAKEC,cAEE,qEAID,KAAA,OAAA,QAAA,gBAAA,CAEF,2BAIC,IAAA,iCACA,KAAA,qBAEC,IAAAC,GAAAC,EAAA,KAAA,QAAA,YAAAA,EAAA,IAAA,QACA,GAAAD,EAAA,gDAGE,KAAA,OAAA,UAAAE,EAAA,KAAA,CAEF,CACD,iBAGA,MAAA,CACC,IAAA,8CAEC,MAAA,CACC,QAAA,KAAA,QAEF,EAEF,GAED,QAAA,CACC,OAAAC,EAAAC,EAAA,oCAEE,KAAA,eAED,EAAA,GAED,aAAA,QAAAC,EAAA,kCAEE,gEAGD,MAAA,KAAA,WAAA,YAAA,OAAA,KAED,gBAAA,QAAAA,EAAA,yEAGC,KAAA,OACC,KAAA,EACA,OAAAC,GAAAA,EAAA,WAAA,SAAAC,CAAA,EACA,IAAAD,GAAA,KAAA,QAAAA,EAAA,SAAA,CAAA,4DAMD,GAAA;GAIA,CACD,KAED,SAAA,8FAKE,EAAA,GAED,cAAA,mBAEE,MAAAE,EACA,MAAAA,CACD,EAAA,GAED,QAAA,CACC,MAAA,CACC,CACC,UAAA,SACA,MAAA,UACA,UAAA,mCAEA,SAAA,GAED,CACC,UAAA,OACA,MAAA,UACA,UAAA,UACA,SAAA,GAED,CACC,UAAA,oBAEA,UAAA,OACA,SAAA,GAED,4FAGC,UAAA,kFAID,CACC,UAAA,OACA,MAAA,sCAEA,SAAA,CACD,EAEF,CACD,CACD,EArKOC,EAAA,CAAA,MAAA,MAAA,sEALJ,MAAA,OACC,OAAAC,EAAA,OACA,WAAAC,EAAA,2GAGFC,EAAAC,EAAA,MAAAJ,EAAA,MAEE,MAAA,eACA,KAAA,WAXJ,WAAAK,EAAA,cAAA,sBAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAF,EAAA,cAAAE,2DAeI,MAAA,OACA,MAAA,QAEA,KAAA,0FAEC,SAAA,CAAAF,EAAA,kDApBLG,EAAA,GAAA,EAAA,SAQ4B,CAAAC,EAAAP,EAAA,QAAA,SAAA,OAAA"}