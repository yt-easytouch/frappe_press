{"version":3,"file":"BackupFilesUploader-D7iED6IX.js","sources":["../../../../dashboard/src/components/BackupFilesUploader.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"mt-2 space-y-2\">\n\t\t\t<FileUploader\n\t\t\t\tv-for=\"file in files\"\n\t\t\t\t:fileTypes=\"file.ext\"\n\t\t\t\t:key=\"file.type\"\n\t\t\t\t:type=\"file.type\"\n\t\t\t\t@success=\"onFileUpload(file, $event)\"\n\t\t\t\t:fileValidator=\"f => databaseBackupChecker(f, file.type)\"\n\t\t\t\t:s3=\"true\"\n\t\t\t>\n\t\t\t\t<template\n\t\t\t\t\tv-slot=\"{\n\t\t\t\t\t\tfile: fileObj,\n\t\t\t\t\t\tuploading,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tsuccess,\n\t\t\t\t\t\topenFileSelector\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclass=\"border-b\"\n\t\t\t\t\t\t:title=\"fileObj ? fileObj.name : file.title\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #subtitle>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclass=\"text-base\"\n\t\t\t\t\t\t\t\t:class=\"error ? 'text-red-500' : 'text-gray-600'\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\tuploading\n\t\t\t\t\t\t\t\t\t\t? `Uploading ${progress}%`\n\t\t\t\t\t\t\t\t\t\t: success\n\t\t\t\t\t\t\t\t\t\t? formatBytes(fileObj.size)\n\t\t\t\t\t\t\t\t\t\t: error\n\t\t\t\t\t\t\t\t\t\t? error\n\t\t\t\t\t\t\t\t\t\t: file.description\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #actions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t:loading=\"uploading\"\n\t\t\t\t\t\t\t\tloadingText=\"Uploading...\"\n\t\t\t\t\t\t\t\t@click=\"openFileSelector()\"\n\t\t\t\t\t\t\t\tv-if=\"!success\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<GreenCheckIcon class=\"w-5\" v-if=\"success\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</template>\n\t\t\t</FileUploader>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport FileUploader from './FileUploader.vue';\n\nexport default {\n\tname: 'BackupFilesUploader',\n\tcomponents: { FileUploader },\n\temits: ['update:backupFiles'],\n\tprops: ['backupFiles'],\n\tdata() {\n\t\treturn {\n\t\t\tfiles: [\n\t\t\t\t{\n\t\t\t\t\ticon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.33325 9.33333V22.6667C5.33325 25.6133 10.1093 28 15.9999 28C21.8906 28 26.6666 25.6133 26.6666 22.6667V9.33333M5.33325 9.33333C5.33325 12.28 10.1093 14.6667 15.9999 14.6667C21.8906 14.6667 26.6666 12.28 26.6666 9.33333M5.33325 9.33333C5.33325 6.38667 10.1093 4 15.9999 4C21.8906 4 26.6666 6.38667 26.6666 9.33333M26.6666 16C26.6666 18.9467 21.8906 21.3333 15.9999 21.3333C10.1093 21.3333 5.33325 18.9467 5.33325 16\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n\t\t\t\t\ttype: 'database',\n\t\t\t\t\text: 'application/x-gzip,application/sql,.sql',\n\t\t\t\t\ttitle: 'Database Backup',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Upload the database backup file. Usually file name ends in .sql.gz or .sql',\n\t\t\t\t\tfile: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.39111 6.3913H26.3476V22.2174C26.3476 25.9478 23.2955 29 19.565 29H9.39111V6.3913Z\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M13.9131 13.1739H21.8261\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M13.9131 17.6957H21.8261\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M13.9131 22.2173H19.8479\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M22.9565 6.3913V3H6V25.6087H9.3913\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/></svg>',\n\t\t\t\t\ttype: 'public',\n\t\t\t\t\text: 'application/x-tar',\n\t\t\t\t\ttitle: 'Public Files',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Upload the public files backup. Usually file name ends in -files.tar',\n\t\t\t\t\tfile: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.39111 6.3913H25.3476V22.2174C25.3476 25.9478 22.2955 29 18.565 29H8.39111V6.3913Z\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M21.9565 6.3913V3H5V25.6087H8.3913\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/></svg>',\n\t\t\t\t\ttype: 'private',\n\t\t\t\t\text: 'application/x-tar',\n\t\t\t\t\ttitle: 'Private Files',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Upload the private files backup. Usually file name ends in -private-files.tar',\n\t\t\t\t\tfile: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.39111 6.3913H25.3476V22.2174C25.3476 25.9478 22.2955 29 18.565 29H8.39111V6.3913Z\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/><path d=\"M21.9565 6.3913V3H5V25.6087H8.3913\" stroke=\"#1F272E\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/></svg>',\n\t\t\t\t\ttype: 'config',\n\t\t\t\t\text: 'application/json',\n\t\t\t\t\ttitle: 'Site Config (required if backup is encrypted)',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Upload the site config file. Usually file name ends in -site_config_backup.json',\n\t\t\t\t\tfile: null\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t},\n\tmethods: {\n\t\tonFileUpload(file, data) {\n\t\t\tlet backupFiles = Object.assign({}, this.backupFiles);\n\t\t\tbackupFiles[file.type] = data;\n\t\t\tthis.$emit('update:backupFiles', backupFiles);\n\t\t},\n\t\tasync databaseBackupChecker(file, type) {\n\t\t\tif (type === 'database') {\n\t\t\t\t// valid strings are \"database.sql.gz\", \"database.sql\", \"database.sql (1).gz\", \"database.sql (2).gz\"\n\t\t\t\tif (!/\\.sql( \\(\\d\\))?\\.gz$|\\.sql$/.test(file.name)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Database backup file should end with the name \"database.sql.gz\" or \"database.sql\"'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t![\n\t\t\t\t\t\t'application/x-gzip',\n\t\t\t\t\t\t'application/gzip',\n\t\t\t\t\t\t'application/sql'\n\t\t\t\t\t].includes(file.type)\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error('Invalid database backup file');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (['public', 'private'].includes(type)) {\n\t\t\t\tif (file.type != 'application/x-tar') {\n\t\t\t\t\tthrow new Error(`Invalid ${type} files backup file`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 'config') {\n\t\t\t\tif (file.type != 'application/json') {\n\t\t\t\t\tthrow new Error(`Invalid ${type} files backup file`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","backupFiles","file","type","__async","_hoisted_1","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_renderList","$data","$event","$options","_withCtx","_normalizeClass","error","_createCommentVNode","uploading","openFileSelector","_cache","_createTextVNode"],"mappings":"2jCA8DA,MAAAA,EAAA,qFAIC,MAAA,CAAA,aAAA,EACA,MAAA,CACC,MAAA,CACC,MAAA,CACC,CACC,KAAA,wmBACA,KAAA,WACA,IAAA,8EAGC,6EACD,KAAA,MAED,CACC,KAAA,+qBAGA,MAAA,kGAGA,KAAA,MAED,CACC,KAAA,4WACA,KAAA,kCAEA,MAAA,4BAEC,gFACD,KAAA,MAED,CACC,KAAA,mdAKC,kFACD,KAAA,IACD,CACD,IAGF,QAAA,wEAIE,KAAA,MAAA,qBAAAC,CAAA,GAED,sBAAAC,EAAAC,EAAA,QAAAC,EAAA,sBACC,GAAAD,IAAA,WAAA,gEAIG,qFAGF,KAEE,qBACA,mBACA,iBACD,EAAA,SAAAD,EAAA,IAAA,EAEA,MAAA,IAAA,MAAA,8BAAA,CAEF,CACA,GAAA,CAAA,SAAA,SAAA,EAAA,SAAAC,CAAA,GACCD,EAAA,MAAA,sEAID,GAAAC,IAAA,UACCD,EAAA,MAAA,oEAIF,GACD,CACD,EA/IOG,EAAA,CAAA,MAAA,gBAAA,yEAALC,EAAA,MAAAD,EAAA,EACCE,EAAA,EAAA,EAAAC,EAAAC,EAAA,KAAAC,EAAAC,EAAA,MAAAT,oDAKE,UAAAU,GAAAC,EAAA,aAAAX,EAAAU,CAAA,qDAEA,GAAA,KAVL,QAAAE,EAAA,CAAA,6EAuBM,MAAA,oCAGW,SAAAA,EAAA,IAAA,WAET,MAAAC,EAAA,CAAA,YAAAC,EAAA,eAAA,eAAA,CAAA,oDAI0Jd,EAAA,WAAA,EAAA,CAAA,IAUjJ,QAAAY,EAAA,IAAA,GA1CjBG,EAAA,GAAA,EAAA,kBA4CS,QAAAC,EACD,YAAA,eACC,QAAAN,GAAAO,EAAA,IA9CT,QAAAL,EAAA,IAAAM,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAAC,EAAA,UAAA,yDAmDuB,MAAA,SAnDvBJ,EAAA,GAAA,EAAA"}