{"version":3,"mappings":"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","names":["upcomingInvoice","inject","props","__props","team","currentBillingAmount","unpaidInvoices","showAddPrepaidCreditsDialog","ref","showInvoiceDialog","currency","computed","unpaidAmount","createResource","currentMonthEnd","date","payNow","payUnpaidInvoices","_unpaidInvoices","confirmDialog","hide","router","invoice","emit","__emit","show","_useModel","billingRef","cards","setAsDefault","card","confirmDialogOpened","removeCard","availableCredits","showBillingDetailsDialog","showAddCardDialog","showChangeCardDialog","billingDetails","changePaymentMode","billingDetailsSummary","_billingDetails","billing_name","address_line1","city","state","country","pincode","gstin","paymentModeOptions","h","DropdownItem","updatePaymentMode","FeatherIcon","paymentMode","o","showMessage","mode","finalizeInvoicesDialog","defineAsyncComponent","__vitePreload","renderDialog","changeMethod","provide","_a","_b"],"sources":["../../../../dashboard/src2/components/billing/UpcomingInvoiceDialog.vue","../../../../dashboard/src2/components/billing/BillingSummary.vue","../../../../dashboard/src2/components/billing/BillingDetailsDialog.vue","../../../../dashboard/src2/components/billing/AddCardDialog.vue","../../../../dashboard/src2/components/billing/ChangeCardDialog.vue","../../../../dashboard/src2/components/billing/PaymentDetails.vue","../../../../dashboard/src2/pages/BillingOverview.vue"],"sourcesContent":["<template>\n\t<Dialog\n\t\tv-model=\"props.showInvoiceDialog\"\n\t\t:options=\"{\n\t\t\tsize: '3xl',\n\t\t\ttitle: 'Total usage for this month'\n\t\t}\"\n\t>\n\t\t<template #body-content>\n\t\t\t<template v-if=\"upcomingInvoice.data.upcoming_invoice\">\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"upcomingInvoice.data.upcoming_invoice.status === 'Empty'\"\n\t\t\t\t\tclass=\"text-base text-gray-600\"\n\t\t\t\t>\n\t\t\t\t\tNothing to show\n\t\t\t\t</div>\n\t\t\t\t<InvoiceTable\n\t\t\t\t\tv-else\n\t\t\t\t\t:invoiceId=\"upcomingInvoice.data.upcoming_invoice.name\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div class=\"text-base text-gray-600\">Nothing to show</div>\n\t\t\t</template>\n\t\t</template>\n\t</Dialog>\n</template>\n\n<script setup>\nimport { inject, ref } from 'vue';\nimport InvoiceTable from '../InvoiceTable.vue';\n\nconst { upcomingInvoice } = inject('billing');\nconst props = defineProps({\n\tshowInvoiceDialog: Boolean\n});\n</script>\n","<template>\n\t<div class=\"flex flex-col gap-4\">\n\t\t<div class=\"flex flex-col rounded-lg text-base text-gray-900 shadow\">\n\t\t\t<div class=\"flex flex-col gap-2.5 px-4 py-3\">\n\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t<div class=\"flex flex-col gap-1.5\">\n\t\t\t\t\t\t<div class=\"text-lg font-semibold\">Recurring Charges</div>\n\t\t\t\t\t\t<div class=\"text-gray-700\">\n\t\t\t\t\t\t\t<span>Next charge date — </span>\n\t\t\t\t\t\t\t<span>{{ currentMonthEnd() }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t<div class=\"flex gap-2 text-gray-700\">\n\t\t\t\t\t\t<i-lucide-credit-card class=\"h-4 w-4\" />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Current billing amount so far is </span>\n\t\t\t\t\t\t\t<span class=\"font-medium text-gray-900\">\n\t\t\t\t\t\t\t\t{{ currency }} {{ currentBillingAmount?.toFixed(2) || '0.00' }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button label=\"View Invoice\" @click=\"showInvoiceDialog = true\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if=\"unpaidAmount.data\"\n\t\t\t\tclass=\"m-1.5 flex items-center justify-between rounded-lg bg-gray-50 px-2.5 py-2\"\n\t\t\t>\n\t\t\t\t<div class=\"flex h-7 items-center gap-2 text-gray-800\">\n\t\t\t\t\t<i-lucide-receipt class=\"h-4 w-4\" />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Unpaid amount is </span>\n\t\t\t\t\t\t<span>{{ currency }} {{ unpaidAmount.data?.toFixed(2) }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"solid\" label=\"Pay now\" @click=\"payNow\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<AddPrepaidCreditsDialog\n\t\t\tv-if=\"showAddPrepaidCreditsDialog\"\n\t\t\tv-model=\"showAddPrepaidCreditsDialog\"\n\t\t\t@success=\"upcomingInvoice.reload()\"\n\t\t/>\n\t\t<UpcomingInvoiceDialog v-model=\"showInvoiceDialog\" />\n\t</div>\n</template>\n<script setup>\nimport AddPrepaidCreditsDialog from './AddPrepaidCreditsDialog.vue';\nimport UpcomingInvoiceDialog from './UpcomingInvoiceDialog.vue';\nimport { Button, createResource } from 'frappe-ui';\nimport { ref, computed, inject } from 'vue';\nimport { confirmDialog } from '../../utils/components';\nimport router from '../../router';\n\nconst team = inject('team');\nconst { currentBillingAmount, upcomingInvoice, unpaidInvoices } =\n\tinject('billing');\n\nconst showAddPrepaidCreditsDialog = ref(false);\nconst showInvoiceDialog = ref(false);\n\nconst currency = computed(() => (team.doc.currency == 'INR' ? '₹' : '$'));\n\nconst unpaidAmount = createResource({\n\turl: 'press.api.billing.total_unpaid_amount',\n\tcache: 'unpaidAmount',\n\tauto: true\n});\n\nconst currentMonthEnd = () => {\n\tconst date = new Date();\n\tconst lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\treturn lastDay.toLocaleDateString('en-US', {\n\t\tday: 'numeric',\n\t\tmonth: 'short',\n\t\tyear: 'numeric'\n\t});\n};\n\nfunction payNow() {\n\tteam.doc.payment_mode == 'Prepaid Credits'\n\t\t? (showAddPrepaidCreditsDialog.value = true)\n\t\t: payUnpaidInvoices();\n}\n\nfunction payUnpaidInvoices() {\n\tlet _unpaidInvoices = unpaidInvoices.data;\n\tif (_unpaidInvoices.length > 1) {\n\t\tif (team.doc.payment_mode === 'Prepaid Credits') {\n\t\t\tshowAddPrepaidCreditsDialog.value = true;\n\t\t} else {\n\t\t\tconfirmDialog({\n\t\t\t\ttitle: 'Multiple unpaid invoices',\n\t\t\t\tmessage:\n\t\t\t\t\t'You have multiple unpaid invoices. Please pay them from the invoices page',\n\t\t\t\tprimaryAction: {\n\t\t\t\t\tlabel: 'Go to invoices',\n\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\tonClick: ({ hide }) => {\n\t\t\t\t\t\trouter.push({ name: 'BillingInvoices' });\n\t\t\t\t\t\thide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else {\n\t\tlet invoice = _unpaidInvoices;\n\t\tif (invoice.stripe_invoice_url && team.doc.payment_mode === 'Card') {\n\t\t\twindow.open(\n\t\t\t\t`/api/method/press.api.client.run_doc_method?dt=Invoice&dn=${invoice.name}&method=stripe_payment_url`\n\t\t\t);\n\t\t} else {\n\t\t\tshowAddPrepaidCreditsDialog.value = true;\n\t\t}\n\t}\n}\n</script>\n","<template>\n\t<Dialog v-model=\"show\" :options=\"{ title: 'Billing Details' }\">\n\t\t<template #body-content>\n\t\t\t<div\n\t\t\t\tv-if=\"showMessage\"\n\t\t\t\tclass=\"mb-5 inline-flex gap-1.5 text-base text-gray-700\"\n\t\t\t>\n\t\t\t\t<FeatherIcon class=\"h-4\" name=\"info\" />\n\t\t\t\t<span> Add billing details to your account before proceeding.</span>\n\t\t\t</div>\n\t\t\t<BillingDetails\n\t\t\t\tref=\"billingRef\"\n\t\t\t\t@success=\"\n\t\t\t\t\t() => {\n\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\temit('success');\n\t\t\t\t\t}\n\t\t\t\t\"\n\t\t\t/>\n\t\t</template>\n\t</Dialog>\n</template>\n<script setup>\nimport BillingDetails from './BillingDetails.vue';\nimport { FeatherIcon, Dialog } from 'frappe-ui';\nimport { ref } from 'vue';\n\nconst props = defineProps({\n\tshowMessage: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t}\n});\nconst emit = defineEmits(['success']);\nconst show = defineModel();\nconst billingRef = ref(null);\n</script>\n","<template>\n\t<Dialog v-model=\"show\" :options=\"{ title: 'Add new card' }\">\n\t\t<template #body-content>\n\t\t\t<div\n\t\t\t\tv-if=\"showMessage\"\n\t\t\t\tclass=\"mb-5 inline-flex gap-1.5 text-base text-gray-700\"\n\t\t\t>\n\t\t\t\t<FeatherIcon class=\"h-4\" name=\"info\" />\n\t\t\t\t<span> Add at least one card before changing the payment mode. </span>\n\t\t\t</div>\n\t\t\t<CardForm\n\t\t\t\t@success=\"\n\t\t\t\t\t() => {\n\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\temit('success');\n\t\t\t\t\t}\n\t\t\t\t\"\n\t\t\t/>\n\t\t</template>\n\t</Dialog>\n</template>\n<script setup>\nimport CardForm from './CardForm.vue';\nimport { Dialog, FeatherIcon } from 'frappe-ui';\n\nconst props = defineProps({\n\tshowMessage: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t}\n});\n\nconst emit = defineEmits(['success']);\nconst show = defineModel();\n</script>\n","<template>\n\t<div>\n\t\t<Dialog\n\t\t\tv-model=\"show\"\n\t\t\t:options=\"{ title: 'Choose active card' }\"\n\t\t\t:disableOutsideClickToClose=\"confirmDialogOpened\"\n\t\t>\n\t\t\t<template #body-content>\n\t\t\t\t<div v-if=\"cards.data?.length\" class=\"flex flex-col gap-2.5\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"card in cards.data\"\n\t\t\t\t\t\t:key=\"card.name\"\n\t\t\t\t\t\tclass=\"flex justify-between gap-2 rounded p-2.5 text-base text-gray-900 hover:bg-gray-100\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex gap-2\">\n\t\t\t\t\t\t\t<component :is=\"cardBrandIcon(card.brand)\" class=\"my-auto\" />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div class=\"flex h-7 items-center gap-1 font-medium\">\n\t\t\t\t\t\t\t\t\t<div>{{ card.name_on_card }}</div>\n\t\t\t\t\t\t\t\t\t<div>&middot;</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex gap-1 text-gray-700\">\n\t\t\t\t\t\t\t\t\t\t<div>Card ending in ••••</div>\n\t\t\t\t\t\t\t\t\t\t<div>{{ card.last_4 }}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tv-if=\"card.is_default\"\n\t\t\t\t\t\t\t\t\t\tclass=\"ml-1.5\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Default\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\ttheme=\"green\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-gray-600\">\n\t\t\t\t\t\t\t\t\tExpiry\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tcard.expiry_month < 10\n\t\t\t\t\t\t\t\t\t\t\t? `0${card.expiry_month}`\n\t\t\t\t\t\t\t\t\t\t\t: card.expiry_month\n\t\t\t\t\t\t\t\t\t}}/{{ card.expiry_year }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-if=\"cards.data.length > 1 && !card.is_default\">\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t:options=\"[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: 'Set as default',\n\t\t\t\t\t\t\t\t\t\tonClick: () => setAsDefault(card.name),\n\t\t\t\t\t\t\t\t\t\tcondition: () => !card.is_default\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ label: 'Remove', onClick: () => removeCard(card.name) }\n\t\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button icon=\"more-horizontal\" variant=\"ghost\" />\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template #actions>\n\t\t\t\t<Button\n\t\t\t\t\tlabel=\"Add new card\"\n\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t@click=\"emit('addCard')\"\n\t\t\t\t>\n\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t<FeatherIcon name=\"plus\" class=\"h-4\" />\n\t\t\t\t\t</template>\n\t\t\t\t</Button>\n\t\t\t</template>\n\t\t</Dialog>\n\t</div>\n</template>\n<script setup>\n// import { createDialog } from '../dialogs.js';\nimport {\n\tDropdown,\n\tBadge,\n\tDialog,\n\tButton,\n\tFeatherIcon,\n\tcreateResource\n} from 'frappe-ui';\nimport { cardBrandIcon, confirmDialog } from '../../utils/components';\nimport { ref } from 'vue';\n\nconst emit = defineEmits(['success', 'addCard']);\n\nconst show = defineModel();\n\nconst cards = createResource({\n\turl: 'press.api.billing.get_payment_methods',\n\tcache: 'cards',\n\tauto: true\n});\n\nconst setAsDefault = card => {\n\tcreateResource({\n\t\turl: 'press.api.billing.set_as_default',\n\t\tparams: { name: card },\n\t\tauto: true,\n\t\tonSuccess: () => {\n\t\t\tcards.reload();\n\t\t\temit('success');\n\t\t}\n\t});\n};\n\nconst confirmDialogOpened = ref(false);\nconst removeCard = card => {\n\tconfirmDialogOpened.value = true;\n\tconfirmDialog({\n\t\ttitle: 'Remove Card',\n\t\tmessage: 'Are you sure you want to remove this card?',\n\t\tprimaryAction: {\n\t\t\tlabel: 'Remove',\n\t\t\tvariant: 'solid',\n\t\t\ttheme: 'red',\n\t\t\tonClick: ({ hide }) => {\n\t\t\t\tcreateResource({\n\t\t\t\t\turl: 'press.api.billing.remove_payment_method',\n\t\t\t\t\tparams: { name: card },\n\t\t\t\t\tauto: true,\n\t\t\t\t\tonSuccess: () => {\n\t\t\t\t\t\tcards.reload();\n\t\t\t\t\t\tconfirmDialogOpened.value = false;\n\t\t\t\t\t\thide();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tconfirmDialogOpened.value = false;\n\t\t}\n\t});\n};\n</script>\n","<template>\n\t<div class=\"flex flex-col gap-4\">\n\t\t<div class=\"text-lg font-semibold text-gray-900\">Payment details</div>\n\t\t<div class=\"flex flex-col\">\n\t\t\t<div\n\t\t\t\tv-if=\"team.doc.payment_mode == 'Card'\"\n\t\t\t\tclass=\"flex items-center justify-between text-base text-gray-900\"\n\t\t\t>\n\t\t\t\t<div class=\"flex flex-col gap-1.5\">\n\t\t\t\t\t<div class=\"font-medium\">Active Card</div>\n\t\t\t\t\t<div class=\"overflow-hidden text-ellipsis text-gray-700\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-if=\"team.doc.payment_method\"\n\t\t\t\t\t\t\tclass=\"inline-flex items-center gap-2\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<component :is=\"cardBrandIcon(team.doc.payment_method.brand)\" />\n\t\t\t\t\t\t\t<div class=\"text-gray-700\">\n\t\t\t\t\t\t\t\t<span>{{ team.doc.payment_method.name_on_card }}</span>\n\t\t\t\t\t\t\t\t<span> &middot; Card ending in •••• </span>\n\t\t\t\t\t\t\t\t<span>{{ team.doc.payment_method.last_4 }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span v-else class=\"text-gray-700\">No card added</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shrink-0\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:label=\"team.doc.payment_method ? 'Change card' : 'Add card'\"\n\t\t\t\t\t\t@click=\"changeMethod\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template v-if=\"!team.doc.payment_method\" #prefix>\n\t\t\t\t\t\t\t<FeatherIcon class=\"h-4\" name=\"plus\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if=\"team.doc.payment_mode == 'Card'\"\n\t\t\t\tclass=\"my-3 h-px bg-gray-100\"\n\t\t\t/>\n\t\t\t<div class=\"flex items-center justify-between text-base text-gray-900\">\n\t\t\t\t<div class=\"flex flex-col gap-1.5\">\n\t\t\t\t\t<div class=\"font-medium\">Mode of payment</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"team.doc.payment_mode\"\n\t\t\t\t\t\tclass=\"inline-flex items-center gap-2 text-gray-700\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FeatherIcon class=\"h-4\" name=\"info\" />\n\t\t\t\t\t\t{{ paymentMode.description }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<span v-else class=\"text-gray-700\">Not set</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shrink-0\">\n\t\t\t\t\t<Dropdown :options=\"paymentModeOptions\">\n\t\t\t\t\t\t<template #default=\"{ open }\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t:label=\"team.doc.payment_mode ? paymentMode.label : 'Set mode'\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #suffix>\n\t\t\t\t\t\t\t\t\t<FeatherIcon\n\t\t\t\t\t\t\t\t\t\t:name=\"open ? 'chevron-up' : 'chevron-down'\"\n\t\t\t\t\t\t\t\t\t\tclass=\"h-4\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"my-3 h-px bg-gray-100\" />\n\t\t\t<div class=\"flex items-center justify-between text-base text-gray-900\">\n\t\t\t\t<div class=\"flex flex-col gap-1.5\">\n\t\t\t\t\t<div class=\"font-medium\">Credit balance</div>\n\t\t\t\t\t<div class=\"text-gray-700\">\n\t\t\t\t\t\t{{ availableCredits || currency + ' 0.00' }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shrink-0\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:label=\"'Add credit'\"\n\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tshowMessage = false;\n\t\t\t\t\t\t\t\tif (!billingDetailsSummary) {\n\t\t\t\t\t\t\t\t\tshowMessage = true;\n\t\t\t\t\t\t\t\t\tshowBillingDetailsDialog = true;\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tshowAddPrepaidCreditsDialog = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t<FeatherIcon class=\"h-4\" name=\"plus\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"my-3 h-px bg-gray-100\" />\n\t\t\t<div class=\"flex items-center justify-between text-base text-gray-900\">\n\t\t\t\t<div class=\"flex flex-col gap-1.5\">\n\t\t\t\t\t<div class=\"font-medium\">Billing address</div>\n\t\t\t\t\t<div v-if=\"billingDetailsSummary\" class=\"leading-5 text-gray-700\">\n\t\t\t\t\t\t{{ billingDetailsSummary }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"text-gray-700\">No address</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shrink-0\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:label=\"billingDetailsSummary ? 'Edit ' : 'Add billing address'\"\n\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tshowMessage = false;\n\t\t\t\t\t\t\t\tshowBillingDetailsDialog = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template v-if=\"!billingDetailsSummary\" #prefix>\n\t\t\t\t\t\t\t<FeatherIcon class=\"h-4\" name=\"plus\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<BillingDetailsDialog\n\t\tv-if=\"showBillingDetailsDialog\"\n\t\tv-model=\"showBillingDetailsDialog\"\n\t\t:showMessage=\"showMessage\"\n\t\t@success=\"billingDetails.reload()\"\n\t/>\n\t<AddPrepaidCreditsDialog\n\t\tv-if=\"showAddPrepaidCreditsDialog\"\n\t\tv-model=\"showAddPrepaidCreditsDialog\"\n\t\t:showMessage=\"showMessage\"\n\t\t@success=\"upcomingInvoice.reload()\"\n\t/>\n\t<AddCardDialog\n\t\tv-if=\"showAddCardDialog\"\n\t\tv-model=\"showAddCardDialog\"\n\t\t:showMessage=\"showMessage\"\n\t\t@success=\"\n\t\t\t() => {\n\t\t\t\tshowMessage = false;\n\t\t\t\tshowAddCardDialog = false;\n\t\t\t\tteam.reload();\n\t\t\t}\n\t\t\"\n\t/>\n\t<ChangeCardDialog\n\t\tv-if=\"showChangeCardDialog\"\n\t\tv-model=\"showChangeCardDialog\"\n\t\t@addCard=\"\n\t\t\t() => {\n\t\t\t\tshowChangeCardDialog = false;\n\t\t\t\tshowAddCardDialog = true;\n\t\t\t}\n\t\t\"\n\t\t@success=\"() => team.reload()\"\n\t/>\n</template>\n<script setup>\nimport DropdownItem from './DropdownItem.vue';\nimport BillingDetailsDialog from './BillingDetailsDialog.vue';\nimport AddPrepaidCreditsDialog from './AddPrepaidCreditsDialog.vue';\nimport AddCardDialog from './AddCardDialog.vue';\nimport ChangeCardDialog from './ChangeCardDialog.vue';\nimport { Dropdown, Button, FeatherIcon, createResource } from 'frappe-ui';\nimport {\n\tcardBrandIcon,\n\tconfirmDialog,\n\trenderDialog,\n} from '../../utils/components';\nimport { computed, ref, inject, h, defineAsyncComponent } from 'vue';\nimport router from '../../router';\n\nconst team = inject('team');\nconst {\n\tavailableCredits,\n\tupcomingInvoice,\n\tcurrentBillingAmount,\n\tunpaidInvoices,\n} = inject('billing');\n\nconst showBillingDetailsDialog = ref(false);\nconst showAddPrepaidCreditsDialog = ref(false);\nconst showAddCardDialog = ref(false);\nconst showChangeCardDialog = ref(false);\n\nconst currency = computed(() => (team.doc.currency == 'INR' ? '₹' : '$'));\n\nconst billingDetails = createResource({\n\turl: 'press.api.account.get_billing_information',\n\tcache: 'billingDetails',\n\tauto: true,\n});\n\nconst changePaymentMode = createResource({\n\turl: 'press.api.billing.change_payment_mode',\n\tonSuccess: () => setTimeout(() => team.reload(), 1000),\n});\n\nconst billingDetailsSummary = computed(() => {\n\tlet _billingDetails = billingDetails.data;\n\tif (!_billingDetails) return '';\n\n\tconst { billing_name, address_line1, city, state, country, pincode, gstin } =\n\t\t_billingDetails || {};\n\treturn [\n\t\tbilling_name,\n\t\taddress_line1,\n\t\tcity,\n\t\tstate,\n\t\tcountry,\n\t\tpincode,\n\t\tgstin == 'Not Applicable' ? '' : gstin,\n\t]\n\t\t.filter(Boolean)\n\t\t.join(', ');\n});\n\nconst paymentModeOptions = [\n\t{\n\t\tlabel: 'Card',\n\t\tvalue: 'Card',\n\t\tdescription: 'Your card will be charged for monthly subscription',\n\t\tcomponent: () =>\n\t\t\th(DropdownItem, {\n\t\t\t\tlabel: 'Card',\n\t\t\t\tactive: team.doc.payment_mode === 'Card',\n\t\t\t\tonClick: () => updatePaymentMode('Card'),\n\t\t\t}),\n\t},\n\t{\n\t\tlabel: 'Prepaid credits',\n\t\tvalue: 'Prepaid Credits',\n\t\tdescription:\n\t\t\t'You will be charged from your credit balance for monthly subscription',\n\t\tcomponent: () =>\n\t\t\th(DropdownItem, {\n\t\t\t\tlabel: 'Prepaid credits',\n\t\t\t\tactive: team.doc.payment_mode === 'Prepaid Credits',\n\t\t\t\tonClick: () => updatePaymentMode('Prepaid Credits'),\n\t\t\t}),\n\t},\n\t{\n\t\tlabel: 'Paid by Partner',\n\t\tvalue: 'Paid By Partner',\n\t\tcondition: () => team.doc.partner_email,\n\t\tdescription: 'Your partner will be charged for monthly subscription',\n\t\tcomponent: () =>\n\t\t\th(DropdownItem, {\n\t\t\t\tlabel: 'Paid by Partner',\n\t\t\t\tactive: team.doc.payment_mode === 'Paid by Partner',\n\t\t\t\tonClick: () =>\n\t\t\t\t\tconfirmDialog({\n\t\t\t\t\t\ttitle: 'Confirm Payment Mode',\n\t\t\t\t\t\tmessage: `By changing the payment mode to <strong>Paid by Partner</strong>, following details will be shared with your partner: <br><br><li>Site/Server name</li> <li>Plan name</li><li>Number of days site/server is active</li><br>Are you sure you want to proceed?`,\n\t\t\t\t\t\tprimaryAction: {\n\t\t\t\t\t\t\tlabel: 'Change Payment Mode',\n\t\t\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\t\t\tonClick: ({ hide }) => {\n\t\t\t\t\t\t\t\tupdatePaymentMode('Paid By Partner');\n\t\t\t\t\t\t\t\thide();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t}),\n\t},\n\t{\n\t\tcomponent: () =>\n\t\t\th('div', [\n\t\t\t\th('div', { class: 'border-t border-gray-200 my-1' }),\n\t\t\t\th(DropdownItem, null, {\n\t\t\t\t\tdefault: () =>\n\t\t\t\t\t\th('div', { class: 'flex gap-2' }, [\n\t\t\t\t\t\t\th(\n\t\t\t\t\t\t\t\t'a',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\thref: 'https://easytouch.cloud/payment-options',\n\t\t\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'Alternate Payment Methods',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\th(FeatherIcon, { name: 'external-link', class: 'h-4' }),\n\t\t\t\t\t\t]),\n\t\t\t\t}),\n\t\t\t]),\n\t},\n];\n\nconst paymentMode = computed(() => {\n\treturn paymentModeOptions.find((o) => o.value === team.doc.payment_mode);\n});\n\nfunction payUnpaidInvoices() {\n\tlet _unpaidInvoices = unpaidInvoices.data;\n\tif (_unpaidInvoices.length > 1) {\n\t\tif (team.doc.payment_mode === 'Prepaid Credits') {\n\t\t\tshowAddPrepaidCreditsDialog.value = true;\n\t\t} else {\n\t\t\tconfirmDialog({\n\t\t\t\ttitle: 'Multiple unpaid invoices',\n\t\t\t\tmessage:\n\t\t\t\t\t'You have multiple unpaid invoices. Please pay them from the invoices page',\n\t\t\t\tprimaryAction: {\n\t\t\t\t\tlabel: 'Go to invoices',\n\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\tonClick: ({ hide }) => {\n\t\t\t\t\t\trouter.push({ name: 'BillingInvoices' });\n\t\t\t\t\t\thide();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t} else {\n\t\tlet invoice = _unpaidInvoices[0];\n\t\tif (invoice.stripe_invoice_url && team.doc.payment_mode === 'Card') {\n\t\t\twindow.open(\n\t\t\t\t`/api/method/press.api.client.run_doc_method?dt=Invoice&dn=${invoice.name}&method=stripe_payment_url`,\n\t\t\t);\n\t\t} else {\n\t\t\tshowAddPrepaidCreditsDialog.value = true;\n\t\t}\n\t}\n}\n\nconst showMessage = ref(false);\nfunction updatePaymentMode(mode) {\n\tshowMessage.value = false;\n\tif (!billingDetailsSummary.value) {\n\t\tshowMessage.value = true;\n\t\tshowBillingDetailsDialog.value = true;\n\t\treturn;\n\t}\n\tif (mode === 'Prepaid Credits' && team.doc.balance === 0) {\n\t\tshowMessage.value = true;\n\t\tshowAddPrepaidCreditsDialog.value = true;\n\t\treturn;\n\t} else if (mode === 'Card' && !team.doc.payment_method) {\n\t\tshowMessage.value = true;\n\t\tshowAddCardDialog.value = true;\n\t} else if (mode === 'Paid By Partner' && Boolean(unpaidInvoices.data.length > 0)) {\n\t\tif (unpaidInvoices.data) {\n\t\t\tpayUnpaidInvoices();\n\t\t\treturn;\n\t\t}\n\t\tif (currentBillingAmount.value) {\n\t\t\tconst finalizeInvoicesDialog = defineAsyncComponent(\n\t\t\t\t() => import('./FinalizeInvoicesDialog.vue'),\n\t\t\t);\n\t\t\trenderDialog(h(finalizeInvoicesDialog));\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!changePaymentMode.loading) changePaymentMode.submit({ mode });\n}\n\nfunction changeMethod() {\n\tif (team.doc.payment_method) {\n\t\tshowChangeCardDialog.value = true;\n\t} else {\n\t\tshowMessage.value = false;\n\t\tshowAddCardDialog.value = true;\n\t}\n}\n</script>\n","<template>\n\t<div\n\t\tv-if=\"team.doc\"\n\t\tclass=\"flex flex-1 flex-col gap-8 overflow-y-auto px-60 pt-6\"\n\t>\n\t\t<BillingSummary />\n\t\t<PaymentDetails />\n\t</div>\n\t<div v-else class=\"mt-12 flex flex-1 items-center justify-center\">\n\t\t<Spinner class=\"h-8\" />\n\t</div>\n</template>\n\n<script setup>\nimport BillingSummary from '../components/billing/BillingSummary.vue';\nimport PaymentDetails from '../components/billing/PaymentDetails.vue';\nimport { Spinner, createResource } from 'frappe-ui';\nimport { computed, provide, inject } from 'vue';\n\nconst team = inject('team');\n\nconst upcomingInvoice = createResource({\n\turl: 'press.api.billing.upcoming_invoice',\n\tcache: 'upcomingInvoice',\n\tauto: true\n});\n\nconst unpaidInvoices = createResource({\n\turl: 'press.api.billing.get_unpaid_invoices',\n\tcache: ['unpaidInvoices', team.name],\n\tauto: true\n});\n\nprovide('billing', {\n\tupcomingInvoice,\n\tavailableCredits: computed(() => upcomingInvoice.data?.available_credits),\n\tcurrentBillingAmount: computed(\n\t\t() => upcomingInvoice.data?.upcoming_invoice?.total\n\t),\n\tunpaidInvoices\n});\n</script>\n"],"file":"assets/BillingOverview-CYSElgdR.js"}