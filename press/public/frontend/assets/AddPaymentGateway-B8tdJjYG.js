var u=(a,e,o)=>new Promise((d,t)=>{var m=l=>{try{i(o.next(l))}catch(n){t(n)}},s=l=>{try{i(o.throw(l))}catch(n){t(n)}},i=l=>l.done?d(l.value):Promise.resolve(l.value).then(m,s);i((o=o.apply(a,e)).next())});import{x as g,h as w,o as f,w as c,j as p,A as r,a8 as G,X as b,Y as h,aA as x,V as _}from"./main-Dpl-JOF2.js";(function(){try{var a=typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},e=new Error().stack;e&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[e]="43748e28-82bc-40bd-ab69-3606841f669a",a._sentryDebugIdIdentifier="sentry-dbid-43748e28-82bc-40bd-ab69-3606841f669a")}catch(o){}})();{var y=typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};y._sentryModuleMetadata=y._sentryModuleMetadata||{},y._sentryModuleMetadata[new Error().stack]=Object.assign({},y._sentryModuleMetadata[new Error().stack],{"_sentryBundlerPluginAppKey:press-dashboard":!0})}const D={name:"AddPaymentGateway",data(){return{paymentGatewayDetails:{currency:"KES",gateway_name:"",gateway_setting:"Mpesa Setup",gateway_controller:"",url:"",api_key:"",api_secret:"",taxes_and_charges:"",print_format:""},integrationLogo:null}},resources:{getPaymentGatewayDetails(){return{url:"press.api.regional_payments.mpesa.utils.get_payment_gateway_details",onSuccess(a){Object.assign(this.paymentGatewayDetails,{currency:a.currency,gateway_name:a.gateway_name,url:a.url,api_key:a.api_key,api_secret:a.api_secret,taxes_and_charges:a.taxes_and_charges,print_format:a.print_format})},auto:!0}},createPaymentGatewaySettings(){return{url:"press.api.regional_payments.mpesa.utils.update_payment_gateway_settings",makeParams(){return{gateway_details:this.paymentGatewayDetails}},validate(){if(Object.values(this.paymentGatewayDetails).includes(""))return this.errorMessage="Please fill required values","Please fill required values"},onSuccess(e){return u(this,null,function*(){e?_.success("Payment Gateway settings saved",e):_.error("Error saving Payment Gateway settings")})}}},fetchGatewayController(){return{url:"press.api.regional_payments.mpesa.utils.get_gateway_controller",method:"GET",auto:!0,onSuccess:a=>{Object.assign(this.paymentGatewayDetails,{gateway_controller:a})}}}},methods:{handleFileUpload(a){this.integrationLogo=a.target.files[0]},savePaymentGateway(){return u(this,null,function*(){try{yield this.$resources.createPaymentGatewaySettings.submit(),this.$emit("closeDialog")}catch(a){this.$toast.error(`Error saving Payment Gateway settings: ${a.message}`)}})}},watch:{integrationLogo:function(){this.handleFileUpload()}}},V={class:"flex flex-col gap-4"},P={class:"flex gap-4"},v={class:"flex gap-4"},k={class:"mt-4 flex w-full bg-red-300 items-center justify-center"};function E(a,e,o,d,t,m){const s=G,i=b,l=x;return f(),w(l,{options:{title:"Add Payment Gateway",size:"lg"}},{"body-content":c(()=>[p("div",V,[r(s,{label:"Gateway Name",modelValue:t.paymentGatewayDetails.gateway_name,"onUpdate:modelValue":e[0]||(e[0]=n=>t.paymentGatewayDetails.gateway_name=n),name:"gateway_name",type:"text",placeholder:"Enter Gateway Name"},null,8,["modelValue"]),r(s,{label:"Endpoint URL",modelValue:t.paymentGatewayDetails.url,"onUpdate:modelValue":e[1]||(e[1]=n=>t.paymentGatewayDetails.url=n),name:"url",type:"text",placeholder:"https://xyz.com/api/method/<endpoint>"},null,8,["modelValue"]),p("div",P,[r(s,{label:"API Key",modelValue:t.paymentGatewayDetails.api_key,"onUpdate:modelValue":e[2]||(e[2]=n=>t.paymentGatewayDetails.api_key=n),name:"api_key",type:"text",placeholder:"Enter API Key"},null,8,["modelValue"]),r(s,{label:"API Secret",modelValue:t.paymentGatewayDetails.api_secret,"onUpdate:modelValue":e[3]||(e[3]=n=>t.paymentGatewayDetails.api_secret=n),name:"api_secret",type:"text",placeholder:"Enter API Secret"},null,8,["modelValue"])]),p("div",v,[r(s,{label:"Currency",modelValue:t.paymentGatewayDetails.currency,"onUpdate:modelValue":e[4]||(e[4]=n=>t.paymentGatewayDetails.currency=n),name:"currency",type:"text",placeholder:"e.g KES"},null,8,["modelValue"]),r(s,{label:"Taxes and Charges(%)",modelValue:t.paymentGatewayDetails.taxes_and_charges,"onUpdate:modelValue":e[5]||(e[5]=n=>t.paymentGatewayDetails.taxes_and_charges=n),name:"taxes_and_charges",type:"text",placeholder:"Enter Taxes and Charges"},null,8,["modelValue"])]),r(s,{label:"Print Format",modelValue:t.paymentGatewayDetails.print_format,"onUpdate:modelValue":e[6]||(e[6]=n=>t.paymentGatewayDetails.print_format=n),name:"print_format",type:"text",placeholder:"Default"},null,8,["modelValue"])]),p("div",k,[r(i,{onClick:m.savePaymentGateway,variant:"solid",class:"justify-center w-full font-bold"},{default:c(()=>e[7]||(e[7]=[h("Save")])),_:1},8,["onClick"])])]),_:1})}const U=g(D,[["render",E]]);export{U as default};
//# sourceMappingURL=AddPaymentGateway-B8tdJjYG.js.map
