{"version":3,"file":"ServerAnalytics-Bx5M123k.js","sources":["../../../../dashboard/src/views/server/ServerAnalytics.vue"],"sourcesContent":["<template>\n\t<div class=\"space-y-4\">\n\t\t<div class=\"flex space-x-2\">\n\t\t\t<FormControl\n\t\t\t\tclass=\"w-40\"\n\t\t\t\tlabel=\"Server\"\n\t\t\t\ttype=\"select\"\n\t\t\t\t:options=\"serverOptions\"\n\t\t\t\tv-model=\"chosenServer\"\n\t\t\t/>\n\t\t\t<FormControl\n\t\t\t\tclass=\"w-32\"\n\t\t\t\tlabel=\"Duration\"\n\t\t\t\ttype=\"select\"\n\t\t\t\t:options=\"\n\t\t\t\t\tdurationOptions.map(option => ({ label: option, value: option }))\n\t\t\t\t\"\n\t\t\t\tv-model=\"duration\"\n\t\t\t/>\n\t\t</div>\n\t\t<div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2\">\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"CPU\"\n\t\t\t\t:key=\"cpuData\"\n\t\t\t\t:data=\"cpuData\"\n\t\t\t\tunit=\"%\"\n\t\t\t\t:chartTheme=\"[\n\t\t\t\t\t$theme.colors.green[500], // idle\n\t\t\t\t\t$theme.colors.red[500], // iowait\n\t\t\t\t\t$theme.colors.yellow[500], // irq\n\t\t\t\t\t$theme.colors.pink[500], // nice\n\t\t\t\t\t$theme.colors.purple[500], // softirq\n\t\t\t\t\t$theme.colors.blue[500], // steal\n\t\t\t\t\t$theme.colors.teal[500], // system\n\t\t\t\t\t$theme.colors.cyan[500] // user\n\t\t\t\t]\"\n\t\t\t\t:loading=\"$resources.cpu.loading\"\n\t\t\t\t:error=\"$resources.cpu.error\"\n\t\t\t/>\n\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"Load Average\"\n\t\t\t\t:key=\"loadAverageData\"\n\t\t\t\t:data=\"loadAverageData\"\n\t\t\t\t:chartTheme=\"[\n\t\t\t\t\t$theme.colors.green[500],\n\t\t\t\t\t$theme.colors.yellow[400],\n\t\t\t\t\t$theme.colors.red[500]\n\t\t\t\t]\"\n\t\t\t\t:loading=\"$resources.loadavg.loading\"\n\t\t\t\t:error=\"$resources.loadavg.error\"\n\t\t\t/>\n\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"Memory\"\n\t\t\t\t:key=\"memoryData\"\n\t\t\t\t:data=\"memoryData\"\n\t\t\t\tunit=\"bytes\"\n\t\t\t\t:chartTheme=\"[$theme.colors.yellow[500]]\"\n\t\t\t\t:loading=\"$resources.memory.loading\"\n\t\t\t\t:error=\"$resources.memory.error\"\n\t\t\t/>\n\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"Disk Space\"\n\t\t\t\t:key=\"spaceData\"\n\t\t\t\t:data=\"spaceData\"\n\t\t\t\tunit=\"%\"\n\t\t\t\t:chartTheme=\"[$theme.colors.red[500]]\"\n\t\t\t\t:loading=\"$resources.space.loading\"\n\t\t\t\t:error=\"$resources.space.error\"\n\t\t\t/>\n\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"Network\"\n\t\t\t\t:key=\"networkData\"\n\t\t\t\t:data=\"networkData\"\n\t\t\t\tunit=\"bytes\"\n\t\t\t\t:chartTheme=\"[$theme.colors.blue[500]]\"\n\t\t\t\t:loading=\"$resources.network.loading\"\n\t\t\t\t:error=\"$resources.network.error\"\n\t\t\t/>\n\t\t\t<LineChart\n\t\t\t\ttype=\"time\"\n\t\t\t\ttitle=\"Disk I/O\"\n\t\t\t\t:key=\"iopsData\"\n\t\t\t\t:data=\"iopsData\"\n\t\t\t\tunit=\"I0ps\"\n\t\t\t\t:chartTheme=\"[$theme.colors.purple[500]]\"\n\t\t\t\t:loading=\"$resources.iops.loading\"\n\t\t\t\t:error=\"$resources.iops.error\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { DateTime } from 'luxon';\nimport { getCachedDocumentResource } from 'frappe-ui';\nimport LineChart from '@/components/charts/LineChart.vue';\n\nexport default {\n\tname: 'ServerAnalytics',\n\tprops: ['serverName'],\n\tcomponents: {\n\t\tLineChart\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tduration: '1 Hour',\n\t\t\tchosenServer: this.$route.query.server ?? this.serverName,\n\t\t\tdurationOptions: ['1 Hour', '6 Hour', '24 Hour', '7 Days', '15 Days']\n\t\t};\n\t},\n\twatch: {\n\t\tchosenServer() {\n\t\t\tthis.$router.push({\n\t\t\t\tquery: {\n\t\t\t\t\tserver: this.chosenServer\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tresources: {\n\t\tloadavg() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'loadavg',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t},\n\t\tcpu() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'cpu',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t},\n\t\tmemory() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'memory',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t},\n\t\tnetwork() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'network',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t},\n\t\tiops() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'iops',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t},\n\t\tspace() {\n\t\t\tlet localTimezone = DateTime.local().zoneName;\n\t\t\treturn {\n\t\t\t\turl: 'press.api.server.analytics',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.chosenServer,\n\t\t\t\t\ttimezone: localTimezone,\n\t\t\t\t\tquery: 'space',\n\t\t\t\t\tduration: this.duration\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t}\n\t},\n\tcomputed: {\n\t\t$server() {\n\t\t\treturn getCachedDocumentResource('Server', this.serverName);\n\t\t},\n\t\tserverOptions() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Application Server',\n\t\t\t\t\tvalue: this.$server.doc.name\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Database Server',\n\t\t\t\t\tvalue: this.$server.doc.database_server\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Replication Server',\n\t\t\t\t\tvalue: this.$server.doc.replication_server\n\t\t\t\t}\n\t\t\t].filter(v => v.value);\n\t\t},\n\t\tloadAverageData() {\n\t\t\tlet loadavg = this.$resources.loadavg.data;\n\t\t\tif (!loadavg) return;\n\n\t\t\tloadavg.datasets.sort(\n\t\t\t\t(a, b) => Number(a.name.split(' ')[2]) - Number(b.name.split(' ')[2])\n\t\t\t);\n\n\t\t\treturn this.transformMultiLineChartData(loadavg);\n\t\t},\n\t\tcpuData() {\n\t\t\tlet cpu = this.$resources.cpu.data;\n\t\t\tif (!cpu) return;\n\n\t\t\treturn this.transformMultiLineChartData(cpu, 'cpu', true);\n\t\t},\n\t\tmemoryData() {\n\t\t\tlet memory = this.$resources.memory.data;\n\t\t\tif (!memory) return;\n\n\t\t\treturn this.transformSingleLineChartData(memory);\n\t\t},\n\t\tiopsData() {\n\t\t\tlet iops = this.$resources.iops.data;\n\t\t\tif (!iops) return;\n\n\t\t\treturn this.transformSingleLineChartData(iops);\n\t\t},\n\t\tspaceData() {\n\t\t\tlet space = this.$resources.space.data;\n\t\t\tif (!space) return;\n\n\t\t\treturn this.transformSingleLineChartData(space, true);\n\t\t},\n\t\tnetworkData() {\n\t\t\tlet network = this.$resources.network.data;\n\t\t\tif (!network) return;\n\n\t\t\treturn this.transformSingleLineChartData(network);\n\t\t}\n\t},\n\tmethods: {\n\t\ttransformSingleLineChartData(data, percentage = false) {\n\t\t\tif (!data.datasets?.length) return;\n\n\t\t\tlet dataset = [];\n\t\t\tconst name = data.datasets ? data.datasets[0]?.name : null;\n\t\t\tfor (let index = 0; index < data.datasets[0].values.length; index++) {\n\t\t\t\tdataset.push([\n\t\t\t\t\t+new Date(data.labels[index]),\n\t\t\t\t\tdata.datasets[0].values[index]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdatasets: [{ dataset: dataset, name }],\n\t\t\t\tyMax: percentage ? 100 : null\n\t\t\t};\n\t\t},\n\t\ttransformMultiLineChartData(data, stack = null, percentage = false) {\n\t\t\tif (!data.datasets?.length) return;\n\n\t\t\tlet total = [];\n\t\t\tif (percentage) {\n\t\t\t\t// the sum of each cpu values tends to differ by few values\n\t\t\t\t// so we need to calculate the total for each timestamp\n\t\t\t\tfor (let i = 0; i < data.datasets[0].values.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < data.datasets.length; j++) {\n\t\t\t\t\t\tif (!total[i]) total[i] = 0;\n\t\t\t\t\t\ttotal[i] += data.datasets[j].values[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst datasets = data.datasets.map(({ name, values }) => {\n\t\t\t\tlet dataset = [];\n\t\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\t\tdataset.push([\n\t\t\t\t\t\t+new Date(data.labels[i]),\n\t\t\t\t\t\tpercentage ? (values[i] / total[i]) * 100 : values[i]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn { name, dataset, stack };\n\t\t\t});\n\n\t\t\treturn { datasets, yMax: percentage ? 100 : null };\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","LineChart","localTimezone","DateTime","v","loadavg","cpu","memory","iops","space","network","_a","data","dataset","name","percentage","j","total","i","values","_hoisted_1","_hoisted_2","_hoisted_3","_openBlock","_createElementBlock","_createElementVNode","$options","$data","_cache","$event","option","_ctx"],"mappings":"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"}