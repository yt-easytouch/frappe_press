{"version":3,"file":"TeamSettings-CR36DDCZ.js","sources":["../../../../dashboard/node_modules/frappe-ui/src/components/Input.vue","../../../../dashboard/src/views/settings/EditPermissions.vue","../../../../dashboard/src/views/settings/ManageGroupMembers.vue","../../../../dashboard/src/views/settings/AccountGroups.vue","../../../../dashboard/src/views/settings/AccountMembers.vue","../../../../dashboard/src/views/settings/TeamSettings.vue"],"sourcesContent":["<template>\n  <label :class=\"[type == 'checkbox' ? 'flex' : 'block', $attrs.class]\">\n    <span\n      v-if=\"label && type != 'checkbox'\"\n      class=\"mb-2 block text-sm leading-4 text-gray-700\"\n    >\n      {{ label }}\n    </span>\n    <div\n      class=\"relative flex\"\n      :class=\"{ 'items-center': isNormalInput || type == 'select' }\"\n    >\n      <FeatherIcon\n        v-if=\"iconLeft && type != 'checkbox'\"\n        :name=\"iconLeft\"\n        class=\"absolute mx-2 h-4 w-4 text-gray-600\"\n        :class=\"{ 'mt-2': type == 'textarea' }\"\n      />\n      <input\n        v-if=\"isNormalInput\"\n        v-bind=\"inputAttributes\"\n        class=\"border-gray-400 placeholder-gray-500\"\n        ref=\"input\"\n        :class=\"[\n          {\n            'form-input block w-full': type != 'checkbox',\n            'form-checkbox': type == 'checkbox',\n            'pl-8': iconLeft && type != 'checkbox',\n          },\n          inputClass,\n        ]\"\n        :type=\"type || 'text'\"\n        :disabled=\"disabled\"\n        :placeholder=\"placeholder\"\n        :value=\"passedInputValue\"\n      />\n      <textarea\n        v-if=\"type === 'textarea'\"\n        v-bind=\"inputAttributes\"\n        :placeholder=\"placeholder\"\n        class=\"placeholder-gray-500\"\n        :class=\"[\n          'form-textarea block w-full resize-none',\n          inputClass,\n          {\n            'pl-8': iconLeft,\n          },\n        ]\"\n        ref=\"input\"\n        :value=\"passedInputValue\"\n        :disabled=\"disabled\"\n        :rows=\"rows\"\n      ></textarea>\n      <select\n        v-if=\"type === 'select'\"\n        v-bind=\"inputAttributes\"\n        class=\"form-select block w-full\"\n        :class=\"{ 'pl-8': iconLeft }\"\n        ref=\"input\"\n        :disabled=\"disabled\"\n      >\n        <option\n          v-for=\"option in selectOptions\"\n          :key=\"option.value\"\n          :value=\"option.value\"\n          :disabled=\"option.disabled || false\"\n          :selected=\"passedInputValue === option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div>\n    <span\n      v-if=\"label && type == 'checkbox'\"\n      class=\"ml-2 inline-block text-base leading-4\"\n    >\n      {{ label }}\n    </span>\n  </label>\n</template>\n\n<script>\nimport debounce from '../utils/debounce.ts'\nimport FeatherIcon from './FeatherIcon.vue'\n\nexport default {\n  name: 'Input',\n  inheritAttrs: false,\n  expose: ['getInputValue'],\n  components: { FeatherIcon },\n  props: {\n    label: {\n      type: String,\n    },\n    type: {\n      type: String,\n      default: 'text',\n      validator(value) {\n        let isValid = [\n          'text',\n          'number',\n          'checkbox',\n          'textarea',\n          'select',\n          'email',\n          'password',\n          'date',\n        ].includes(value)\n        if (!isValid) {\n          console.warn(`Invalid value \"${value}\" for \"type\" prop for Input`)\n        }\n        return isValid\n      },\n    },\n    modelValue: {\n      type: [String, Number, Boolean, Object, Array],\n    },\n    inputClass: {\n      type: [String, Array, Object],\n    },\n    debounce: {\n      type: Number,\n    },\n    options: {\n      type: Array,\n    },\n    disabled: {\n      type: Boolean,\n    },\n    rows: {\n      type: Number,\n      default: 3,\n    },\n    placeholder: {\n      type: String,\n    },\n    iconLeft: {\n      type: String,\n    },\n  },\n  emits: ['input', 'change', 'update:modelValue'],\n  methods: {\n    focus() {\n      this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input.blur()\n    },\n    getInputValue(e) {\n      let $input = e ? e.target : this.$refs.input\n      let value = $input.value\n      if (this.type == 'checkbox') {\n        value = $input.checked\n      }\n      return value\n    },\n  },\n  computed: {\n    passedInputValue() {\n      if ('value' in this.$attrs) {\n        return this.$attrs.value\n      }\n      return this.modelValue || null\n    },\n    inputAttributes() {\n      let attrs = {}\n      let onInput = (e) => {\n        this.$emit('input', this.getInputValue(e))\n      }\n      if (this.debounce) {\n        onInput = debounce(onInput, this.debounce)\n      }\n      if (this.type == 'checkbox') {\n        attrs.checked = this.passedInputValue\n      }\n      return Object.assign(attrs, this.$attrs, {\n        onInput,\n        onChange: (e) => {\n          this.$emit('change', this.getInputValue(e))\n          this.$emit('update:modelValue', this.getInputValue(e))\n        },\n      })\n    },\n    selectOptions() {\n      return this.options\n        .map((option) => {\n          if (typeof option === 'string') {\n            return {\n              label: option,\n              value: option,\n            }\n          }\n          return option\n        })\n        .filter(Boolean)\n    },\n    isNormalInput() {\n      return [\n        'text',\n        'number',\n        'checkbox',\n        'email',\n        'password',\n        'date',\n      ].includes(this.type)\n    },\n  },\n}\n</script>\n<style>\n.form-select {\n  background-image: url(\"data:image/svg+xml;utf8,<svg fill='none' width='8' xmlns='http://www.w3.org/2000/svg' viewBox='-4 -2 16 16'><path d='M4.5 3.636 6.136 2l1.637 1.636M4.5 8.364 6.136 10l1.637-1.636' stroke='%23333C44' stroke-linecap='round' stroke-linejoin='round'/></svg>\");\n}\n</style>\n","<template>\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: `Editing permissions for ${\n\t\t\t\ttype === 'group' ? 'group' : 'member'\n\t\t\t} ${name}`,\n\t\t\tsize: '3xl'\n\t\t}\"\n\t\t:modelValue=\"show\"\n\t\t@after-leave=\"\n\t\t\t() => {\n\t\t\t\t$emit('close', true);\n\t\t\t}\n\t\t\"\n\t>\n\t\t<template v-slot:body-content>\n\t\t\t<Input\n\t\t\t\tclass=\"mb-2\"\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t\tv-on:input=\"e => updateSearchTerm(e)\"\n\t\t\t/>\n\t\t\t<LoadingText v-if=\"$resources.options.loading\" />\n\t\t\t<div v-else class=\"flex flex-col max-h-96 overflow-auto\">\n\t\t\t\t<div v-if=\"options.length === 0\" class=\"mt-4 text-center\">\n\t\t\t\t\t<span class=\"text-gray-500\">\n\t\t\t\t\t\tNo options available to add permissions, let's create somes sites!\n\t\t\t\t\t\t<router-link :to=\"'/sites/new'\" class=\"text-gray-900\">\n\t\t\t\t\t\t\tClick here\n\t\t\t\t\t\t</router-link>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-else\n\t\t\t\t\tv-for=\"(option, index) in filteredList\"\n\t\t\t\t\tclass=\"border-b pt-2\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"mr-2 mt-4 w-full pb-2 text-lg text-gray-600\">\n\t\t\t\t\t\t{{ option.doctype }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"inline-block align-middle text-base font-bold\">\n\t\t\t\t\t\t{{ option.title ? option.title : option.name }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclass=\"pt-4\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tlabel=\"Select All\"\n\t\t\t\t\t\t@change=\"val => toggleSelectAll(option, index, val)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"grid grid-cols-4 gap-4 py-4\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-for=\"[label, action] in Object.entries(actions[option.doctype])\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t:checked=\"isSelected(option, action)\"\n\t\t\t\t\t\t\t:label=\"label\"\n\t\t\t\t\t\t\t@change=\"() => updateAction(option, index, action)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template v-slot:actions>\n\t\t\t<Button\n\t\t\t\tvariant=\"solid\"\n\t\t\t\tclass=\"w-full\"\n\t\t\t\t@click=\"$resources.updatePermissions.submit()\"\n\t\t\t\t:disabled=\"options.length === 0\"\n\t\t\t>\n\t\t\t\tSave\n\t\t\t</Button>\n\t\t</template>\n\t</Dialog>\n</template>\n\n<script>\nimport Fuse from 'fuse.js/dist/fuse.basic.esm';\nimport { notify } from '@/utils/toast';\n\nexport default {\n\tname: 'EditPermissions',\n\tprops: ['show', 'name', 'type'],\n\tdata() {\n\t\treturn {\n\t\t\tupdated: {},\n\t\t\tfilteredList: []\n\t\t};\n\t},\n\tresources: {\n\t\toptions() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.account.get_permission_options',\n\t\t\t\tauto: true,\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.name,\n\t\t\t\t\tptype: this.type\n\t\t\t\t},\n\t\t\t\tonSuccess(r) {\n\t\t\t\t\tthis.fuse = new Fuse(r.options, {\n\t\t\t\t\t\tkeys: ['doctype', 'name', 'title'],\n\t\t\t\t\t\tthreshold: 0.3\n\t\t\t\t\t});\n\t\t\t\t\tthis.filteredList = r.options;\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tupdatePermissions() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.account.update_permissions',\n\t\t\t\tparams: {\n\t\t\t\t\tuser: this.name,\n\t\t\t\t\tptype: this.type,\n\t\t\t\t\tupdated: this.updated\n\t\t\t\t},\n\t\t\t\tonSuccess() {\n\t\t\t\t\tnotify({\n\t\t\t\t\t\ttitle: 'Permissions Updated',\n\t\t\t\t\t\tcolor: 'green',\n\t\t\t\t\t\ticon: 'check'\n\t\t\t\t\t});\n\t\t\t\t\tthis.$emit('close', true);\n\t\t\t\t\tthis.$resources.options.fetch();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tisSelected(option, action) {\n\t\t\tlet alreadyAdded = false;\n\t\t\tif (option.perms !== null) {\n\t\t\t\talreadyAdded = option.perms.includes(action);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\talreadyAdded ||\n\t\t\t\t(this.updated?.[option.doctype]?.[option.name] || []).includes(action)\n\t\t\t);\n\t\t},\n\t\tupdateSearchTerm(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.filteredList = this.fuse.search(value).map(result => result.item);\n\t\t\t} else {\n\t\t\t\tthis.filteredList = this.options;\n\t\t\t}\n\t\t},\n\t\tupdateAction(option, index, action) {\n\t\t\t// create updated object for doctype if it doesn't exists\n\t\t\tif (!this.updated[option.doctype]) {\n\t\t\t\t// if an entry for docname doesn't exists add it to update object with default permission\n\t\t\t\tthis.updated[option.doctype] = {};\n\t\t\t}\n\t\t\t// create updated record for docname if it doesn't exists and set all existing perms\n\t\t\tif (!this.updated[option.doctype][option.name]) {\n\t\t\t\tthis.updated[option.doctype][option.name] =\n\t\t\t\t\toption.perms === null ? [] : option.perms.split(',');\n\t\t\t}\n\t\t\tif (this.updated[option.doctype][option.name].includes(action)) {\n\t\t\t\t// toggle off\n\t\t\t\tthis.updated[option.doctype][option.name] = this.updated[\n\t\t\t\t\toption.doctype\n\t\t\t\t][option.name].filter(item => item !== action);\n\t\t\t} else {\n\t\t\t\t// toggled on\n\t\t\t\tthis.updated[option.doctype][option.name].push(action);\n\t\t\t}\n\t\t},\n\t\ttoggleSelectAll(option, index, selected) {\n\t\t\tif (!this.updated[option.doctype]) {\n\t\t\t\tthis.updated[option.doctype] = {};\n\t\t\t}\n\t\t\tconst allActions = Object.values(this.actions[option.doctype]);\n\t\t\tthis.updated[option.doctype][option.name] = selected\n\t\t\t\t? Object.assign([], allActions)\n\t\t\t\t: [];\n\t\t\tthis.filteredList[index].perms = selected ? allActions.join(',') : '';\n\t\t}\n\t},\n\tcomputed: {\n\t\toptions() {\n\t\t\tif (!this.$resources.options.data) return [];\n\t\t\treturn this.$resources.options.data.options;\n\t\t},\n\t\tactions() {\n\t\t\tif (!this.$resources.options.data) return {};\n\t\t\treturn this.$resources.options.data.actions;\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<Dialog\n\t\t:options=\"{ title: `Manage Members for ${group.title}` }\"\n\t\t:modelValue=\"show\"\n\t\t@after-leave=\"\n\t\t\t() => {\n\t\t\t\t$emit('close', true);\n\t\t\t\tthis.memberEmail = '';\n\t\t\t}\n\t\t\"\n\t>\n\t\t<template v-slot:body-content>\n\t\t\t<LoadingText v-if=\"$resources.groupUsers.loading\" />\n\t\t\t<div v-else>\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"$resources.groupUsers.data.length === 0\"\n\t\t\t\t\tclass=\"text-gray-500 text-center\"\n\t\t\t\t>\n\t\t\t\t\tNo members added to this group.\n\t\t\t\t</span>\n\t\t\t\t<ListItem\n\t\t\t\t\tv-else\n\t\t\t\t\tv-for=\"user in $resources.groupUsers.data\"\n\t\t\t\t\t:title=\"user\"\n\t\t\t\t\t:key=\"user\"\n\t\t\t\t>\n\t\t\t\t\t<template #actions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t$resources.removeGroupUser.submit({\n\t\t\t\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\t\t\t\tuser: user\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t</ListItem>\n\t\t\t</div>\n\t\t</template>\n\t\t<template v-slot:actions>\n\t\t\t<Autocomplete\n\t\t\t\t:options=\"autoCompleteList\"\n\t\t\t\tv-model=\"member\"\n\t\t\t\tplaceholder=\"Select a member to add\"\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"solid\"\n\t\t\t\tlabel=\"Add Member\"\n\t\t\t\tclass=\"mt-2 w-full\"\n\t\t\t\t:loading=\"$resources.groupUsers.loading\"\n\t\t\t\t@click=\"\n\t\t\t\t\t$resources.addGroupUser.submit({\n\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\tuser: member.value\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t/>\n\t\t</template>\n\t</Dialog>\n</template>\n\n<script>\nexport default {\n\tname: 'ManageGroupMembers',\n\tdata() {\n\t\treturn {\n\t\t\tmember: {},\n\t\t\tautoCompleteList: []\n\t\t};\n\t},\n\tprops: ['show', 'group'],\n\twatch: {\n\t\tgroup() {\n\t\t\tthis.$resources.groupUsers.submit();\n\t\t}\n\t},\n\tresources: {\n\t\tremoveGroupUser: {\n\t\t\turl: 'press.api.account.remove_permission_group_user',\n\t\t\tonSuccess() {\n\t\t\t\tthis.$resources.groupUsers.fetch();\n\t\t\t}\n\t\t},\n\t\taddGroupUser: {\n\t\t\turl: 'press.api.account.add_permission_group_user',\n\t\t\tonSuccess() {\n\t\t\t\tthis.$resources.groupUsers.fetch();\n\t\t\t\tthis.member = {};\n\t\t\t}\n\t\t},\n\t\tgroupUsers() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.account.permission_group_users',\n\t\t\t\tparams: {\n\t\t\t\t\tname: this.group.name\n\t\t\t\t},\n\t\t\t\tonSuccess(r) {\n\t\t\t\t\tthis.autoCompleteList = this.$account.team_members\n\t\t\t\t\t\t.filter(user => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t!r.includes(user.name) && user.name != this.$account.team.user\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(user => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: user.name,\n\t\t\t\t\t\t\t\tvalue: user.name\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<Card\n\t\ttitle=\"Group Permissions\"\n\t\tsubtitle=\"Create a group or permission and assign it to your team members\"\n\t>\n\t\t<template #actions>\n\t\t\t<Button v-if=\"showManageTeamButton\" @click=\"showAddGroupDialog = true\">\n\t\t\t\tAdd New Group\n\t\t\t</Button>\n\t\t</template>\n\t\t<div class=\"max-h-96 divide-y\">\n\t\t\t<ListItem\n\t\t\t\tv-for=\"group in groups\"\n\t\t\t\t:title=\"group.title\"\n\t\t\t\t:description=\"group.name\"\n\t\t\t\t:key=\"group.name\"\n\t\t\t>\n\t\t\t\t<template #actions>\n\t\t\t\t\t<Dropdown :options=\"dropdownItems(group)\" right>\n\t\t\t\t\t\t<template v-slot=\"{ open }\">\n\t\t\t\t\t\t\t<Button icon=\"more-horizontal\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</template>\n\t\t\t</ListItem>\n\t\t</div>\n\t</Card>\n\n\t<EditPermissions\n\t\t:type=\"'group'\"\n\t\t:show=\"showEditMemberDialog\"\n\t\t:name=\"group.name\"\n\t\t@close=\"showEditMemberDialog = false\"\n\t/>\n\n\t<ManageGroupMembers\n\t\tv-model:group=\"group\"\n\t\t:show=\"showGroupMemberDialog\"\n\t\t@close=\"showGroupMemberDialog = false\"\n\t/>\n\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: 'Add New Group',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Create Group',\n\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\tloading: $resources.addGroup.loading,\n\t\t\t\t\tonClick: () => $resources.addGroup.submit({ title: groupName })\n\t\t\t\t}\n\t\t\t]\n\t\t}\"\n\t\tv-model=\"showAddGroupDialog\"\n\t>\n\t\t<template v-slot:body-content>\n\t\t\t<Input :label=\"'Title'\" type=\"text\" v-model=\"groupName\" required />\n\t\t</template>\n\t</Dialog>\n</template>\n<script>\nimport EditPermissions from './EditPermissions.vue';\nimport ManageGroupMembers from './ManageGroupMembers.vue';\nimport { notify } from '@/utils/toast';\n\nexport default {\n\tname: 'AccountGroups',\n\tcomponents: {\n\t\tEditPermissions,\n\t\tManageGroupMembers\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tgroupName: '',\n\t\t\tmemberEmail: '',\n\t\t\tshowAddGroupDialog: false,\n\t\t\tshowGroupMemberDialog: false,\n\t\t\tshowManageMemberDialog: false,\n\t\t\tshowEditMemberDialog: false,\n\t\t\tgroup: { name: '', title: '' },\n\t\t\tshowAddMemberForm: false\n\t\t};\n\t},\n\tresources: {\n\t\tgroups: {\n\t\t\turl: 'press.api.account.groups',\n\t\t\tauto: true\n\t\t},\n\t\taddMember: {\n\t\t\turl: 'press.api.account.add_team_member',\n\t\t\tonSuccess() {\n\t\t\t\tthis.showManageMemberDialog = false;\n\t\t\t\tthis.memberEmail = null;\n\t\t\t\tnotify({\n\t\t\t\t\ttitle: 'Invite Sent!',\n\t\t\t\t\tmessage: 'They will receive an email shortly to join your team.',\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t\ticon: 'check'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\taddGroup: {\n\t\t\turl: 'press.api.account.add_permission_group',\n\t\t\tvalidate() {\n\t\t\t\tif (this.groupName.length == 0) {\n\t\t\t\t\treturn 'Group name is required.';\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSuccess(r) {\n\t\t\t\tthis.$resources.groups.fetch();\n\t\t\t\tnotify({\n\t\t\t\t\ttitle: 'Group Created!',\n\t\t\t\t\tmessage: 'You can now assign this group to your team members',\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t\ticon: 'check'\n\t\t\t\t});\n\t\t\t\tthis.group = r;\n\t\t\t\tthis.showAddGroupDialog = false;\n\t\t\t\tthis.showGroupMemberDialog = true;\n\t\t\t}\n\t\t},\n\t\tremoveGroup: {\n\t\t\turl: 'press.api.account.remove_permission_group',\n\t\t\tonSuccess() {\n\t\t\t\tthis.$resources.groups.fetch();\n\t\t\t\tnotify({\n\t\t\t\t\ttitle: 'Group Removed!',\n\t\t\t\t\tmessage: 'Permissions have been removed from all team members',\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t\ticon: 'check'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tremoveGroup(group) {\n\t\t\tthis.$confirm({\n\t\t\t\ttitle: 'Remove Group',\n\t\t\t\tmessage: `Are you sure you want to remove ${group.title} ?`,\n\t\t\t\tactionLabel: 'Remove',\n\t\t\t\tactionColor: 'red',\n\t\t\t\taction: closeDialog => {\n\t\t\t\t\tthis.$resources.removeGroup.submit({ name: group.name });\n\t\t\t\t\tcloseDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tdropdownItems(group) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Manage Members',\n\t\t\t\t\ticon: 'users',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.group = group;\n\t\t\t\t\t\tthis.showGroupMemberDialog = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Edit Permissions',\n\t\t\t\t\ticon: 'edit',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.group = group;\n\t\t\t\t\t\tthis.showEditMemberDialog = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Remove',\n\t\t\t\t\ticon: 'trash-2',\n\t\t\t\t\tonClick: () => this.removeGroup(group)\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\tcomputed: {\n\t\tshowManageTeamButton() {\n\t\t\tconst team = this.$account.team;\n\t\t\tlet show = this.$account.hasRole('Press Admin');\n\t\t\treturn (\n\t\t\t\tshow &&\n\t\t\t\t(team.default_payment_method ||\n\t\t\t\t\tteam.payment_mode == 'Prepaid Credits' ||\n\t\t\t\t\tteam.free_account ||\n\t\t\t\t\tteam.erpnext_partner ||\n\t\t\t\t\tteam.parent_team)\n\t\t\t);\n\t\t},\n\t\tgroups() {\n\t\t\tif (!this.$resources.groups.data) return [];\n\t\t\treturn this.$resources.groups.data;\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<Card\n\t\ttitle=\"Team Members and Permissions\"\n\t\tsubtitle=\"Team members can access your account on your behalf.\"\n\t>\n\t\t<template #actions>\n\t\t\t<Button\n\t\t\t\tv-if=\"showManageTeamButton\"\n\t\t\t\t@click=\"showManageMemberDialog = true\"\n\t\t\t>\n\t\t\t\tAdd New Member\n\t\t\t</Button>\n\t\t</template>\n\t\t<div class=\"max-h-96 divide-y\">\n\t\t\t<ListItem\n\t\t\t\tv-for=\"member in $account.team_members\"\n\t\t\t\t:title=\"`${member.first_name} ${member.last_name}`\"\n\t\t\t\t:description=\"member.name\"\n\t\t\t\t:key=\"member.name\"\n\t\t\t>\n\t\t\t\t<template #actions>\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tlabel=\"Owner\"\n\t\t\t\t\t\tcolor=\"blue\"\n\t\t\t\t\t\tclass=\"ml-2\"\n\t\t\t\t\t\tv-if=\"member.name == $account.team.user\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Dropdown v-else :options=\"dropdownItems(member)\" right>\n\t\t\t\t\t\t<template v-slot=\"{ open }\">\n\t\t\t\t\t\t\t<Button icon=\"more-horizontal\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</template>\n\t\t\t</ListItem>\n\t\t</div>\n\n\t\t<Dialog\n\t\t\t:options=\"{\n\t\t\t\ttitle: 'Add New Member',\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Send Invitation',\n\t\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\t\tloading: $resources.addMember.loading,\n\t\t\t\t\t\tonClick: () => $resources.addMember.submit({ email: memberEmail })\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\"\n\t\t\tv-model=\"showManageMemberDialog\"\n\t\t>\n\t\t\t<template v-slot:body-content>\n\t\t\t\t<FormControl\n\t\t\t\t\tlabel=\"Enter the email address of your teammate to invite them.\"\n\t\t\t\t\tclass=\"mt-2\"\n\t\t\t\t\tv-model=\"memberEmail\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<ErrorMessage :message=\"$resources.addMember.error\" />\n\t\t\t</template>\n\t\t</Dialog>\n\t\t<EditPermissions\n\t\t\t:type=\"'user'\"\n\t\t\t:show=\"showEditMemberDialog\"\n\t\t\t:name=\"memberName\"\n\t\t\t@close=\"showEditMemberDialog = false\"\n\t\t/>\n\t</Card>\n</template>\n<script>\nimport EditPermissions from './EditPermissions.vue';\nimport { notify } from '@/utils/toast';\n\nexport default {\n\tname: 'AccountMembers',\n\tcomponents: {\n\t\tEditPermissions\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tshowManageMemberDialog: false,\n\t\t\tshowEditMemberDialog: false,\n\t\t\tmemberName: '',\n\t\t\tshowAddMemberForm: false,\n\t\t\tmemberEmail: null\n\t\t};\n\t},\n\tresources: {\n\t\taddMember: {\n\t\t\turl: 'press.api.account.add_team_member',\n\t\t\tonSuccess() {\n\t\t\t\tthis.showManageMemberDialog = false;\n\t\t\t\tthis.memberEmail = null;\n\t\t\t\tnotify({\n\t\t\t\t\ttitle: 'Invite Sent!',\n\t\t\t\t\tmessage: 'They will receive an email shortly to join your team.',\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t\ticon: 'check'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremoveMember: {\n\t\t\turl: 'press.api.account.remove_team_member',\n\t\t\tonSuccess() {\n\t\t\t\tthis.showManageMemberDialog = false;\n\t\t\t\tthis.$account.fetchAccount();\n\t\t\t\tnotify({\n\t\t\t\t\ttitle: 'Team member removed.',\n\t\t\t\t\ticon: 'check',\n\t\t\t\t\tcolor: 'green'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tgetRoleBadgeProps(member) {\n\t\t\tlet role = 'Member';\n\t\t\tif (this.$account.team.name == member.name) {\n\t\t\t\trole = 'Owner';\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstatus: role,\n\t\t\t\tcolor: {\n\t\t\t\t\tOwner: 'blue',\n\t\t\t\t\tMember: 'gray'\n\t\t\t\t}[role]\n\t\t\t};\n\t\t},\n\t\tremoveMember(member) {\n\t\t\tthis.$confirm({\n\t\t\t\ttitle: 'Remove Member',\n\t\t\t\tmessage: `Are you sure you want to remove ${member.first_name} ?`,\n\t\t\t\tactionLabel: 'Remove',\n\t\t\t\tactionColor: 'red',\n\t\t\t\taction: closeDialog => {\n\t\t\t\t\tthis.$resources.removeMember.submit({ user_email: member.name });\n\t\t\t\t\tcloseDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tdropdownItems(member) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Edit Permissions',\n\t\t\t\t\ticon: 'edit',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.memberName = member.name;\n\t\t\t\t\t\tthis.showEditMemberDialog = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Remove',\n\t\t\t\t\ticon: 'trash-2',\n\t\t\t\t\tonClick: () => this.removeMember(member)\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\tcomputed: {\n\t\tshowManageTeamButton() {\n\t\t\tconst team = this.$account.team;\n\t\t\tlet show = this.$account.hasRole('Press Admin');\n\t\t\treturn (\n\t\t\t\tshow &&\n\t\t\t\t(team.default_payment_method ||\n\t\t\t\t\tteam.payment_mode == 'Prepaid Credits' ||\n\t\t\t\t\tteam.free_account ||\n\t\t\t\t\tteam.erpnext_partner ||\n\t\t\t\t\tteam.parent_team)\n\t\t\t);\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<div\n\t\tv-if=\"\n\t\t\t$account.user.name === $account.team.user ||\n\t\t\t$account.user.user_type === 'System User'\n\t\t\"\n\t\tclass=\"space-y-5\"\n\t>\n\t\t<AccountMembers />\n\t\t<AccountGroups />\n\t</div>\n</template>\n\n<script>\nimport AccountGroups from './AccountGroups.vue';\nimport AccountMembers from './AccountMembers.vue';\n\nexport default {\n\tname: 'AccountSettings',\n\tpageMeta() {\n\t\treturn {\n\t\t\ttitle: 'Settings - Team'\n\t\t};\n\t},\n\tcomponents: {\n\t\tAccountMembers,\n\t\tAccountGroups\n\t}\n};\n</script>\n"],"names":["_sfc_main","FeatherIcon","value","isValid","$input","attrs","onInput","e","debounce","option","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_normalizeClass","$props","_ctx","_hoisted_1","_toDisplayString","_createCommentVNode","_createElementVNode","$options","_createBlock","_component_FeatherIcon","_openBlock","_mergeProps","_Fragment","_renderList","_hoisted_6","notify","alreadyAdded","action","_b","_a","result","index","item","selected","allActions","_hoisted_7","_withCtx","_cache","_component_LoadingText","_createTextVNode","label","$event","user","$data","EditPermissions","ManageGroupMembers","group","closeDialog","team","role","member","AccountMembers"],"mappings":"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","x_google_ignoreList":[0]}