{"version":3,"file":"NewMarketplaceAppDialog-E42NMYJ7.js","sources":["../../../../dashboard/src2/components/marketplace/NewMarketplaceAppDialog.vue"],"sourcesContent":["<template>\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: 'Add a new Marketplace App',\n\t\t\tsize: 'xl',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Add App',\n\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\tdisabled: (!appValidated && !selectedVersion) || !this.app.is_public,\n\t\t\t\t\tonClick: addApp\n\t\t\t\t}\n\t\t\t]\n\t\t}\"\n\t\tv-model=\"show\"\n\t\t@update:modelValue=\"\n\t\t\t() => {\n\t\t\t\tshow = false;\n\t\t\t}\n\t\t\"\n\t>\n\t\t<template #body-content>\n\t\t\t<GitHubAppSelector\n\t\t\t\tclass=\"pt-2\"\n\t\t\t\t@validateApp=\"validateApp\"\n\t\t\t\t@fieldChange=\"appValidated = false\"\n\t\t\t/>\n\t\t\t<LinkControl\n\t\t\t\tv-if=\"selectedBranch\"\n\t\t\t\tclass=\"mt-4\"\n\t\t\t\ttype=\"autocomplete\"\n\t\t\t\tlabel=\"Choose Version\"\n\t\t\t\t:options=\"{ doctype: 'Frappe Version', filters: { public: 1 } }\"\n\t\t\t\tv-model=\"selectedVersion\"\n\t\t\t/>\n\t\t\t<div class=\"mt-4 space-y-2\">\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"$resources.validateApp.loading && !appValidated\"\n\t\t\t\t\tclass=\"flex text-base text-gray-700\"\n\t\t\t\t>\n\t\t\t\t\t<LoadingIndicator class=\"mr-2 w-4\" />\n\t\t\t\t\tValidating app...\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"appValidated\" class=\"flex text-base text-gray-700\">\n\t\t\t\t\t<div v-if=\"this.app.is_public === true\" class=\"flex gap-1\">\n\t\t\t\t\t\t<FeatherIcon\n\t\t\t\t\t\t\tclass=\"w-4 p-0.5 text-white rounded bg-green-500\"\n\t\t\t\t\t\t\tname=\"check\"\n\t\t\t\t\t\t\t:stroke-width=\"3\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tFound {{ this.app.title }} ({{ this.app.name }})\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else-if=\"this.app.is_public === false\">\n\t\t\t\t\t\t<div class=\"flex text-base text-gray-700 gap-1\">\n\t\t\t\t\t\t\t<FeatherIcon\n\t\t\t\t\t\t\t\tclass=\"w-4 p-0.5 text-white rounded bg-red-500\"\n\t\t\t\t\t\t\t\tname=\"x\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tThe Github Repository is private.\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\thref=\"https://easytouch.cloud/marketplace/terms\"\n\t\t\t\t\t\t\t\tclass=\"font-medium\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tTerms and Policy\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"h-4\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ErrorMessage :message=\"$resources.validateApp.error\" />\n\t\t</template>\n\t</Dialog>\n</template>\n\n<script>\nimport { toast } from 'vue-sonner';\nimport GitHubAppSelector from '../GitHubAppSelector.vue';\nimport LinkControl from '../LinkControl.vue';\nimport { getToastErrorMessage } from '../../utils/toast';\n\nexport default {\n\tcomponents: {\n\t\tGitHubAppSelector,\n\t\tLinkControl\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tshow: true,\n\t\t\tapp: {},\n\t\t\tselectedBranch: '',\n\t\t\tselectedVersion: '',\n\t\t\tappValidated: false,\n\t\t\tselectedGithubUser: null,\n\t\t\tselectedGithubRepository: null\n\t\t};\n\t},\n\tresources: {\n\t\tvalidateApp() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.github.app',\n\t\t\t\tonSuccess: async data => {\n\t\t\t\t\tthis.appValidated = true;\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst repo_owner = this.selectedGithubUser?.login;\n\t\t\t\t\tconst repo = this.selectedGithubRepository || data.name;\n\t\t\t\t\tconst repository_url = `https://github.com/${repo_owner}/${repo}`;\n\t\t\t\t\tthis.app = {};\n\t\t\t\t\tconst isPublic = await this.checkRepoVisibility(repo_owner, repo);\n\n\t\t\t\t\tthis.app = {\n\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\trepository_url,\n\t\t\t\t\t\tgithub_installation_id: this.selectedGithubUser?.id,\n\t\t\t\t\t\tbranch: this.selectedBranch.value,\n\t\t\t\t\t\tis_public: isPublic\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\taddApp() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.insert',\n\t\t\t\tmakeParams() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdoc: {\n\t\t\t\t\t\t\t...this.app,\n\t\t\t\t\t\t\tdoctype: 'Marketplace App',\n\t\t\t\t\t\t\tversion: this.selectedVersion\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\taddApp() {\n\t\t\ttoast.promise(this.$resources.addApp.submit(), {\n\t\t\t\tloading: 'Adding new app...',\n\t\t\t\tsuccess: () => {\n\t\t\t\t\tthis.show = false;\n\t\t\t\t\tthis.$router.push({\n\t\t\t\t\t\tname: 'Marketplace App Detail Listing',\n\t\t\t\t\t\tparams: { name: this.app.name }\n\t\t\t\t\t});\n\t\t\t\t\treturn 'New app added';\n\t\t\t\t},\n\t\t\t\terror: e => getToastErrorMessage(e)\n\t\t\t});\n\t\t},\n\t\tvalidateApp(data) {\n\t\t\tthis.selectedBranch = {\n\t\t\t\tlabel: data.branch,\n\t\t\t\tvalue: data.branch\n\t\t\t};\n\t\t\tthis.selectedGithubRepository = data.repository;\n\t\t\tthis.selectedGithubUser = data.selectedGithubUser;\n\n\t\t\tthis.$resources.validateApp.submit({\n\t\t\t\t...data,\n\t\t\t\tinstallation: data.selectedGithubUser.id\n\t\t\t});\n\t\t},\n\t\tasync checkRepoVisibility(owner, repo) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${owner}/${repo}`\n\t\t\t\t);\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('Repository not found or private');\n\t\t\t\t}\n\n\t\t\t\tconst repoData = await response.json();\n\t\t\t\treturn !repoData.private; // Returns true if public, false if private\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\treturn false; // Assume false if there was an error\n\t\t\t}\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","GitHubAppSelector","data","__async","repository_url","repo_owner","repo","isPublic","e","getToastErrorMessage","__spreadProps","__spreadValues","owner","response","error","_hoisted_1","_hoisted_6","$data","_withCtx","$options","_cache","$event","_createCommentVNode","_createElementVNode","_ctx","_openBlock","_createElementBlock","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","_hoisted_7"],"mappings":"47CAiFA,MAAAA,EAAA,aAEE,kBAAAC,iBAGD,MAAA,CACC,MAAA,CACC,KAAA,GACA,IAAA,CAAA,EACA,eAAA,GACA,gBAAA,GACA,aAAA,oFAOA,MAAA,4BAEC,UAAAC,GAAAC,EAAA,8BAEC,wBAAA,CAAAD,EACC,wGAKDE,EAAA,sBAAAC,CAAA,IAAAC,CAAA,2DAIA,KAAA,IAAA,CACC,KAAAJ,EAAA,KACA,MAAAA,EAAA,MACA,eAAAE,uEAEA,OAAA,KAAA,eAAA,MACA,UAAAG,EAEF,KAGF,QAAA,CACC,MAAA,4CAGE,MAAA,6EAKC,GAEF,EAEF,GAED,QAAA,CACC,QAAA,qFAIG,KAAA,KAAA,GACA,KAAA,QAAA,KAAA,CACC,KAAA,4DAED,CAAA,EACA,iBAED,MAAAC,GAAAC,EAAAD,CAAA,CACD,CAAA,GAED,YAAAN,EAAA,CACC,KAAA,eAAA,CACC,MAAAA,EAAA,OACA,MAAAA,EAAA,QAED,KAAA,yBAAAA,EAAA,wDAGA,KAAA,WAAA,YAAA,OAAAQ,EAAAC,EAAA,GACCT,GADD,CAEC,aAAAA,EAAA,mBAAA,EACD,EAAA,GAED,oBAAAU,EAAAN,EAAA,QAAAH,EAAA,sBACC,GAAA,+DAIC,GAAA,CAAAU,EAAA,GACC,MAAA,IAAA,MAAA,iCAAA,UAGD,MAAAA,EAAA,KAAA,oBAGA,eAAA,MAAAC,CAAA,EACA,EACD,CACD,GACD,CACD,EArJQC,EAAA,CAAA,MAAA,gBAAA,WAGH,MAAA,yCAKwB,MAAA,yCACgB,MAAA,wBASlCC,EAAA,CAAA,MAAA,oCAAA,WAcM,MAAA,oNAjEsI,SAAA,CAAAC,EAAA,cAAA,CAAAA,EAAA,iBAAA,CAAA,KAAA,IAAA,8BAFvJ,WAAAA,EAAA,KAAA,sBAAA,0DAqBa,eAAAC,EAAA,IAAA,MAET,MAAA,OACC,cAAAC,EAAA,YACA,cAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAJ,EAAA,aAAA,gEAID,MAAA,OACA,KAAA,eACA,MAAA,iBACC,QAAA,CAAA,QAAA,iBAAA,QAAA,CAAA,OAAA,EAAA,EAhCL,WAAAA,EAAA,gBAAA,sBAAAG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAJ,EAAA,gBAAAI,4BAAAC,EAAA,GAAA,EAAA,EAmCGC,EAAA,MAAAR,EAAA,CAEQS,EAAA,WAAA,YAAA,SAAA,CAAAP,EAAA,cADPQ,IAAAC,EAAA,MAAAC,EAAA,yBApCJP,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAQ,EAAA,qBAAA,MAAAN,EAAA,GAAA,EAAA,kBA2CIG,IAAAC,EAAA,MAAAG,EAAA,CACiB,KAAA,IAAA,YAAA,IAAhBJ,IAAAC,EAAA,MAAAI,EAAA,MAEE,MAAA,4CACA,KAAA,QACC,eAAA,IAhDRF,EAAA,UAAAG,EAAA,KAAA,IAAA,KAAA,EAAA,KAAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,CAAA,KAoD0B,KAAA,IAAA,YAAA,IAArBN,IAAAC,EAAA,MAAAM,EAAA,CACCT,EAAA,MAAAP,EAAA,MAEE,MAAA,0CACA,KAAA,MAxDRI,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAQ,EAAA,qCAAA,QA4DQ,KAAA,4CACA,MAAA,gBA7DR,QAAAV,EAAA,IAAAE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAAQ,EAAA,oBAAA,iBAmEKH,IAAAC,EAAA,MAAAO,CAAA,MAnELX,EAAA,GAAA,EAAA,SAsEkB,QAAAE,EAAA,WAAA,YAAA"}