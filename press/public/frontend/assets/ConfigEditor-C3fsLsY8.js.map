{"version":3,"file":"ConfigEditor-C3fsLsY8.js","sources":["../../../../dashboard/src/components/ConfigEditor.vue"],"sourcesContent":["<template>\n\t<Card :title=\"title || 'Site Config'\">\n\t\t<template #actions>\n\t\t\t<Button\n\t\t\t\tclass=\"mr-2\"\n\t\t\t\t:loading=\"$resources.configData.loading\"\n\t\t\t\tv-if=\"isDirty\"\n\t\t\t\t@click=\"\n\t\t\t\t\t() => {\n\t\t\t\t\t\t$resources.configData.reload().then(() => {\n\t\t\t\t\t\t\tisDirty = false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\tDiscard changes\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tvariant=\"solid\"\n\t\t\t\tv-if=\"isDirty\"\n\t\t\t\t@click=\"updateConfig\"\n\t\t\t\t:loading=\"$resources.updateConfig.loading\"\n\t\t\t>\n\t\t\t\tSave changes\n\t\t\t</Button>\n\t\t</template>\n\t\t<div class=\"flex space-x-4\">\n\t\t\t<div class=\"w-full shrink-0 space-y-4 md:w-1/2\">\n\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t<ErrorMessage :message=\"$resources.updateConfig.error\" />\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"$resources.configData?.data?.length\"\n\t\t\t\t\t\tv-for=\"config in $resources.configData.data\"\n\t\t\t\t\t\t:key=\"config.key\"\n\t\t\t\t\t\tclass=\"mt-2 flex\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t:label=\"getStandardConfigTitle(config.key)\"\n\t\t\t\t\t\t\tv-model=\"config.value\"\n\t\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t\tconfig.type === 'Password' ? (config.value = '') : null;\n\t\t\t\t\t\t\t\tconfig.type === 'Password' ? (isDirty = true) : null;\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t@input=\"isDirty = true\"\n\t\t\t\t\t\t\tclass=\"flex-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclass=\"ml-2 mt-5\"\n\t\t\t\t\t\t\ticon=\"x\"\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t@click=\"removeConfig(config)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p v-else class=\"my-2 text-base text-gray-600\">\n\t\t\t\t\t\tNo keys added. Click on Add Key to add one.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button class=\"mt-4\" @click=\"showAddConfigKeyDialog = true\"\n\t\t\t\t\t\t>Add Key</Button\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"hidden h-fit max-w-full flex-1 overflow-x-scroll whitespace-pre-line rounded bg-gray-100 p-4 font-mono text-base md:block\"\n\t\t\t>\n\t\t\t\t<div v-if=\"configName\" class=\"mb-4\">{{ configName }}</div>\n\t\t\t\t<div v-html=\"configPreview\"></div>\n\t\t\t</div>\n\t\t\t<Dialog\n\t\t\t\t:options=\"{\n\t\t\t\t\ttitle: 'Add Config Key',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Add Key',\n\t\t\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\t\t\tonClick: addConfig\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\"\n\t\t\t\tv-model=\"showAddConfigKeyDialog\"\n\t\t\t>\n\t\t\t\t<template v-slot:body-content>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class=\"mb-1 block text-xs text-gray-600\">Key</span>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tplaceholder=\"Key\"\n\t\t\t\t\t\t\t\t:options=\"getStandardConfigKeys\"\n\t\t\t\t\t\t\t\tv-model=\"chosenStandardConfig\"\n\t\t\t\t\t\t\t\t@update:modelValue=\"handleAutocompleteSelection\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-if=\"showCustomKeyInput\"\n\t\t\t\t\t\t\tv-model=\"newConfig.key\"\n\t\t\t\t\t\t\tlabel=\"Custom Key\"\n\t\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t\t@change=\"isDirty = true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\tv-model=\"newConfig.type\"\n\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t:disabled=\"chosenStandardConfig && !showCustomKeyInput\"\n\t\t\t\t\t\t\t:options=\"[\n\t\t\t\t\t\t\t\t'String',\n\t\t\t\t\t\t\t\t'Number',\n\t\t\t\t\t\t\t\t'JSON',\n\t\t\t\t\t\t\t\t'Boolean',\n\t\t\t\t\t\t\t\tchosenStandardConfig?.value !== 'custom_key' ? 'Password' : null\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t@change=\"isDirty = true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-bind=\"configInputProps()\"\n\t\t\t\t\t\t\tv-model=\"newConfig.value\"\n\t\t\t\t\t\t\tlabel=\"Value\"\n\t\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t\t@change=\"isDirty = true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</Dialog>\n\t\t</div>\n\t</Card>\n</template>\n\n<script>\nimport { Autocomplete } from 'frappe-ui';\n\nexport default {\n\tname: 'ConfigEditor',\n\tcomponents: {\n\t\tAutocomplete\n\t},\n\tprops: [\n\t\t'title',\n\t\t'subtitle',\n\t\t'configName',\n\t\t'configData',\n\t\t'updateConfigMethod'\n\t],\n\tdata() {\n\t\treturn {\n\t\t\tisDirty: false,\n\t\t\tshowCustomKeyInput: false,\n\t\t\tshowAddConfigKeyDialog: false,\n\t\t\tchosenStandardConfig: {\n\t\t\t\ttitle: '',\n\t\t\t\tkey: ''\n\t\t\t},\n\t\t\tnewConfig: {\n\t\t\t\tkey: '',\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'String'\n\t\t\t}\n\t\t};\n\t},\n\tresources: {\n\t\tconfigData() {\n\t\t\treturn this.configData();\n\t\t},\n\t\tupdateConfig() {\n\t\t\tfunction isValidJSON(str) {\n\t\t\t\ttry {\n\t\t\t\t\tJSON.parse(str);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst updatedConfig = this.$resources.configData.data.map(d => {\n\t\t\t\tconst value = d.value;\n\t\t\t\tif (!isNaN(value)) d.type = 'Number';\n\t\t\t\telse if (isValidJSON(value)) d.type = 'JSON';\n\t\t\t\telse if (d.type === 'Password') d.type = 'Password';\n\t\t\t\telse d.type = 'String';\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: d.key,\n\t\t\t\t\tvalue,\n\t\t\t\t\ttype: d.type\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...this.updateConfigMethod(updatedConfig),\n\t\t\t\tasync validate() {\n\t\t\t\t\tlet keys = updatedConfig.map(d => d.key);\n\t\t\t\t\tif (keys.length !== [...new Set(keys)].length) {\n\t\t\t\t\t\treturn 'Duplicate key';\n\t\t\t\t\t}\n\t\t\t\t\tthis.$resources.validateKeys.submit({\n\t\t\t\t\t\tkeys: JSON.stringify(keys)\n\t\t\t\t\t});\n\t\t\t\t\tlet invalidKeys = this.$resources.validateKeys.data;\n\t\t\t\t\tif (invalidKeys?.length > 0) {\n\t\t\t\t\t\treturn `Invalid key: ${invalidKeys.join(', ')}`;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let config of updatedConfig) {\n\t\t\t\t\t\tif (config.type === 'JSON') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tJSON.parse(JSON.stringify(config.value));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treturn `Invalid JSON -- ${error}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (config.type === 'Number') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tNumber(config.value);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treturn 'Invalid Number';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonSuccess() {\n\t\t\t\t\tthis.isDirty = false;\n\t\t\t\t\tthis.$resources.configData.reload();\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tstandardConfigKeys: {\n\t\t\turl: 'press.api.config.standard_keys',\n\t\t\tcache: 'standardConfigKeys',\n\t\t\tauto: true\n\t\t},\n\t\tvalidateKeys: {\n\t\t\turl: 'press.api.config.is_valid'\n\t\t}\n\t},\n\tcomputed: {\n\t\tconfigPreview() {\n\t\t\tlet obj = {};\n\n\t\t\tfor (let d of this.$resources.configData.data) {\n\t\t\t\tlet value = d.value;\n\t\t\t\tif (['Boolean', 'Number'].includes(d.type)) {\n\t\t\t\t\tvalue = Number(d.value);\n\t\t\t\t} else if (d.type === 'JSON') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = JSON.parse(d.value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj[d.key] = value;\n\t\t\t}\n\t\t\treturn JSON.stringify(obj, null, '&nbsp; ');\n\t\t},\n\t\tgetStandardConfigKeys() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tgroup: 'Custom',\n\t\t\t\t\titems: [{ label: 'Create a custom key', value: 'custom_key' }]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroup: 'Standard',\n\t\t\t\t\titems: this.$resources.standardConfigKeys.data.map(d => ({\n\t\t\t\t\t\tlabel: d.title,\n\t\t\t\t\t\tvalue: d.key\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\tmethods: {\n\t\tconfigInputProps() {\n\t\t\tlet type = {\n\t\t\t\tString: 'text',\n\t\t\t\tPassword: 'text',\n\t\t\t\tNumber: 'number',\n\t\t\t\tJSON: 'textarea',\n\t\t\t\tBoolean: 'select'\n\t\t\t}[this.newConfig.type];\n\n\t\t\treturn {\n\t\t\t\ttype,\n\t\t\t\toptions: this.newConfig.type === 'Boolean' ? ['1', '0'] : null\n\t\t\t};\n\t\t},\n\t\taddConfig() {\n\t\t\tthis.$resources.configData.data.push({\n\t\t\t\tkey: this.getStandardConfigKey(this.newConfig.key),\n\t\t\t\tvalue: this.newConfig.value,\n\t\t\t\ttype: this.newConfig.type\n\t\t\t});\n\t\t\tthis.isDirty = true;\n\t\t\tthis.showAddConfigKeyDialog = false;\n\t\t},\n\t\thandleAutocompleteSelection() {\n\t\t\tif (this.chosenStandardConfig?.value === 'custom_key') {\n\t\t\t\tthis.showCustomKeyInput = true;\n\t\t\t} else {\n\t\t\t\tthis.showCustomKeyInput = false;\n\t\t\t\tthis.newConfig.type = this.getStandardConfigType(\n\t\t\t\t\tthis.chosenStandardConfig?.value\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.newConfig.type === 'Boolean') {\n\t\t\t\tthis.newConfig.value = 0;\n\t\t\t} else if (this.newConfig.type === 'JSON') {\n\t\t\t\tthis.newConfig.value = '{}';\n\t\t\t} else {\n\t\t\t\tthis.newConfig.value = '';\n\t\t\t}\n\n\t\t\tthis.newConfig.key = this.chosenStandardConfig?.value || '';\n\t\t},\n\t\tgetStandardConfigType(key) {\n\t\t\treturn (\n\t\t\t\tthis.$resources.standardConfigKeys.data.find(d => d.key === key)\n\t\t\t\t\t?.type || 'String'\n\t\t\t);\n\t\t},\n\t\tgetStandardConfigKey(key) {\n\t\t\treturn (\n\t\t\t\tthis.$resources.standardConfigKeys.data.find(d => d.title === key)\n\t\t\t\t\t?.key || key\n\t\t\t);\n\t\t},\n\t\tgetStandardConfigTitle(key) {\n\t\t\treturn (\n\t\t\t\tthis.$resources.standardConfigKeys.data.find(d => d.key === key)\n\t\t\t\t\t?.title || key\n\t\t\t);\n\t\t},\n\t\tremoveConfig(config) {\n\t\t\tconst index = this.$resources.configData.data.indexOf(config);\n\t\t\tif (index > -1) this.$resources.configData.data.splice(index, 1);\n\t\t\tthis.isDirty = true;\n\t\t},\n\t\tupdateConfig() {\n\t\t\tif (this.isDirty) {\n\t\t\t\tthis.$resources.updateConfig.submit();\n\t\t\t} else {\n\t\t\t\tthis.isDirty = false;\n\t\t\t}\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","str","e","value","d","isValidJSON","__spreadProps","__spreadValues","updatedConfig","__async","keys","invalidKeys","config","obj","_b","key","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_5","_hoisted_7","_hoisted_8","$props","_withCtx","_ctx","_cache","_createTextVNode","_createCommentVNode","$options","_createElementVNode","_a","$event","$data"],"mappings":"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"}