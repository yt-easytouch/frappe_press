{"version":3,"file":"NewCodeServer-p2feJy4-.js","sources":["../../../../dashboard/src/views/spaces/NewCodeServerHostname.vue","../../../../dashboard/src/views/spaces/NewCodeServerGroup.vue","../../../../dashboard/src/views/spaces/NewCodeServerBench.vue","../../../../dashboard/src/views/spaces/NewCodeServer.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<label class=\"text-lg font-semibold\"> Choose a Hostname </label>\n\t\t<p class=\"text-base text-gray-700\">\n\t\t\tGive your code server a unique name. It can only contain alphanumeric\n\t\t\tcharacters and dashes.\n\t\t</p>\n\t\t<div class=\"mt-4 flex\">\n\t\t\t<input\n\t\t\t\tclass=\"form-input z-10 w-full rounded-r-none\"\n\t\t\t\ttype=\"text\"\n\t\t\t\t:value=\"modelValue\"\n\t\t\t\tplaceholder=\"subdomain\"\n\t\t\t\t@change=\"subdomainChange\"\n\t\t\t/>\n\t\t\t<div class=\"flex items-center rounded-r bg-gray-100 px-4 text-base\">\n\t\t\t\t.{{ domain }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"mt-1\">\n\t\t\t<div\n\t\t\t\tv-if=\"subdomainAvailable\"\n\t\t\t\tclass=\"text-sm text-green-600\"\n\t\t\t\trole=\"alert\"\n\t\t\t>\n\t\t\t\t{{ modelValue }}.{{ domain }} is available\n\t\t\t</div>\n\t\t\t<ErrorMessage :message=\"errorMessage\" />\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n\tname: 'Hostname',\n\tprops: ['modelValue', 'domain'],\n\temits: ['update:modelValue', 'error'],\n\tdata() {\n\t\treturn {\n\t\t\tsubdomainAvailable: false,\n\t\t\terrorMessage: null\n\t\t};\n\t},\n\tmethods: {\n\t\tasync subdomainChange(e) {\n\t\t\tlet subdomain = e.target.value;\n\t\t\tthis.$emit('update:modelValue', subdomain);\n\t\t\tthis.subdomainAvailable = false;\n\n\t\t\tlet error = this.validateSubdomain(subdomain);\n\t\t\tif (!error) {\n\t\t\t\tlet subdomainTaken = await this.$call('press.api.spaces.exists', {\n\t\t\t\t\tsubdomain,\n\t\t\t\t\tdomain: this.domain\n\t\t\t\t});\n\t\t\t\tif (subdomainTaken) {\n\t\t\t\t\terror = `${subdomain}.${this.domain} already exists.`;\n\t\t\t\t} else {\n\t\t\t\t\tthis.subdomainAvailable = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.errorMessage = error;\n\t\t\tthis.$emit('error', error);\n\t\t},\n\t\tvalidateSubdomain(subdomain) {\n\t\t\tif (!subdomain) {\n\t\t\t\treturn 'Subdomain cannot be empty';\n\t\t\t}\n\t\t\tif (subdomain.length < 5) {\n\t\t\t\treturn 'Subdomain too short. Use 5 or more characters';\n\t\t\t}\n\t\t\tif (subdomain.length > 32) {\n\t\t\t\treturn 'Subdomain too long. Use 32 or less characters';\n\t\t\t}\n\t\t\tif (!subdomain.match(/^[a-z0-9][a-z0-9-]*[a-z0-9]$/)) {\n\t\t\t\treturn 'Subdomain contains invalid characters. Use lowercase characters, numbers and hyphens';\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<div>\n\t\t<div>\n\t\t\t<label class=\"text-lg font-semibold\"> Choose a Bench </label>\n\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\tChoose a bench where you want to install the code server.\n\t\t\t</p>\n\t\t</div>\n\t\t<FormControl\n\t\t\tclass=\"my-2\"\n\t\t\tplaceholder=\"Search for Bench\"\n\t\t\tv-on:input=\"e => updateSearchTerm(e.target.value)\"\n\t\t/>\n\t\t<div class=\"grid grid-cols-1 gap-2 sm:grid-cols-2\">\n\t\t\t<div\n\t\t\t\tv-for=\"group in filteredOptions\"\n\t\t\t\tv-on:click=\"selectGroup(group)\"\n\t\t\t\tclass=\"m-2 rounded-md border px-6 py-5 text-lg shadow-sm hover:cursor-pointer hover:shadow-md\"\n\t\t\t\t:class=\"[\n\t\t\t\t\tmodelValue && modelValue.name == group.name\n\t\t\t\t\t\t? 'relative ring-2 ring-inset ring-blue-500'\n\t\t\t\t\t\t: ''\n\t\t\t\t]\"\n\t\t\t>\n\t\t\t\t{{ group.title }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Fuse from 'fuse.js/dist/fuse.basic.esm';\n\nexport default {\n\tname: 'NewCodeServerBench',\n\tprops: ['modelValue'],\n\temits: ['update:modelValue', 'error'],\n\tdata() {\n\t\treturn {\n\t\t\tfilteredOptions: []\n\t\t};\n\t},\n\tresources: {\n\t\toptions() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.spaces.code_server_group_options',\n\t\t\t\tauto: true,\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\tthis.fuse = new Fuse(data, {\n\t\t\t\t\t\tkeys: ['title']\n\t\t\t\t\t});\n\t\t\t\t\tthis.filteredOptions = data;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tcomputed: {\n\t\tgroups() {\n\t\t\treturn this.$resources.options.data;\n\t\t}\n\t},\n\tmethods: {\n\t\tselectGroup(group) {\n\t\t\tthis.$emit('update:modelValue', group);\n\t\t},\n\t\tupdateSearchTerm(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.filteredOptions = this.fuse\n\t\t\t\t\t.search(value)\n\t\t\t\t\t.map(result => result.item);\n\t\t\t} else {\n\t\t\t\tthis.filteredOptions = this.$resources.options.data;\n\t\t\t}\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<div>\n\t\t<div>\n\t\t\t<label class=\"text-lg font-semibold\"> Choose a Bench </label>\n\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\tChoose a bench where you want to install the code server.\n\t\t\t</p>\n\t\t</div>\n\t\t<LoadingText v-if=\"$resources.options.loading\" />\n\t\t<div v-else>\n\t\t\t<ListItem\n\t\t\t\tv-if=\"benches.length > 0\"\n\t\t\t\tv-for=\"(bench, index) in benches\"\n\t\t\t\t:key=\"bench\"\n\t\t\t\t:title=\"bench\"\n\t\t\t\tclass=\"m-2 rounded-md border px-2 shadow-sm hover:cursor-pointer hover:shadow-md\"\n\t\t\t\t:class=\"[\n\t\t\t\t\tmodelValue && modelValue == bench\n\t\t\t\t\t\t? 'relative ring-2 ring-inset ring-blue-500'\n\t\t\t\t\t\t: ''\n\t\t\t\t]\"\n\t\t\t\tv-on:click=\"selectBench(bench)\"\n\t\t\t>\n\t\t\t\t<template #actions>\n\t\t\t\t\t<Badge v-if=\"index === 0\" label=\"Latest Deployed\"></Badge>\n\t\t\t\t</template>\n\t\t\t</ListItem>\n\t\t\t<div v-else class=\"ml-2 mt-4 text-sm\">\n\t\t\t\tNo bench versions found with a code server. Click\n\t\t\t\t<router-link\n\t\t\t\t\t:to=\"`/groups/${selectedGroup}`\"\n\t\t\t\t\tclass=\"text-blue-600 hover:underline\"\n\t\t\t\t\t>here</router-link\n\t\t\t\t>\n\t\t\t\tto deploy a new available version of your bench.\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'NewCodeServerBench',\n\tprops: ['modelValue', 'selectedGroup'],\n\temits: ['update:modelValue', 'error'],\n\tmethods: {\n\t\tselectBench(bench) {\n\t\t\tthis.$emit('update:modelValue', bench);\n\t\t}\n\t},\n\tresources: {\n\t\toptions() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.spaces.code_server_bench_options',\n\t\t\t\tparams: {\n\t\t\t\t\tgroup: this.selectedGroup\n\t\t\t\t},\n\t\t\t\tauto: true\n\t\t\t};\n\t\t}\n\t},\n\tcomputed: {\n\t\tbenches() {\n\t\t\tif (!this.$resources.options.data) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn this.$resources.options.data;\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<WizardCard v-if=\"domain\">\n\t\t<div class=\"mb-6 text-center\">\n\t\t\t<h1 class=\"text-2xl font-bold\">Create a new codespace</h1>\n\t\t</div>\n\t\t<Steps :steps=\"steps\">\n\t\t\t<template\n\t\t\t\tv-slot=\"{ active: activeStep, next, previous, hasPrevious, hasNext }\"\n\t\t\t>\n\t\t\t\t<div class=\"mt-8\"></div>\n\t\t\t\t<Hostname\n\t\t\t\t\tv-show=\"activeStep.name === 'Hostname'\"\n\t\t\t\t\tv-model=\"subdomain\"\n\t\t\t\t\t:domain=\"domain\"\n\t\t\t\t\t@error=\"error => (subdomainValid = !Boolean(error))\"\n\t\t\t\t/>\n\t\t\t\t<Group v-show=\"activeStep.name === 'Group'\" v-model=\"selectedGroup\" />\n\t\t\t\t<Bench\n\t\t\t\t\tv-if=\"selectedGroup\"\n\t\t\t\t\tv-show=\"activeStep.name === 'Bench'\"\n\t\t\t\t\tv-model=\"selectedBench\"\n\t\t\t\t\t:selectedGroup=\"selectedGroup.name\"\n\t\t\t\t/>\n\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\tclass=\"mb-4\"\n\t\t\t\t\t\t:message=\"$resources.newCodeServer.error\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button v-if=\"hasPrevious\" class=\"w-full\" @click=\"previous\">\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-if=\"hasNext\"\n\t\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t@click=\"nextStep(activeStep, next)\"\n\t\t\t\t\t\t\t:class=\"{ 'mt-2': hasPrevious }\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-show=\"!hasNext\"\n\t\t\t\t\t\t\tclass=\"w-full mt-2\"\n\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t@click=\"$resources.newCodeServer.submit()\"\n\t\t\t\t\t\t\t:loading=\"$resources.newCodeServer.loading\"\n\t\t\t\t\t\t\t:disabled=\"selectedBench == null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate Codespace\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</Steps>\n\t</WizardCard>\n</template>\n\n<script>\nimport WizardCard from '@/components/WizardCard.vue';\nimport Steps from '@/components/Steps.vue';\nimport Hostname from './NewCodeServerHostname.vue';\nimport Group from './NewCodeServerGroup.vue';\nimport Bench from './NewCodeServerBench.vue';\n\nexport default {\n\tname: 'NewServer',\n\tcomponents: {\n\t\tWizardCard,\n\t\tSteps,\n\t\tHostname,\n\t\tGroup,\n\t\tBench\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttitle: null,\n\t\t\tsubdomain: null,\n\t\t\tdomain: null,\n\t\t\tsubdomainValid: false,\n\t\t\tselectedGroup: null,\n\t\t\tselectedBench: null,\n\t\t\tsteps: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Hostname',\n\t\t\t\t\tvalidate: () => {\n\t\t\t\t\t\treturn this.subdomainValid;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Group',\n\t\t\t\t\tvalidate: () => {\n\t\t\t\t\t\treturn this.selectedGroup != null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Bench'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t},\n\tasync mounted() {\n\t\tthis.domain = await this.$call('press.api.spaces.code_server_domain');\n\t},\n\tresources: {\n\t\tnewCodeServer() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.spaces.create_code_server',\n\t\t\t\tparams: {\n\t\t\t\t\tsubdomain: this.subdomain,\n\t\t\t\t\tbench: this.selectedBench,\n\t\t\t\t\tdomain: this.domain\n\t\t\t\t},\n\t\t\t\tonSuccess(r) {\n\t\t\t\t\tthis.$router.replace(`/codeservers/${r}/jobs`);\n\t\t\t\t},\n\t\t\t\tvalidate() {\n\t\t\t\t\tif (this.selectedBench === null) {\n\t\t\t\t\t\treturn 'Please select a bench version to deploy the code server on';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tasync nextStep(activeStep, next) {\n\t\t\tnext();\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","subdomain","error","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_cache","_createElementVNode","$props","args","$options","_toDisplayString","_createCommentVNode","data","group","value","_openBlock","_createElementBlock","_Fragment","_renderList","$data","bench","_createBlock","_component_LoadingText","_withCtx","_createTextVNode","Hostname","__async","activeStep","next","_component_WizardCard","$event","_vShow","_ctx","previous","_normalizeClass","hasPrevious"],"mappings":"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"}