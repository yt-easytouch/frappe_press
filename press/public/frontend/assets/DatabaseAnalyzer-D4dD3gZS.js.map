{"version":3,"file":"DatabaseAnalyzer-D4dD3gZS.js","sources":["../../../../dashboard/src2/components/ToggleContent.vue","../../../../dashboard/src2/components/devtools/database/DatabaseProcessKillButton.vue","../../../../dashboard/src2/components/devtools/database/DatabaseTableSchemaSizeDetailsDialog.vue","../../../../dashboard/src2/components/devtools/database/DatabaseAddIndexButton.vue","../../../../dashboard/src2/components/devtools/database/DatabasePerformanceSchemaDisabledNotice.vue","../../../../dashboard/src2/pages/devtools/database/DatabaseAnalyzer.vue"],"sourcesContent":["<template>\n\t<div class=\"rounded border text-base\">\n\t\t<div\n\t\t\tclass=\"flex cursor-pointer select-none flex-row items-center justify-between gap-2 p-4\"\n\t\t\t@click=\"toggleVisibility\"\n\t\t\t:class=\"{\n\t\t\t\t'!pb-2': isVisible\n\t\t\t}\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t<p class=\"font-medium text-gray-800\">\n\t\t\t\t\t{{ label }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"mt-2 text-sm text-gray-700\" v-if=\"subLabel\">\n\t\t\t\t\t{{ subLabel }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<slot name=\"actions\" v-if=\"isVisible\"></slot>\n\t\t</div>\n\n\t\t<div v-if=\"isVisible\" class=\"text-sm leading-normal\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'ToggleContent',\n\tprops: {\n\t\tlabel: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tsubLabel: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisVisible: false\n\t\t};\n\t},\n\tmethods: {\n\t\ttoggleVisibility() {\n\t\t\tthis.isVisible = !this.isVisible;\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<p v-if=\"isKilled\">Process Killed</p>\n\t<Button\n\t\tv-else\n\t\t@click=\"killProcess\"\n\t\t:loading=\"this.$resources.killProcess.loading\"\n\t\tloadingText=\"Killing\"\n\t\ticonLeft=\"x\"\n\t\tvariant=\"ghost\"\n\t\tclass=\"w-full\"\n\t\t>Kill</Button\n\t>\n</template>\n<script>\nimport { toast } from 'vue-sonner';\nexport default {\n\tprops: {\n\t\trow: { type: Object, required: true },\n\t\tsite: { type: String, required: true },\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisKilled: false,\n\t\t};\n\t},\n\tresources: {\n\t\tkillProcess() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'kill_database_process',\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tid: this.row.ID,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\tthis.isKilled = true;\n\t\t\t\t\ttoast.success('Database Process Killed');\n\t\t\t\t},\n\t\t\t\tauto: false,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tkillProcess() {\n\t\t\tthis.$resources.killProcess.submit();\n\t\t},\n\t},\n};\n</script>\n","<template>\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: 'Table Size',\n\t\t\tsize: '3xl'\n\t\t}\"\n\t>\n\t\t<template #body-content>\n\t\t\t<ObjectList :options=\"listOptions\" />\n\t\t</template>\n\t</Dialog>\n</template>\n<script>\nimport { h } from 'vue';\nimport ObjectList from '../../ObjectList.vue';\nimport { toast } from 'vue-sonner';\n\nexport default {\n\tname: 'DatabaseTableSchemaSizeDetails',\n\tprops: {\n\t\tsite: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\ttableSchemas: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tviewSchemaDetails: {\n\t\t\ttype: Function,\n\t\t\trequired: true\n\t\t}\n\t},\n\tcomponents: {\n\t\tObjectList\n\t},\n\tcomputed: {\n\t\tlistOptions() {\n\t\t\tif (!this.tableSchemas) return {};\n\t\t\tlet data = [];\n\t\t\tfor (const tableName in this.tableSchemas) {\n\t\t\t\tconst table = this.tableSchemas[tableName];\n\t\t\t\tdata.push({\n\t\t\t\t\ttable_name: tableName,\n\t\t\t\t\tindex_size: this.bytesToMB(table.size.index_length),\n\t\t\t\t\tdata_size: this.bytesToMB(table.size.data_length),\n\t\t\t\t\ttotal_size: this.bytesToMB(table.size.total_size)\n\t\t\t\t});\n\t\t\t}\n\t\t\t// sort in the order of total_size\n\t\t\tdata.sort((a, b) => b.total_size - a.total_size);\n\t\t\treturn {\n\t\t\t\tdata: () => data,\n\t\t\t\thideControls: true,\n\t\t\t\tcolumns: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Table Name',\n\t\t\t\t\t\tfieldname: 'table_name',\n\t\t\t\t\t\twidth: '180px',\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\ttype: 'Component',\n\t\t\t\t\t\tcomponent({ row }) {\n\t\t\t\t\t\t\treturn h(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclass: 'truncate text-base cursor-copy',\n\t\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\t\tif ('clipboard' in navigator) {\n\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(row.table_name);\n\t\t\t\t\t\t\t\t\t\t\ttoast.success('Copied to clipboard');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[row.table_name]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Total Size (MB)',\n\t\t\t\t\t\tfieldname: 'total_size',\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Data Size (MB)',\n\t\t\t\t\t\tfieldname: 'data_size',\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Index Size (MB)',\n\t\t\t\t\t\tfieldname: 'index_size',\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'View Schema',\n\t\t\t\t\t\tfieldname: 'table_name',\n\t\t\t\t\t\ttype: 'Component',\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\tcomponent: ({ row }) => {\n\t\t\t\t\t\t\treturn h(\n\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclass:\n\t\t\t\t\t\t\t\t\t\t'inline-flex items-center justify-center gap-2 transition-colors focus:outline-none text-gray-800 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 focus-visible:ring focus-visible:ring-gray-400 h-7 text-base px-2 rounded',\n\t\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\t\tthis.viewSchemaDetails(row.table_name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t['View Schema']\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tbytesToMB(bytes) {\n\t\t\treturn (bytes / (1024 * 1024)).toFixed(2);\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<Button v-if=\"isJobRunning\" @click=\"viewJob\" variant=\"ghost\" class=\"w-full\"\n\t\t>View Job</Button\n\t>\n\t<Button\n\t\tv-else\n\t\t@click=\"addIndex\"\n\t\t:loading=\"this.$resources.addIndex.loading\"\n\t\tloadingText=\"Adding Index\"\n\t\ticonLeft=\"plus\"\n\t\tvariant=\"ghost\"\n\t\tclass=\"w-full\"\n\t\t>Add DB Index</Button\n\t>\n</template>\n<script>\nimport { toast } from 'vue-sonner';\nexport default {\n\tprops: {\n\t\trow: { type: Object, required: true },\n\t\tsite: { type: String, required: true }\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisJobRunning: false,\n\t\t\tjobName: null\n\t\t};\n\t},\n\tresources: {\n\t\taddIndex() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'add_database_index',\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\ttable: this.row['Table'],\n\t\t\t\t\t\t\tcolumn: this.row['Column']\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tif (data?.message) {\n\t\t\t\t\t\tif (data?.message?.success) {\n\t\t\t\t\t\t\ttoast.success(data?.message?.message);\n\t\t\t\t\t\t\tthis.isJobRunning = true;\n\t\t\t\t\t\t\tthis.jobName = data?.message?.job_name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoast.error(data?.message?.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tauto: false\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\taddIndex() {\n\t\t\tthis.$resources.addIndex.submit();\n\t\t},\n\t\tviewJob() {\n\t\t\tif (this.jobName) {\n\t\t\t\twindow.open(\n\t\t\t\t\tthis.$router.resolve(\n\t\t\t\t\t\t`/sites/${this.site}/insights/jobs/${this.jobName}`\n\t\t\t\t\t).href,\n\t\t\t\t\t'_blank'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n};\n</script>\n","<template>\n\t<div class=\"flex h-60 flex-col items-center justify-center gap-1\">\n\t\t<p class=\"text-base text-gray-700\">\n\t\t\tPerformance Schema is not enabled on database server\n\t\t</p>\n\t\t<p class=\"text-base text-gray-700\">\n\t\t\tPlease reach out to\n\t\t\t<a href=\"https://support.frappe.io/\" target=\"_blank\" class=\"underline\"\n\t\t\t\t>support</a\n\t\t\t>\n\t\t\tto enable it\n\t\t</p>\n\t</div>\n</template>\n<script>\nexport default {\n\tname: 'DatabasePerformanceSchemaDisabledNotice'\n};\n</script>\n","<template>\n\t<Header class=\"sticky top-0 z-10 bg-white\">\n\t\t<div\n\t\t\tclass=\"flex w-full flex-col gap-2 md:flex-row md:items-center md:justify-between\"\n\t\t>\n\t\t\t<div class=\"flex flex-row items-center gap-2\">\n\t\t\t\t<!-- Title -->\n\t\t\t\t<Breadcrumbs\n\t\t\t\t\t:items=\"[\n\t\t\t\t\t\t{ label: 'Dev Tools', route: '/database-analyzer' },\n\t\t\t\t\t\t{ label: 'Database Analyzer', route: '/database-analyzer' },\n\t\t\t\t\t]\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"flex flex-row gap-2\">\n\t\t\t\t<LinkControl\n\t\t\t\t\tclass=\"cursor-pointer\"\n\t\t\t\t\t:options=\"{ doctype: 'Site', filters: { status: 'Active' } }\"\n\t\t\t\t\tplaceholder=\"Select a site\"\n\t\t\t\t\tv-model=\"site\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ticonLeft=\"refresh-ccw\"\n\t\t\t\t\tvariant=\"subtle\"\n\t\t\t\t\t:loading=\"site && !isRequiredInformationReceived\"\n\t\t\t\t\t:disabled=\"!site\"\n\t\t\t\t\t@click=\"\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\tfetchTableSchemas({\n\t\t\t\t\t\t\t\treload: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"md:hidden\">Schema</span>\n\t\t\t\t\t<span class=\"hidden md:inline\">Refresh Schema</span>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t</Header>\n\t<div class=\"m-5\">\n\t\t<!-- body -->\n\t\t<div class=\"mt-2 flex flex-col\" v-if=\"isRequiredInformationReceived\">\n\t\t\t<!-- Database Size Analyzer -->\n\t\t\t<div>\n\t\t\t\t<div class=\"flex flex-row items-center justify-between\">\n\t\t\t\t\t<p class=\"text-base font-medium text-gray-800\">\n\t\t\t\t\t\tDatabase Size Breakup\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"flex flex-row gap-2\">\n\t\t\t\t\t\t<Button @click=\"this.showTableSchemaSizeDetailsDialog = true\">\n\t\t\t\t\t\t\tView Details\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t@click=\"optimizeTable\"\n\t\t\t\t\t\t\t:loading=\"this.$resources.optimizeTable.loading\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOptimize Table\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Slider -->\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mb-4 mt-4 flex h-7 w-full cursor-pointer items-start justify-start overflow-clip rounded border bg-gray-50 pl-0\"\n\t\t\t\t\t@click=\"showTableSchemaSizeDetailsDialog = true\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"h-7\"\n\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\tbackgroundColor: '#E86C13',\n\t\t\t\t\t\t\twidth: `${databaseSizeBreakup.data_size_percentage}%`,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t></div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"h-7\"\n\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\tbackgroundColor: '#34BAE3',\n\t\t\t\t\t\t\twidth: `${databaseSizeBreakup.index_size_percentage}%`,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<!-- Table -->\n\t\t\t\t<div\n\t\t\t\t\tclass=\"full flex w-full flex-col items-start justify-start overflow-y-auto rounded px-1.5\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"flex w-full items-center justify-start gap-x-2 py-3\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"h-2 w-2 rounded-full\"\n\t\t\t\t\t\t\tstyle=\"background-color: #e86c13\"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<span class=\"text-sm text-gray-800\">Data Size</span\n\t\t\t\t\t\t><span class=\"ml-auto text-sm text-gray-800\">{{\n\t\t\t\t\t\t\tformatSizeInMB(this.databaseSizeBreakup.data_size)\n\t\t\t\t\t\t}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"flex w-full items-center justify-start gap-x-2 border-t py-3\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"h-2 w-2 rounded-full\"\n\t\t\t\t\t\t\tstyle=\"background-color: #34bae3\"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<span class=\"text-sm text-gray-800\">Index Size</span\n\t\t\t\t\t\t><span class=\"ml-auto text-sm text-gray-800\"\n\t\t\t\t\t\t\t>{{ formatSizeInMB(this.databaseSizeBreakup.index_size) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"flex w-full items-center justify-start gap-x-2 border-t py-3\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"h-2 w-2 rounded-full\"\n\t\t\t\t\t\t\tstyle=\"background-color: #e2e2e2\"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<span class=\"text-sm text-gray-800\">Free Space</span\n\t\t\t\t\t\t><span class=\"ml-auto text-sm text-gray-800\"\n\t\t\t\t\t\t\t>{{ formatSizeInMB(this.databaseSizeBreakup.free_size) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Database Processes -->\n\t\t\t<ToggleContent\n\t\t\t\tclass=\"mt-3\"\n\t\t\t\tlabel=\"Database Processes\"\n\t\t\t\tsubLabel=\"Analyze the processes of the database\"\n\t\t\t>\n\t\t\t\t<template #actions>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t:loading=\"this.$resources.databaseProcesses.loading\"\n\t\t\t\t\t\t\tloading-text=\"Refreshing\"\n\t\t\t\t\t\t\ticon-left=\"rotate-ccw\"\n\t\t\t\t\t\t\t@click.stop=\"this.$resources.databaseProcesses.submit()\"\n\t\t\t\t\t\t\t>Refresh</Button\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t<template #default>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"this.$resources.databaseProcesses.loading\"\n\t\t\t\t\t\tclass=\"flex h-60 w-full items-center justify-center gap-2 text-base text-gray-700\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Spinner class=\"w-4\" /> Loading Database Processes\n\t\t\t\t\t</div>\n\t\t\t\t\t<ResultTable\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\tclass=\"mt-2\"\n\t\t\t\t\t\t:columns=\"databaseProcesses.columns\"\n\t\t\t\t\t\t:data=\"databaseProcesses.data\"\n\t\t\t\t\t\t:alignColumns=\"alignColumns\"\n\t\t\t\t\t\t:cellFormatters=\"cellFormatters\"\n\t\t\t\t\t\t:fullViewFormatters=\"fullViewFormatters\"\n\t\t\t\t\t\tactionHeaderLabel=\"Kill\"\n\t\t\t\t\t\t:actionComponent=\"DatabaseProcessKillButton\"\n\t\t\t\t\t\t:actionComponentProps=\"{\n\t\t\t\t\t\t\tsite: this.site,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:enableCSVExport=\"false\"\n\t\t\t\t\t\t:borderLess=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t</ToggleContent>\n\n\t\t\t<!-- Queries Information -->\n\t\t\t<ToggleContent\n\t\t\t\tclass=\"mt-3\"\n\t\t\t\tlabel=\"SQL Query Analysis\"\n\t\t\t\tsubLabel=\"Check the concerning queries that might be affecting your database performance\"\n\t\t\t>\n\t\t\t\t<div class=\"mt-1\">\n\t\t\t\t\t<FTabs\n\t\t\t\t\t\t:tabs=\"queryTabs\"\n\t\t\t\t\t\tv-model=\"queryTabIndex\"\n\t\t\t\t\t\tv-if=\"queryTabs.length\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #tab-panel=\"{ tab }\">\n\t\t\t\t\t\t\t<DatabasePerformanceSchemaDisabledNotice\n\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\t(tab.label === 'Time Consuming Queries' ||\n\t\t\t\t\t\t\t\t\t\ttab.label === 'Full Table Scan Queries') &&\n\t\t\t\t\t\t\t\t\t!isPerformanceSchemaEnabled\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ResultTable\n\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t:columns=\"tab.columns\"\n\t\t\t\t\t\t\t\t:data=\"tab.data\"\n\t\t\t\t\t\t\t\t:alignColumns=\"alignColumns\"\n\t\t\t\t\t\t\t\t:cellFormatters=\"cellFormatters\"\n\t\t\t\t\t\t\t\t:fullViewFormatters=\"fullViewFormatters\"\n\t\t\t\t\t\t\t\t:enableCSVExport=\"false\"\n\t\t\t\t\t\t\t\t:borderLess=\"true\"\n\t\t\t\t\t\t\t\t:isTruncateText=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</FTabs>\n\t\t\t\t</div>\n\t\t\t</ToggleContent>\n\n\t\t\t<!-- Indexes Information -->\n\t\t\t<ToggleContent\n\t\t\t\tclass=\"mt-3\"\n\t\t\t\tlabel=\"Database Index Analysis\"\n\t\t\t\tsubLabel=\"Analyze the indexes of the database\"\n\t\t\t>\n\t\t\t\t<div class=\"mt-1\">\n\t\t\t\t\t<FTabs\n\t\t\t\t\t\t:tabs=\"databaseIndexesTab\"\n\t\t\t\t\t\tv-model=\"dbIndexTabIndex\"\n\t\t\t\t\t\tv-if=\"databaseIndexesTab.length\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #tab-panel=\"{ tab }\">\n\t\t\t\t\t\t\t<DatabasePerformanceSchemaDisabledNotice\n\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\t(tab.label === 'Unused Indexes' ||\n\t\t\t\t\t\t\t\t\t\ttab.label === 'Suggested Indexes') &&\n\t\t\t\t\t\t\t\t\t!isPerformanceSchemaEnabled\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div v-else-if=\"tab.label === 'Suggested Indexes'\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\t\t!isIndexSuggestionTriggered ||\n\t\t\t\t\t\t\t\t\t\tthis.$resources.suggestDatabaseIndexes.loading ||\n\t\t\t\t\t\t\t\t\t\tthis.fetchingDatabaseIndex\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\tclass=\"flex h-60 flex-col items-center justify-center gap-4\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.isIndexSuggestionTriggered = true;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.$resources.suggestDatabaseIndexes.submit();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t\t:loading=\"\n\t\t\t\t\t\t\t\t\t\t\tthis.$resources.suggestDatabaseIndexes.loading ||\n\t\t\t\t\t\t\t\t\t\t\tthis.fetchingDatabaseIndex\n\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t\t>Suggest Indexes</Button\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\t\t\t\t\t\tThis may take a while to analyze\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ResultTable\n\t\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t\t:columns=\"suggestedDatabaseIndexes.columns\"\n\t\t\t\t\t\t\t\t\t:data=\"suggestedDatabaseIndexes.data\"\n\t\t\t\t\t\t\t\t\t:alignColumns=\"alignColumns\"\n\t\t\t\t\t\t\t\t\t:cellFormatters=\"cellFormatters\"\n\t\t\t\t\t\t\t\t\t:fullViewFormatters=\"fullViewFormatters\"\n\t\t\t\t\t\t\t\t\t:enableCSVExport=\"false\"\n\t\t\t\t\t\t\t\t\t:borderLess=\"true\"\n\t\t\t\t\t\t\t\t\tactionHeaderLabel=\"Add Index\"\n\t\t\t\t\t\t\t\t\t:actionComponent=\"DatabaseAddIndexButton\"\n\t\t\t\t\t\t\t\t\t:actionComponentProps=\"{\n\t\t\t\t\t\t\t\t\t\tsite: this.site,\n\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t:isTruncateText=\"true\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ResultTable\n\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t:columns=\"tab.columns\"\n\t\t\t\t\t\t\t\t:data=\"tab.data\"\n\t\t\t\t\t\t\t\t:alignColumns=\"alignColumns\"\n\t\t\t\t\t\t\t\t:cellFormatters=\"cellFormatters\"\n\t\t\t\t\t\t\t\t:fullViewFormatters=\"fullViewFormatters\"\n\t\t\t\t\t\t\t\t:isTruncateText=\"true\"\n\t\t\t\t\t\t\t\t:enableCSVExport=\"false\"\n\t\t\t\t\t\t\t\t:borderLess=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</FTabs>\n\t\t\t\t</div>\n\t\t\t</ToggleContent>\n\n\t\t\t<DatabaseTableSchemaSizeDetailsDialog\n\t\t\t\tv-if=\"this.site\"\n\t\t\t\t:site=\"this.site\"\n\t\t\t\t:tableSchemas=\"tableSchemas\"\n\t\t\t\tv-model=\"showTableSchemaSizeDetailsDialog\"\n\t\t\t\t:viewSchemaDetails=\"viewTableSchemaDetails\"\n\t\t\t/>\n\n\t\t\t<DatabaseTableSchemaDialog\n\t\t\t\tv-if=\"this.site\"\n\t\t\t\t:site=\"this.site\"\n\t\t\t\t:tableSchemas=\"tableSchemas\"\n\t\t\t\t:pre-selected-schema=\"preSelectedSchemaForSchemaDialog\"\n\t\t\t\tv-model=\"showTableSchemasDialog\"\n\t\t\t/>\n\t\t</div>\n\t\t<div\n\t\t\tv-else-if=\"!site\"\n\t\t\tclass=\"flex h-full min-h-[80vh] w-full items-center justify-center gap-2 text-gray-700\"\n\t\t>\n\t\t\tSelect a site to get started\n\t\t</div>\n\t\t<div\n\t\t\tclass=\"flex h-full min-h-[80vh] w-full items-center justify-center gap-2 text-gray-700\"\n\t\t\tv-else\n\t\t>\n\t\t\t<Spinner class=\"w-4\" /> Loading Table Schemas\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport Header from '../../../components/Header.vue';\nimport { Tabs, Breadcrumbs } from 'frappe-ui';\nimport LinkControl from '../../../components/LinkControl.vue';\nimport ObjectList from '../../../components/ObjectList.vue';\nimport { h, markRaw } from 'vue';\nimport { toast } from 'vue-sonner';\nimport { formatValue } from '../../../utils/format';\nimport ToggleContent from '../../../components/ToggleContent.vue';\nimport ResultTable from '../../../components/devtools/database/ResultTable.vue';\nimport DatabaseProcessKillButton from '../../../components/devtools/database/DatabaseProcessKillButton.vue';\nimport DatabaseTableSchemaDialog from '../../../components/devtools/database/DatabaseTableSchemaDialog.vue';\nimport DatabaseTableSchemaSizeDetailsDialog from '../../../components/devtools/database/DatabaseTableSchemaSizeDetailsDialog.vue';\nimport DatabaseAddIndexButton from '../../../components/devtools/database/DatabaseAddIndexButton.vue';\nimport DatabasePerformanceSchemaDisabledNotice from '../../../components/devtools/database/DatabasePerformanceSchemaDisabledNotice.vue';\n\nexport default {\n\tname: 'DatabaseAnalyzer',\n\tcomponents: {\n\t\tHeader,\n\t\tBreadcrumbs,\n\t\tFTabs: Tabs,\n\t\tLinkControl,\n\t\tObjectList,\n\t\tToggleContent,\n\t\tResultTable,\n\t\tDatabaseTableSchemaDialog,\n\t\tDatabaseTableSchemaSizeDetailsDialog,\n\t\tDatabaseProcessKillButton,\n\t\tDatabasePerformanceSchemaDisabledNotice,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tsite: null,\n\t\t\terrorMessage: null,\n\t\t\tisIndexSuggestionTriggered: false,\n\t\t\tqueryTabIndex: 0,\n\t\t\tdbIndexTabIndex: 0,\n\t\t\tshowTableSchemaSizeDetailsDialog: false,\n\t\t\tpreSelectedSchemaForSchemaDialog: null,\n\t\t\tshowTableSchemasDialog: false,\n\t\t\tfetchingDatabaseIndex: false,\n\t\t\tDatabaseProcessKillButton: markRaw(DatabaseProcessKillButton),\n\t\t\tDatabaseAddIndexButton: markRaw(DatabaseAddIndexButton),\n\t\t};\n\t},\n\tmounted() {\n\t\tconst url = new URL(window.location.href);\n\t\tconst site_name = url.searchParams.get('site');\n\t\tif (site_name) {\n\t\t\tthis.site = site_name;\n\t\t}\n\t},\n\twatch: {\n\t\tsite(site_name) {\n\t\t\tif (!site_name) return;\n\t\t\t// set site to query param ?site=site_name\n\t\t\tconst url = new URL(window.location.href);\n\t\t\turl.searchParams.set('site', site_name);\n\t\t\twindow.history.pushState({}, '', url);\n\n\t\t\t// reset state\n\t\t\tthis.data = null;\n\t\t\tthis.errorMessage = null;\n\t\t\tthis.fetchTableSchemas({\n\t\t\t\tsite_name: site_name,\n\t\t\t});\n\t\t\tthis.$resources.site.submit();\n\t\t\tthis.$resources.databasePerformanceReport.submit({\n\t\t\t\tdt: 'Site',\n\t\t\t\tdn: site_name,\n\t\t\t\tmethod: 'get_database_performance_report',\n\t\t\t});\n\t\t\tthis.$resources.databaseProcesses.submit({\n\t\t\t\tdt: 'Site',\n\t\t\t\tdn: site_name,\n\t\t\t\tmethod: 'fetch_database_processes',\n\t\t\t});\n\t\t},\n\t},\n\tresources: {\n\t\tsite() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.get',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn { doctype: 'Site', name: this.site };\n\t\t\t\t},\n\t\t\t\tauto: false,\n\t\t\t};\n\t\t},\n\t\ttableSchemas() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tauto: false,\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'fetch_database_table_schema',\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\tif (data?.message?.loading) {\n\t\t\t\t\t\tsetTimeout(this.fetchTableSchemas, 5000);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\toptimizeTable() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tauto: false,\n\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\tif (data?.message) {\n\t\t\t\t\t\tif (data?.message?.success) {\n\t\t\t\t\t\t\ttoast.success(data?.message?.message);\n\t\t\t\t\t\t\tthis.$router.push(\n\t\t\t\t\t\t\t\t`/sites/${this.site}/insights/jobs/${data?.message?.job_name}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoast.error(data?.message?.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tdatabasePerformanceReport() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'get_database_performance_report',\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tauto: false,\n\t\t\t};\n\t\t},\n\t\tsuggestDatabaseIndexes() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'suggest_database_indexes',\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\tif (data?.message) {\n\t\t\t\t\t\tthis.fetchingDatabaseIndex =\n\t\t\t\t\t\t\tthis.$resources.suggestDatabaseIndexes?.data?.message?.loading ??\n\t\t\t\t\t\t\tfalse;\n\t\t\t\t\t\tif (this.fetchingDatabaseIndex) {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tthis.$resources.suggestDatabaseIndexes.submit();\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tauto: false,\n\t\t\t};\n\t\t},\n\t\tdatabaseProcesses() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.client.run_doc_method',\n\t\t\t\tinitialData: {},\n\t\t\t\tmakeParams: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdt: 'Site',\n\t\t\t\t\t\tdn: this.site,\n\t\t\t\t\t\tmethod: 'fetch_database_processes',\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tauto: false,\n\t\t\t};\n\t\t},\n\t},\n\tcomputed: {\n\t\tsite_info() {\n\t\t\treturn this.$resources.site.data;\n\t\t},\n\t\tisRequiredInformationReceived() {\n\t\t\tif (this.$resources.site?.loading ?? true) return false;\n\t\t\tif (this.$resources.tableSchemas.loading) return false;\n\t\t\tif (this.$resources.tableSchemas?.data?.message?.loading) return false;\n\t\t\tif (!this.$resources.tableSchemas?.data?.message?.data) return false;\n\t\t\tif (this.$resources.tableSchemas?.data?.message?.data == {}) return false;\n\t\t\tif (!this.$resources.databasePerformanceReport?.data?.message)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\ttableSchemas() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\tlet result = this.$resources.tableSchemas?.data?.message?.data ?? [];\n\t\t\treturn result;\n\t\t},\n\t\ttableSizeInfo() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\tlet data = [];\n\t\t\tfor (const tableName in this.tableSchemas) {\n\t\t\t\tconst table = this.tableSchemas[tableName];\n\t\t\t\tdata.push({\n\t\t\t\t\ttable_name: tableName,\n\t\t\t\t\tdata_size_mb: (table.size.data_length / (1024 * 1024)).toFixed(3),\n\t\t\t\t\tindex_size_mb: (table.size.index_length / (1024 * 1024)).toFixed(3),\n\t\t\t\t\ttotal_size_mb: (table.size.total_size / (1024 * 1024)).toFixed(3),\n\t\t\t\t\tno_of_columns: table.columns.length,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn data;\n\t\t},\n\t\ttableAnalysisTableOptions() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\treturn {\n\t\t\t\tdata: () => this.tableSizeInfo,\n\t\t\t\thideControls: true,\n\t\t\t\tcolumns: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Table Name',\n\t\t\t\t\t\tfieldname: 'table_name',\n\t\t\t\t\t\twidth: 0.5,\n\t\t\t\t\t\ttype: 'Component',\n\t\t\t\t\t\tcomponent({ row }) {\n\t\t\t\t\t\t\treturn h(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclass: 'truncate text-base cursor-copy',\n\t\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\t\tif ('clipboard' in navigator) {\n\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(row.table_name);\n\t\t\t\t\t\t\t\t\t\t\ttoast.success('Copied to clipboard');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[row.table_name],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Size (MB)',\n\t\t\t\t\t\tfieldname: 'total_size_mb',\n\t\t\t\t\t\twidth: 0.5,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'No of Columns',\n\t\t\t\t\t\tfieldname: 'no_of_columns',\n\t\t\t\t\t\twidth: 0.5,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\t\t},\n\t\tdatabaseSizeBreakup() {\n\t\t\tif (!this.isRequiredInformationReceived) return null;\n\t\t\tlet data_size = this.tableSizeInfo.reduce(\n\t\t\t\t(a, b) => a + parseFloat(b.data_size_mb),\n\t\t\t\t0,\n\t\t\t);\n\t\t\tdata_size = data_size.toFixed(2);\n\n\t\t\tlet index_size = this.tableSizeInfo.reduce(\n\t\t\t\t(a, b) => a + parseFloat(b.index_size_mb),\n\t\t\t\t0,\n\t\t\t);\n\t\t\tindex_size = index_size.toFixed(2);\n\n\t\t\tlet database_size_limit =\n\t\t\t\tthis.site_info.current_plan.max_database_usage.toFixed(2);\n\n\t\t\treturn {\n\t\t\t\tdata_size,\n\t\t\t\tindex_size,\n\t\t\t\tdatabase_size_limit,\n\t\t\t\tfree_size: (database_size_limit - data_size - index_size).toFixed(2),\n\t\t\t\tdata_size_percentage: parseInt((data_size / database_size_limit) * 100),\n\t\t\t\tindex_size_percentage: parseInt(\n\t\t\t\t\t(index_size / database_size_limit) * 100,\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\tisPerformanceSchemaEnabled() {\n\t\t\tconst result = this.$resources.databasePerformanceReport?.data?.message;\n\t\t\tif (!result) return false;\n\t\t\treturn result['is_performance_schema_enabled'];\n\t\t},\n\t\tqueryTabs() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\tconst result = this.$resources.databasePerformanceReport?.data?.message;\n\t\t\tif (!result) return [];\n\t\t\tlet prepared_result = [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Slow Queries',\n\t\t\t\t\tcolumns: ['Rows Examined', 'Rows Sent', 'Calls', 'Duration', 'Query'],\n\t\t\t\t\tdata: result['slow_queries'].map((e) => {\n\t\t\t\t\t\treturn [e.rows_examined, e.rows_sent, e.count, e.duration, e.query];\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Consuming Queries',\n\t\t\t\t\tcolumns: ['Percentage', 'Calls', 'Avg Time', 'Query'],\n\t\t\t\t\tdata: result['top_10_time_consuming_queries'].map((e) => {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tMath.round(e['percent'], 1),\n\t\t\t\t\t\t\te['calls'],\n\t\t\t\t\t\t\te['avg_time_ms'],\n\t\t\t\t\t\t\te['query'],\n\t\t\t\t\t\t];\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Full Table Scan Queries',\n\t\t\t\t\tcolumns: ['Rows Examined', 'Rows Sent', 'Calls', 'Query'],\n\t\t\t\t\tdata: result['top_10_queries_with_full_table_scan'].map((e) => {\n\t\t\t\t\t\treturn [e['rows_examined'], e['rows_sent'], e['calls'], e['query']];\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t];\n\t\t\treturn prepared_result;\n\t\t},\n\t\tdatabaseIndexesTab() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\tconst result = this.$resources.databasePerformanceReport?.data?.message;\n\t\t\tif (!result) return [];\n\t\t\tlet prepared_result = [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Suggested Indexes',\n\t\t\t\t\tcolumns: ['Table', 'Column', 'Index Name', 'Sample Query'],\n\t\t\t\t\tdata: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Redundant Indexes',\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t'Table Name',\n\t\t\t\t\t\t'Dominant Index',\n\t\t\t\t\t\t'Dominant Index Columns',\n\t\t\t\t\t\t'Redundant Index',\n\t\t\t\t\t\t'Redundant Index Columns',\n\t\t\t\t\t],\n\t\t\t\t\tdata: result['redundant_indexes'].map((e) => {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\te['table_name'],\n\t\t\t\t\t\t\te['dominant_index_name'],\n\t\t\t\t\t\t\te['dominant_index_columns'],\n\t\t\t\t\t\t\te['redundant_index_name'],\n\t\t\t\t\t\t\te['redundant_index_columns'],\n\t\t\t\t\t\t];\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Unused Indexes',\n\t\t\t\t\tcolumns: ['Table Name', 'Index Name'],\n\t\t\t\t\tdata: result['unused_indexes'].map((e) => {\n\t\t\t\t\t\treturn [e['table_name'], e['index_name']];\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t];\n\t\t\treturn prepared_result;\n\t\t},\n\t\tsuggestedDatabaseIndexes() {\n\t\t\tif (!this.isRequiredInformationReceived) return [];\n\t\t\tconst result =\n\t\t\t\tthis.$resources.suggestDatabaseIndexes?.data?.message?.data ?? [];\n\t\t\tlet data = [];\n\t\t\tfor (const record of result) {\n\t\t\t\tfor (const index of record.suggested_indexes) {\n\t\t\t\t\tdata.push([index.table, index.column, record.normalized]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcolumns: ['Table', 'Column', 'Slow Query'],\n\t\t\t\tdata: data,\n\t\t\t};\n\t\t},\n\t\tdatabaseProcesses() {\n\t\t\tif (!this.isRequiredInformationReceived) return null;\n\t\t\tconst result = this.$resources.databaseProcesses.data?.message ?? [];\n\t\t\treturn {\n\t\t\t\tcolumns: ['ID', 'State', 'Time', 'User', 'Host', 'Command', 'Query'],\n\t\t\t\tdata: result.map((e) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\te['id'],\n\t\t\t\t\t\te['state'],\n\t\t\t\t\t\te['time'],\n\t\t\t\t\t\te['db_user'],\n\t\t\t\t\t\te['db_user_host'],\n\t\t\t\t\t\te['command'],\n\t\t\t\t\t\te['query'],\n\t\t\t\t\t];\n\t\t\t\t}),\n\t\t\t};\n\t\t},\n\t\tcellFormatters() {\n\t\t\treturn {\n\t\t\t\t'Rows Examined': (v) => formatValue(v, 'commaSeperatedNumber'),\n\t\t\t\t'Rows Sent': (v) => formatValue(v, 'commaSeperatedNumber'),\n\t\t\t\tCalls: (v) => formatValue(v, 'commaSeperatedNumber'),\n\t\t\t\t'Avg Time': (v) => formatValue(v, 'durationMilliseconds'),\n\t\t\t\tDuration: (v) => formatValue(v, 'durationSeconds'),\n\t\t\t\tTime: (v) => formatValue(v, 'durationSeconds'),\n\t\t\t};\n\t\t},\n\t\tfullViewFormatters() {\n\t\t\treturn {\n\t\t\t\tQuery: (v) => formatValue(v, 'sql'),\n\t\t\t};\n\t\t},\n\t\talignColumns() {\n\t\t\treturn {\n\t\t\t\tPercentage: 'right',\n\t\t\t\t'Rows Examined': 'right',\n\t\t\t\t'Rows Sent': 'right',\n\t\t\t\tCalls: 'right',\n\t\t\t\t'Avg Time': 'right',\n\t\t\t\tDuration: 'right',\n\t\t\t\tTime: 'right',\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tfetchTableSchemas({ site_name = null, reload = false } = {}) {\n\t\t\tif (!site_name) site_name = this.site;\n\t\t\tif (!site_name) return;\n\t\t\tthis.$resources.tableSchemas.submit({\n\t\t\t\tdt: 'Site',\n\t\t\t\tdn: site_name,\n\t\t\t\tmethod: 'fetch_database_table_schema',\n\t\t\t\targs: {\n\t\t\t\t\treload,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\toptimizeTable() {\n\t\t\tthis.$resources.optimizeTable.submit({\n\t\t\t\tdt: 'Site',\n\t\t\t\tdn: this.site,\n\t\t\t\tmethod: 'optimize_tables',\n\t\t\t});\n\t\t},\n\t\tviewTableSchemaDetails(tableName) {\n\t\t\tthis.showTableSchemaSizeDetailsDialog = false;\n\t\t\tthis.preSelectedSchemaForSchemaDialog = tableName;\n\t\t\tthis.showTableSchemasDialog = true;\n\t\t},\n\t\tformatSizeInMB(mb) {\n\t\t\ttry {\n\t\t\t\tlet floatMB = parseFloat(mb);\n\t\t\t\tif (floatMB < 1) {\n\t\t\t\t\tlet kb = floatMB * 1024; // Convert MB to KB\n\t\t\t\t\treturn `${Math.round(kb)} KB`; // Return KB without decimal\n\t\t\t\t} else if (floatMB < 1024) {\n\t\t\t\t\treturn `${Math.round(floatMB)} MB`; // Return MB without decimal\n\t\t\t\t} else {\n\t\t\t\t\tlet gb = floatMB / 1024; // Convert MB to GB\n\t\t\t\t\treturn `${gb.toFixed(1)} GB`; // Return GB with 1 decimal\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\treturn `${mb} MB`; // Return MB without decimal\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n"],"names":["_sfc_main","_hoisted_1","_hoisted_2","_openBlock","_createElementBlock","_cache","args","$options","_createCommentVNode","_renderSlot","_ctx","_hoisted_4","data","toast","_withCtx","_createTextVNode","ObjectList","tableName","table","a","b","row","h","bytes","_b","_c","_d","_createElementVNode","Header","DatabaseTableSchemaSizeDetailsDialog","DatabasePerformanceSchemaDisabledNotice","site_name","url","_a","_e","_h","_g","_f","_k","_j","_i","data_size","index_size","database_size_limit","result","e","index","record","v","formatValue","reload","mb","kb","floatMB","_hoisted_3","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_16","_hoisted_17","_Fragment","$data","$event","_hoisted_5","_normalizeStyle","_toDisplayString","_withModifiers","_hoisted_15","tab","_createBlock","_component_DatabasePerformanceSchemaDisabledNotice","_hoisted_18","_hoisted_19","_hoisted_21"],"mappings":"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"}