{"version":3,"file":"Progress.vue_vue_type_script_setup_true_lang-DREy3z5o.js","sources":["../../../../dashboard/node_modules/frappe-ui/src/components/Progress.vue"],"sourcesContent":["<template>\n  <div class=\"w-full space-y-[10px]\">\n    <div\n      v-if=\"props.label || props.hint\"\n      class=\"flex items-baseline justify-between\"\n    >\n      <span v-if=\"props.label\" class=\"text-base font-medium text-ink-gray-8\">\n        {{ props.label }}\n      </span>\n      <!-- Empty for alignment -->\n      <span v-else></span>\n\n      <span class=\"self-end\" v-if=\"props.hint || $slots.hint\">\n        <slot name=\"hint\">\n          <span class=\"text-base font-medium text-ink-gray-4\">\n            {{ props.value }}%\n          </span>\n        </slot>\n      </span>\n    </div>\n\n    <div\n      class=\"overflow-hidden rounded-xl\"\n      :class=\"indicatorContainerClasses\"\n      :aria-valuemax=\"MAX_VALUE\"\n      :aria-valuemin=\"MIN_VALUE\"\n      :aria-valuenow=\"props.value\"\n      role=\"progressbar\"\n    >\n      <!-- Continuous Progress Bar -->\n      <div\n        v-if=\"!props.intervals\"\n        class=\"h-full bg-surface-gray-7\"\n        :style=\"`width: ${props.value}%`\"\n      ></div>\n\n      <!-- Interval Progress Bar -->\n      <div\n        v-else\n        v-for=\"index in intervalCount\"\n        class=\"h-full w-full\"\n        :class=\"\n          index <= filledIntervalCount\n            ? 'bg-surface-gray-7'\n            : 'bg-surface-gray-2'\n        \"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nconst MIN_VALUE = 0\nconst MAX_VALUE = 100\n\ninterface ProgressProps {\n  value: number\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  label?: string\n  hint?: boolean\n  intervals?: boolean\n  intervalCount?: number\n}\n\nconst props = withDefaults(defineProps<ProgressProps>(), {\n  size: 'sm',\n  hint: false,\n  label: '',\n  intervals: false,\n  intervalCount: 6,\n})\n\nconst indicatorContainerClasses = computed(() => {\n  const heightClass = {\n    sm: 'h-[2px]',\n    md: 'h-1',\n    lg: 'h-2',\n    xl: 'h-3',\n  }[props.size]\n\n  const layoutClasses = props.intervals\n    ? 'flex space-x-1'\n    : 'relative bg-surface-gray-2'\n\n  return [heightClass, layoutClasses]\n})\n\nconst filledIntervalCount = computed(() => {\n  if (props.value > MAX_VALUE) {\n    return props.intervalCount\n  }\n\n  return Math.round((props.value / MAX_VALUE) * props.intervalCount)\n})\n</script>\n"],"names":["MIN_VALUE","MAX_VALUE","props","__props","indicatorContainerClasses","computed","heightClass","layoutClasses","filledIntervalCount"],"mappings":"igCAsDMA,EAAY,EACZC,EAAY,yLAWlB,MAAMC,EAAQC,EAQRC,EAA4BC,EAAS,IAAM,CAC/C,MAAMC,EAAc,CAClB,GAAI,UACJ,GAAI,MACJ,GAAI,MACJ,GAAI,KAAA,EACJJ,EAAM,IAAI,EAENK,EAAgBL,EAAM,UACxB,iBACA,6BAEG,MAAA,CAACI,EAAaC,CAAa,CAAA,CACnC,EAEKC,EAAsBH,EAAS,IAC/BH,EAAM,MAAQD,EACTC,EAAM,cAGR,KAAK,MAAOA,EAAM,MAAQD,EAAaC,EAAM,aAAa,CAClE","x_google_ignoreList":[0]}