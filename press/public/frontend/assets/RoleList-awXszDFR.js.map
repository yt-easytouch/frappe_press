{"version":3,"file":"RoleList-awXszDFR.js","sources":["../../../../dashboard/src2/components/settings/RoleList.vue"],"sourcesContent":["<template>\n\t<ObjectList :options=\"listOptions\" />\n</template>\n\n<script setup lang=\"jsx\">\nimport { h, ref } from 'vue';\nimport { toast } from 'vue-sonner';\nimport { FeatherIcon } from 'frappe-ui';\nimport { icon, renderDialog, confirmDialog } from '../../utils/components';\nimport ObjectList from '../ObjectList.vue';\nimport RoleConfigureDialog from './RoleConfigureDialog.vue';\nimport router from '../../router';\nimport UserAvatarGroup from '../AvatarGroup.vue';\nimport { getToastErrorMessage } from '../../utils/toast';\n\nconst listOptions = ref({\n\tdoctype: 'Press Role',\n\tfields: [\n\t\t{ users: ['user', 'user.full_name', 'user.user_image'] },\n\t\t'admin_access',\n\t],\n\tdocumentation: 'https://easytouch.cloud/docs/role-permissions',\n\tcolumns: [\n\t\t{\n\t\t\tlabel: 'Role',\n\t\t\tfieldname: 'title',\n\t\t\twidth: 1,\n\t\t\tsuffix: (row) => {\n\t\t\t\treturn row.admin_access ? (\n\t\t\t\t\t<FeatherIcon name=\"shield\" class=\"ml-1 h-4 w-4 text-gray-700\" />\n\t\t\t\t) : null;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tlabel: 'Members',\n\t\t\ttype: 'Component',\n\t\t\tcomponent: ({ row }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tconfigureRole(row);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclass=\"flex h-6 items-center space-x-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<UserAvatarGroup users={row.users} />\n\t\t\t\t\t\t<Button label=\"Add Member\">\n\t\t\t\t\t\t\t{{ icon: () => <i-lucide-plus class=\"h-4 w-4 text-gray-600\" /> }}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t\twidth: 1,\n\t\t},\n\t],\n\trowActions({ row, listResource: roleListResource }) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: 'Edit Permissions',\n\t\t\t\tonClick() {\n\t\t\t\t\trouter.push({\n\t\t\t\t\t\tname: 'SettingsPermissionRolePermissions',\n\t\t\t\t\t\tparams: { roleId: row.name },\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Configure Role',\n\t\t\t\tonClick: () => configureRole(row),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Delete Role',\n\t\t\t\tonClick() {\n\t\t\t\t\tif (roleListResource.delete.loading) return;\n\t\t\t\t\tconfirmDialog({\n\t\t\t\t\t\ttitle: 'Delete Role',\n\t\t\t\t\t\tmessage: `Are you sure you want to delete the role <b>${row.title}</b>?`,\n\t\t\t\t\t\tonSuccess({ hide }) {\n\t\t\t\t\t\t\tif (roleListResource.delete.loading) return;\n\t\t\t\t\t\t\ttoast.promise(roleListResource.delete.submit(row.name), {\n\t\t\t\t\t\t\t\tloading: 'Deleting Role...',\n\t\t\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\t\t\troleListResource.reload();\n\t\t\t\t\t\t\t\t\thide();\n\t\t\t\t\t\t\t\t\treturn `Role ${row.title} deleted`;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: (e) => getToastErrorMessage(e),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\troute(row) {\n\t\treturn {\n\t\t\tname: 'SettingsPermissionRolePermissions',\n\t\t\tparams: { roleId: row.name },\n\t\t};\n\t},\n\tprimaryAction({ listResource: groups }) {\n\t\treturn {\n\t\t\tlabel: 'New Role',\n\t\t\tvariant: 'solid',\n\t\t\tslots: {\n\t\t\t\tprefix: icon('plus'),\n\t\t\t},\n\t\t\tonClick() {\n\t\t\t\tconfirmDialog({\n\t\t\t\t\ttitle: 'Create Role',\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldname: 'title',\n\t\t\t\t\t\t\tlabel: 'Role',\n\t\t\t\t\t\t\tautocomplete: 'off',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tonSuccess({ hide, values }) {\n\t\t\t\t\t\tif (values.title) {\n\t\t\t\t\t\t\treturn groups.insert.submit(\n\t\t\t\t\t\t\t\t{ title: values.title },\n\t\t\t\t\t\t\t\t{ onSuccess: hide },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t},\n});\n\nfunction configureRole(row) {\n\trenderDialog(h(RoleConfigureDialog, { roleId: row.name }));\n}\n</script>\n"],"names":["doctype","fields","users","documentation","columns","label","fieldname","width","row","_createVNode","FeatherIcon","type","component","e","_resolveComponent","icon","rowActions","listResource","onClick","name","params","roleListResource","confirmDialog","title","message","onSuccess","hide","toast","loading","error","primaryAction","variant","slots","autocomplete","values","groups","renderDialog"],"mappings":"q3CAgBCA,QAAAA,aACAC,OAAAA,CAAAA,CACGC,MAAAA,CAAAA,OAAAA,iBAAAA,iBAAAA,mBAGHC,cAAAA,gDACAC,QAAAA,CAAAA,CAEEC,MAAAA,OACAC,UAAAA,QACAC,MAAAA,YAECC,EAAA,aAAAC,EAAAC,EAAA,CAAuB,KAAA,SAAA,MAAA,4BAAA,EAAA,IAAA,EAAA,IAIzB,EAAA,CAECL,MAAAA,UACAM,KAAAA,YACAC,UAAAA,CAAAA,CAAcJ,IAAAA,CAAI,IACjBC,EAAA,MAAA,CAAA,QAAAI,GAAA,0BAKG,MAAA,yCAAA,MAAAL,EAAA,eAGgCM,EAAA,CAAA,MAAA,YAAA,EAAA,CAE7BC,KAAAA,IAAAA,EAAMD,EAAA,CAAA,MAAA,uBAAA,EAAA,IAAA,CAAqD,CAAA,CAAA,CAAA,EAKlEP,MAAAA,CACD,CAAA,EAEDS,WAAAA,OAAkBC,aAAAA,CAA+B,EAAA,CAChD,MAAA,CAAA,CAEEZ,MAAAA,mBACAa,SAAAA,SAEEC,KAAAA,oCACAC,OAAAA,cAA2B,CAC5B,CAAA,CACD,CACD,EAAA,CAECf,MAAAA,iBACAa,QAAAA,IAAAA,EAAAA,CAAAA,CACD,EAAA,CAECb,MAAAA,cACAa,SAAAA,CACCG,EAAA,OAAA,SACAC,EAAAA,CACCC,MAAAA,cACAC,QAAAA,+CAAAA,EAAAA,KAAAA,QACAC,UAAAA,CAAYC,KAAAA,CAAK,EAAA,CAChBL,EAAA,OAAA,SACAM,EAAAA,QAAAA,EAAAA,OAAAA,OAAAA,EAAAA,IAAAA,EAAAA,CACCC,QAAAA,2CAGCF,EAAAA,EACA,QAAAlB,EAAA,KAAA,YAEDqB,MAAAA,GAAAA,EAAAA,CAAAA,CACD,CAAA,CACD,CACD,CAAA,CACD,CACD,CAAA,mBAKAV,KAAAA,oCACAC,OAAAA,cAA2B,IAG7BU,cAAAA,CAAgBb,aAAAA,CAAqB,EAAA,QAEnCZ,MAAAA,WACA0B,QAAAA,QACAC,MAAAA,mBAGAd,SAAAA,CACCI,EAAAA,CACCC,MAAAA,cACAtB,OAAAA,CAAAA,CAEEK,UAAAA,QACAD,MAAAA,OACA4B,aAAAA,KACD,CAAA,EAEDR,UAAAA,QAAkBS,OAAAA,CAAO,EAAA,gBAEvBC,EAAA,OAAA,OAAA,cACuB,EAAA,CACpBV,UAAAA,CAAgB,CAAA,EAGpB,IACD,CACD,CAAA,CACD,EAEF,CACD,CAAA,gBAGCW,EAAAA,EAAAA,EAAAA,cAAuD,CAAA,CAAA,CACxD"}