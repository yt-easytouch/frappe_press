{"version":3,"file":"CardForm-DBdGk3af.js","sources":["../../../../dashboard/src2/components/billing/NewAddressForm.vue","../../../../dashboard/src2/logo/PoweredByStripeLogo.vue","../../../../dashboard/src2/components/billing/CardForm.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"flex flex-col gap-5\">\n\t\t\t<div\n\t\t\t\tv-for=\"section in sections\"\n\t\t\t\t:key=\"section.name\"\n\t\t\t\tclass=\"grid gap-4\"\n\t\t\t\t:class=\"'grid-cols-' + section.columns\"\n\t\t\t>\n\t\t\t\t<div v-for=\"field in section.fields\" :key=\"field.name\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tv-model=\"billingInformation[field.fieldname]\"\n\t\t\t\t\t\t:label=\"field.label || field.fieldname\"\n\t\t\t\t\t\t:type=\"getInputType(field)\"\n\t\t\t\t\t\t:name=\"field.fieldname\"\n\t\t\t\t\t\t:options=\"field.options\"\n\t\t\t\t\t\t:disabled=\"props.disableForm\"\n\t\t\t\t\t\t:required=\"field.required\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-show=\"billingInformation.country == 'India'\">\n\t\t\t\t<FormControl\n\t\t\t\t\tlabel=\"I have GSTIN\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t:disabled=\"props.disableForm\"\n\t\t\t\t\tv-model=\"gstApplicable\"\n\t\t\t\t/>\n\t\t\t\t<FormControl\n\t\t\t\t\tv-if=\"gstApplicable\"\n\t\t\t\t\tclass=\"mt-5\"\n\t\t\t\t\tlabel=\"GSTIN\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:disabled=\"props.disableForm\"\n\t\t\t\t\tv-model=\"billingInformation.gstin\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<ErrorMessage class=\"mt-2\" :message=\"updateBillingInformation.error\" />\n\t</div>\n</template>\n<script setup>\nimport { FormControl, ErrorMessage, createResource } from 'frappe-ui';\nimport { ref, computed, inject, watch } from 'vue';\nimport { toast } from 'vue-sonner';\nimport { DashboardError } from '../../utils/error';\n\nconst emit = defineEmits(['success']);\nconst team = inject('team');\n\nconst billingInformation = defineModel();\nconst props = defineProps({\n\tdisableForm: { type: Boolean, default: false },\n});\n\nconst updateBillingInformation = createResource({\n\turl: 'press.api.account.update_billing_information',\n\tmakeParams: () => {\n\t\treturn { billing_details: billingInformation.value };\n\t},\n\tvalidate: async () => {\n\t\tlet error = await validate();\n\t\tif (error) throw new DashboardError(error);\n\t},\n\tonSuccess: () => {\n\t\ttoast.success('Billing information updated');\n\t\temit('success');\n\t},\n});\n\nconst gstApplicable = ref(false);\n\nwatch(\n\t() => billingInformation.value.gstin,\n\t(gstin) => {\n\t\tgstApplicable.value = gstin && gstin !== 'Not Applicable';\n\t},\n);\n\nasync function validate() {\n\t// validate mandatory fields\n\tfor (let field of sections.value.flatMap((s) => s.fields)) {\n\t\tif (field.required && !billingInformation.value[field.fieldname]) {\n\t\t\treturn `${field.label} is required`;\n\t\t}\n\t}\n\n\tif (!gstApplicable.value) {\n\t\tbillingInformation.value.gstin = 'Not Applicable';\n\t}\n\n\t// validate gstin\n\treturn await validateGST();\n}\n\nconst _indianStates = [\n\t'Andaman and Nicobar Islands',\n\t'Andhra Pradesh',\n\t'Arunachal Pradesh',\n\t'Assam',\n\t'Bihar',\n\t'Chandigarh',\n\t'Chhattisgarh',\n\t'Dadra and Nagar Haveli and Daman and Diu',\n\t'Delhi',\n\t'Goa',\n\t'Gujarat',\n\t'Haryana',\n\t'Himachal Pradesh',\n\t'Jammu and Kashmir',\n\t'Jharkhand',\n\t'Karnataka',\n\t'Kerala',\n\t'Ladakh',\n\t'Lakshadweep Islands',\n\t'Madhya Pradesh',\n\t'Maharashtra',\n\t'Manipur',\n\t'Meghalaya',\n\t'Mizoram',\n\t'Nagaland',\n\t'Odisha',\n\t'Other Territory',\n\t'Puducherry',\n\t'Punjab',\n\t'Rajasthan',\n\t'Sikkim',\n\t'Tamil Nadu',\n\t'Telangana',\n\t'Tripura',\n\t'Uttar Pradesh',\n\t'Uttarakhand',\n\t'West Bengal',\n];\n\nconst _countryList = createResource({\n\turl: 'press.api.account.country_list',\n\tcache: 'countryList',\n\tauto: true,\n\tonSuccess: () => {\n\t\tlet userCountry = team.doc?.country;\n\t\tif (userCountry) {\n\t\t\tlet country = countryList.value?.find((d) => d.label === userCountry);\n\t\t\tif (country) {\n\t\t\t\tbillingInformation.value.country = country.value;\n\t\t\t}\n\t\t}\n\t},\n});\n\nconst countryList = computed(() => {\n\treturn (_countryList.data || []).map((d) => ({\n\t\tlabel: d.name,\n\t\tvalue: d.name,\n\t}));\n});\n\nconst indianStates = computed(() => {\n\treturn _indianStates.map((state) => ({\n\t\tlabel: state,\n\t\tvalue: state,\n\t}));\n});\n\nconst sections = computed(() => {\n\treturn [\n\t\t{\n\t\t\tname: 'Country and City',\n\t\t\tcolumns: 2,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Country',\n\t\t\t\t\tfieldname: 'country',\n\t\t\t\t\toptions: countryList.value,\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'City',\n\t\t\t\t\tfieldname: 'city',\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'Address',\n\t\t\tcolumns: 1,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'Address',\n\t\t\t\t\tfieldname: 'address',\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'State and Postal Code',\n\t\t\tcolumns: 2,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype:\n\t\t\t\t\t\tbillingInformation.value.country === 'India' ? 'Select' : 'Data',\n\t\t\t\t\tlabel: 'State / Province / Region',\n\t\t\t\t\tfieldname: 'state',\n\t\t\t\t\trequired: true,\n\t\t\t\t\toptions:\n\t\t\t\t\t\tbillingInformation.value.country === 'India'\n\t\t\t\t\t\t\t? indianStates.value\n\t\t\t\t\t\t\t: null,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tlabel: 'Postal Code',\n\t\t\t\t\tfieldname: 'postal_code',\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t];\n});\n\nfunction getInputType(field) {\n\treturn {\n\t\tData: 'text',\n\t\tInt: 'number',\n\t\tSelect: 'select',\n\t\tCheck: 'checkbox',\n\t\tPassword: 'password',\n\t\tText: 'textarea',\n\t\tDate: 'date',\n\t}[field.fieldtype || 'Data'];\n}\n\nconst _validateGST = createResource({\n\turl: 'press.api.billing.validate_gst',\n\tparams: { address: billingInformation.value },\n});\n\nasync function validateGST() {\n\tbillingInformation.value.gstin =\n\t\tbillingInformation.value.gstin || 'Not Applicable';\n\tawait _validateGST.submit();\n}\n\ndefineExpose({ updateBillingInformation, validate });\n</script>\n","<template>\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\twidth=\"119px\"\n\t\theight=\"26px\"\n\t>\n\t\t<path\n\t\t\tfill-rule=\"evenodd\"\n\t\t\topacity=\"0.349\"\n\t\t\tfill=\"rgb(66, 71, 112)\"\n\t\t\td=\"M113.000,26.000 L6.000,26.000 C2.686,26.000 -0.000,23.314 -0.000,20.000 L-0.000,6.000 C-0.000,2.686 2.686,-0.000 6.000,-0.000 L113.000,-0.000 C116.314,-0.000 119.000,2.686 119.000,6.000 L119.000,20.000 C119.000,23.314 116.314,26.000 113.000,26.000 ZM118.000,6.000 C118.000,3.239 115.761,1.000 113.000,1.000 L6.000,1.000 C3.239,1.000 1.000,3.239 1.000,6.000 L1.000,20.000 C1.000,22.761 3.239,25.000 6.000,25.000 L113.000,25.000 C115.761,25.000 118.000,22.761 118.000,20.000 L118.000,6.000 Z\"\n\t\t/>\n\t\t<path\n\t\t\tfill-rule=\"evenodd\"\n\t\t\topacity=\"0.502\"\n\t\t\tfill=\"rgb(66, 71, 112)\"\n\t\t\td=\"M60.700,18.437 L59.395,18.437 L60.405,15.943 L58.395,10.871 L59.774,10.871 L61.037,14.323 L62.310,10.871 L63.689,10.871 L60.700,18.437 ZM55.690,16.259 C55.238,16.259 54.774,16.091 54.354,15.764 L54.354,16.133 L53.007,16.133 L53.007,8.566 L54.354,8.566 L54.354,11.229 C54.774,10.913 55.238,10.745 55.690,10.745 C57.100,10.745 58.068,11.881 58.068,13.502 C58.068,15.122 57.100,16.259 55.690,16.259 ZM55.406,11.902 C55.038,11.902 54.669,12.060 54.354,12.376 L54.354,14.628 C54.669,14.943 55.038,15.101 55.406,15.101 C56.164,15.101 56.690,14.449 56.690,13.502 C56.690,12.555 56.164,11.902 55.406,11.902 ZM47.554,15.764 C47.144,16.091 46.681,16.259 46.218,16.259 C44.818,16.259 43.840,15.122 43.840,13.502 C43.840,11.881 44.818,10.745 46.218,10.745 C46.681,10.745 47.144,10.913 47.554,11.229 L47.554,8.566 L48.912,8.566 L48.912,16.133 L47.554,16.133 L47.554,15.764 ZM47.554,12.376 C47.249,12.060 46.881,11.902 46.513,11.902 C45.744,11.902 45.218,12.555 45.218,13.502 C45.218,14.449 45.744,15.101 46.513,15.101 C46.881,15.101 47.249,14.943 47.554,14.628 L47.554,12.376 ZM39.535,13.870 C39.619,14.670 40.251,15.217 41.134,15.217 C41.619,15.217 42.155,15.038 42.702,14.722 L42.702,15.849 C42.103,16.122 41.503,16.259 40.913,16.259 C39.324,16.259 38.209,15.101 38.209,13.460 C38.209,11.871 39.303,10.745 40.808,10.745 C42.187,10.745 43.123,11.829 43.123,13.375 C43.123,13.523 43.123,13.691 43.102,13.870 L39.535,13.870 ZM40.756,11.786 C40.103,11.786 39.598,12.271 39.535,12.997 L41.829,12.997 C41.787,12.281 41.356,11.786 40.756,11.786 ZM35.988,12.618 L35.988,16.133 L34.641,16.133 L34.641,10.871 L35.988,10.871 L35.988,11.397 C36.367,10.976 36.830,10.745 37.282,10.745 C37.430,10.745 37.577,10.755 37.724,10.797 L37.724,11.997 C37.577,11.955 37.409,11.934 37.251,11.934 C36.809,11.934 36.335,12.176 35.988,12.618 ZM29.979,13.870 C30.063,14.670 30.694,15.217 31.578,15.217 C32.062,15.217 32.599,15.038 33.146,14.722 L33.146,15.849 C32.546,16.122 31.946,16.259 31.357,16.259 C29.768,16.259 28.653,15.101 28.653,13.460 C28.653,11.871 29.747,10.745 31.252,10.745 C32.630,10.745 33.567,11.829 33.567,13.375 C33.567,13.523 33.567,13.691 33.546,13.870 L29.979,13.870 ZM31.199,11.786 C30.547,11.786 30.042,12.271 29.979,12.997 L32.273,12.997 C32.231,12.281 31.799,11.786 31.199,11.786 ZM25.274,16.133 L24.200,12.555 L23.137,16.133 L21.927,16.133 L20.117,10.871 L21.464,10.871 L22.527,14.449 L23.590,10.871 L24.810,10.871 L25.873,14.449 L26.936,10.871 L28.283,10.871 L26.484,16.133 L25.274,16.133 ZM17.043,16.259 C15.454,16.259 14.328,15.112 14.328,13.502 C14.328,11.881 15.454,10.745 17.043,10.745 C18.632,10.745 19.748,11.881 19.748,13.502 C19.748,15.112 18.632,16.259 17.043,16.259 ZM17.043,11.871 C16.254,11.871 15.707,12.534 15.707,13.502 C15.707,14.470 16.254,15.133 17.043,15.133 C17.822,15.133 18.369,14.470 18.369,13.502 C18.369,12.534 17.822,11.871 17.043,11.871 ZM11.128,13.533 L9.918,13.533 L9.918,16.133 L8.571,16.133 L8.571,8.892 L11.128,8.892 C12.602,8.892 13.654,9.850 13.654,11.218 C13.654,12.586 12.602,13.533 11.128,13.533 ZM10.939,9.987 L9.918,9.987 L9.918,12.439 L10.939,12.439 C11.718,12.439 12.265,11.944 12.265,11.218 C12.265,10.482 11.718,9.987 10.939,9.987 Z\"\n\t\t/>\n\t\t<path\n\t\t\tfill-rule=\"evenodd\"\n\t\t\topacity=\"0.502\"\n\t\t\tfill=\"rgb(66, 71, 112)\"\n\t\t\td=\"M111.116,14.051 L105.557,14.051 C105.684,15.382 106.659,15.774 107.766,15.774 C108.893,15.774 109.781,15.536 110.555,15.146 L110.555,17.433 C109.784,17.861 108.765,18.169 107.408,18.169 C104.642,18.169 102.704,16.437 102.704,13.013 C102.704,10.121 104.348,7.825 107.049,7.825 C109.746,7.825 111.154,10.120 111.154,13.028 C111.154,13.303 111.129,13.898 111.116,14.051 ZM107.031,10.140 C106.321,10.140 105.532,10.676 105.532,11.955 L108.468,11.955 C108.468,10.677 107.728,10.140 107.031,10.140 ZM98.108,18.169 C97.114,18.169 96.507,17.750 96.099,17.451 L96.093,20.664 L93.254,21.268 L93.253,8.014 L95.753,8.014 L95.901,8.715 C96.293,8.349 97.012,7.825 98.125,7.825 C100.119,7.825 101.997,9.621 101.997,12.927 C101.997,16.535 100.139,18.169 98.108,18.169 ZM97.446,10.340 C96.795,10.340 96.386,10.578 96.090,10.903 L96.107,15.122 C96.383,15.421 96.780,15.661 97.446,15.661 C98.496,15.661 99.200,14.518 99.200,12.989 C99.200,11.504 98.485,10.340 97.446,10.340 ZM89.149,8.014 L91.999,8.014 L91.999,17.966 L89.149,17.966 L89.149,8.014 ZM89.149,4.836 L91.999,4.230 L91.999,6.543 L89.149,7.149 L89.149,4.836 ZM86.110,11.219 L86.110,17.966 L83.272,17.966 L83.272,8.014 L85.727,8.014 L85.905,8.853 C86.570,7.631 87.897,7.879 88.275,8.015 L88.275,10.625 C87.914,10.508 86.781,10.338 86.110,11.219 ZM80.024,14.475 C80.024,16.148 81.816,15.627 82.179,15.482 L82.179,17.793 C81.801,18.001 81.115,18.169 80.187,18.169 C78.502,18.169 77.237,16.928 77.237,15.247 L77.250,6.138 L80.022,5.548 L80.024,8.014 L82.180,8.014 L82.180,10.435 L80.024,10.435 L80.024,14.475 ZM76.485,14.959 C76.485,17.003 74.858,18.169 72.497,18.169 C71.518,18.169 70.448,17.979 69.392,17.525 L69.392,14.814 C70.345,15.332 71.559,15.721 72.500,15.721 C73.133,15.721 73.589,15.551 73.589,15.026 C73.589,13.671 69.273,14.181 69.273,11.038 C69.273,9.028 70.808,7.825 73.111,7.825 C74.052,7.825 74.992,7.969 75.933,8.344 L75.933,11.019 C75.069,10.552 73.972,10.288 73.109,10.288 C72.514,10.288 72.144,10.460 72.144,10.903 C72.144,12.181 76.485,11.573 76.485,14.959 Z\"\n\t\t/>\n\t</svg>\n</template>\n","<template>\n\t<div class=\"relative\">\n\t\t<div\n\t\t\tv-if=\"!ready\"\n\t\t\tclass=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-8 transform\"\n\t\t>\n\t\t\t<Spinner class=\"h-5 w-5 text-gray-700\" />\n\t\t</div>\n\t\t<div :class=\"{ 'opacity-0': !ready }\">\n\t\t\t<div v-show=\"!tryingMicroCharge\">\n\t\t\t\t<label class=\"block\">\n\t\t\t\t\t<span class=\"block text-xs text-gray-600\">\n\t\t\t\t\t\tCredit or Debit Card\n\t\t\t\t\t</span>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"form-input mt-2 block h-[unset] w-full py-2 pl-3\"\n\t\t\t\t\t\tref=\"cardElementRef\"\n\t\t\t\t\t></div>\n\t\t\t\t\t<ErrorMessage class=\"mt-1\" :message=\"cardErrorMessage\" />\n\t\t\t\t</label>\n\t\t\t\t<FormControl\n\t\t\t\t\tclass=\"mt-4\"\n\t\t\t\t\tlabel=\"Name on Card\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tv-model=\"billingInformation.cardHolderName\"\n\t\t\t\t/>\n\t\t\t\t<NewAddressForm\n\t\t\t\t\tref=\"addressFormRef\"\n\t\t\t\t\tclass=\"mt-5\"\n\t\t\t\t\tv-model=\"billingInformation\"\n\t\t\t\t\t:disable-form=\"props.disableAddressForm\"\n\t\t\t\t\t@success=\"console.log('Address form submitted')\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div class=\"mt-3 space-y-4\" v-show=\"tryingMicroCharge\">\n\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\tWe are attempting to charge your card with\n\t\t\t\t\t<strong>{{ formattedMicroChargeAmount }}</strong> to make sure the\n\t\t\t\t\tcard works. This amount will be <strong>refunded</strong> back to your\n\t\t\t\t\taccount.\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<ErrorMessage class=\"mt-2\" :message=\"errorMessage\" />\n\n\t\t\t<div class=\"mt-6 flex items-center justify-between\">\n\t\t\t\t<PoweredByStripeLogo />\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"showAddAnotherCardButton\"\n\t\t\t\t\tlabel=\"Add Another Card\"\n\t\t\t\t\t@click=\"clearForm\"\n\t\t\t\t>\n\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t<FeatherIcon class=\"h-4\" name=\"plus\" />\n\t\t\t\t\t</template>\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tv-else-if=\"!tryingMicroCharge\"\n\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\tlabel=\"Verify & Save Card\"\n\t\t\t\t\t:loading=\"addingCard\"\n\t\t\t\t\t@click=\"verifyWithMicroChargeIfApplicable\"\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\tv-else-if=\"tryingMicroCharge\"\n\t\t\t\t\t:loading=\"!microChargeCompleted\"\n\t\t\t\t\t:loadingText=\"'Verifying Card'\"\n\t\t\t\t>\n\t\t\t\t\tCard Verified\n\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t<GreenCheckIcon class=\"h-4 w-4\" />\n\t\t\t\t\t</template>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport NewAddressForm from './NewAddressForm.vue';\nimport PoweredByStripeLogo from '../../logo/PoweredByStripeLogo.vue';\nimport {\n\tFeatherIcon,\n\tButton,\n\tFormControl,\n\tSpinner,\n\tErrorMessage,\n\tcreateResource,\n} from 'frappe-ui';\nimport { currency } from '../../utils/format';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { ref, reactive, computed, inject, onMounted } from 'vue';\nimport { toast } from 'vue-sonner';\n\nconst emit = defineEmits(['success']);\nconst props = defineProps({\n\tdisableAddressForm: { type: Boolean, default: true },\n});\n\nconst team = inject('team');\n\nconst stripe = ref(null);\nconst elements = ref(null);\nconst card = ref(null);\nconst ready = ref(false);\nconst _setupIntent = ref(null);\nconst errorMessage = ref(null);\nconst cardErrorMessage = ref(null);\nconst addingCard = ref(false);\nconst tryingMicroCharge = ref(false);\nconst showAddAnotherCardButton = ref(false);\nconst microChargeCompleted = ref(false);\n\nonMounted(() => setupStripeIntent());\n\nconst cardElementRef = ref(null);\n\nconst getPublishedKeyAndSetupIntent = createResource({\n\turl: 'press.api.billing.get_publishable_key_and_setup_intent',\n\tonSuccess: async (data) => {\n\t\tconst { publishable_key, setup_intent } = data;\n\t\t_setupIntent.value = setup_intent;\n\t\tstripe.value = await loadStripe(publishable_key);\n\t\telements.value = stripe.value.elements();\n\t\tconst style = {\n\t\t\tbase: {\n\t\t\t\tcolor: '#171717',\n\t\t\t\tfontFamily: [\n\t\t\t\t\t'ui-sans-serif',\n\t\t\t\t\t'system-ui',\n\t\t\t\t\t'-apple-system',\n\t\t\t\t\t'BlinkMacSystemFont',\n\t\t\t\t\t'\"Segoe UI\"',\n\t\t\t\t\t'Roboto',\n\t\t\t\t\t'\"Helvetica Neue\"',\n\t\t\t\t\t'Arial',\n\t\t\t\t\t'\"Noto Sans\"',\n\t\t\t\t\t'sans-serif',\n\t\t\t\t\t'\"Apple Color Emoji\"',\n\t\t\t\t\t'\"Segoe UI Emoji\"',\n\t\t\t\t\t'\"Segoe UI Symbol\"',\n\t\t\t\t\t'\"Noto Color Emoji\"',\n\t\t\t\t].join(', '),\n\t\t\t\tfontSmoothing: 'antialiased',\n\t\t\t\tfontSize: '13px',\n\t\t\t\t'::placeholder': {\n\t\t\t\t\tcolor: '#C7C7C7',\n\t\t\t\t},\n\t\t\t},\n\t\t\tinvalid: {\n\t\t\t\tcolor: '#C7C7C7',\n\t\t\t\ticonColor: '#C7C7C7',\n\t\t\t},\n\t\t};\n\t\tcard.value = elements.value.create('card', {\n\t\t\thidePostalCode: true,\n\t\t\tstyle: style,\n\t\t\tclasses: {\n\t\t\t\tcomplete: '',\n\t\t\t\tfocus: 'bg-gray-100',\n\t\t\t},\n\t\t});\n\t\tcard.value.mount(cardElementRef.value);\n\t\tcard.value.addEventListener('change', (event) => {\n\t\t\tcardErrorMessage.value = event.error?.message || null;\n\t\t});\n\t\tcard.value.addEventListener('ready', () => {\n\t\t\tready.value = true;\n\t\t});\n\t},\n});\n\nconst countryList = createResource({\n\turl: 'press.api.account.country_list',\n\tcache: 'countryList',\n\tauto: true,\n});\n\nconst browserTimezone = computed(() => {\n\tif (!window.Intl) {\n\t\treturn null;\n\t}\n\treturn Intl.DateTimeFormat().resolvedOptions().timeZone;\n});\n\nconst billingInformation = reactive({\n\tcardHolderName: '',\n\tcountry: '',\n\tgstin: '',\n});\n\ncreateResource({\n\turl: 'press.api.account.get_billing_information',\n\tparams: { timezone: browserTimezone.value },\n\tauto: true,\n\tonSuccess: (data) => {\n\t\tbillingInformation.country = data?.country;\n\t\tbillingInformation.address = data?.address_line1;\n\t\tbillingInformation.city = data?.city;\n\t\tbillingInformation.state = data?.state;\n\t\tbillingInformation.postal_code = data?.pincode;\n\t\tbillingInformation.gstin =\n\t\t\tdata?.gstin == 'Not Applicable' ? '' : data?.gstin;\n\t},\n});\n\nconst setupIntentSuccess = createResource({\n\turl: 'press.api.billing.setup_intent_success',\n\tmakeParams: ({ setupIntent }) => {\n\t\treturn {\n\t\t\tsetup_intent: setupIntent,\n\t\t\taddress: billingInformation,\n\t\t};\n\t},\n\tonSuccess: async ({ payment_method_name }) => {\n\t\taddingCard.value = false;\n\t\ttoast.success('Card added successfully');\n\t\temit('success');\n\t},\n\tonError: (error) => {\n\t\tconsole.error(error);\n\t\taddingCard.value = false;\n\t\terrorMessage.value = error.messages.join('\\n');\n\t\ttoast.error(errorMessage.value);\n\t},\n});\n\nconst verifyCardWithMicroCharge = createResource({\n\turl: 'press.api.billing.create_payment_intent_for_micro_debit',\n\tonSuccess: async (paymentIntent) => {\n\t\tlet { client_secret } = paymentIntent;\n\n\t\tlet payload = await stripe.value.confirmCardPayment(client_secret, {\n\t\t\tpayment_method: { card: card.value },\n\t\t});\n\n\t\tif (payload.paymentIntent?.status === 'succeeded') {\n\t\t\tmicroChargeCompleted.value = true;\n\t\t\tsubmit();\n\t\t} else {\n\t\t\ttryingMicroCharge.value = false;\n\t\t\terrorMessage.value = payload.error?.message;\n\t\t}\n\t},\n\tonError: (error) => {\n\t\tconsole.error(error);\n\t\ttryingMicroCharge.value = false;\n\t\terrorMessage.value = error.messages.join('\\n');\n\t},\n});\n\nasync function setupStripeIntent() {\n\tawait getPublishedKeyAndSetupIntent.submit();\n\tconst { first_name, last_name = '' } = team.doc?.user_info;\n\tconst fullname = `${first_name} ${last_name ?? ''}`;\n\tbillingInformation.cardHolderName = fullname.trimEnd();\n}\n\nconst addressFormRef = ref(null);\n\nasync function submit() {\n\taddingCard.value = true;\n\tlet message = await addressFormRef.value.validate();\n\n\tif (message) {\n\t\terrorMessage.value = message;\n\t\taddingCard.value = false;\n\t\treturn;\n\t} else {\n\t\terrorMessage.value = null;\n\t}\n\n\tconst { setupIntent, error } = await stripe.value.confirmCardSetup(\n\t\t_setupIntent.value.client_secret,\n\t\t{\n\t\t\tpayment_method: {\n\t\t\t\tcard: card.value,\n\t\t\t\tbilling_details: {\n\t\t\t\t\tname: billingInformation.cardHolderName,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tline1: billingInformation.address,\n\t\t\t\t\t\tcity: billingInformation.city,\n\t\t\t\t\t\tstate: billingInformation.state,\n\t\t\t\t\t\tpostal_code: billingInformation.postal_code,\n\t\t\t\t\t\tcountry: getCountryCode(team.doc?.country),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t);\n\tif (error) {\n\t\taddingCard.value = false;\n\t\tlet declineCode = error.decline_code;\n\t\tlet _errorMessage = error.message;\n\t\tif (declineCode === 'do_not_honor') {\n\t\t\terrorMessage.value =\n\t\t\t\t\"Your card was declined. It might be due to insufficient funds or you might've exceeded your daily limit. Please try with another card or contact your bank.\";\n\t\t\tshowAddAnotherCardButton.value = true;\n\t\t} else if (declineCode === 'transaction_not_allowed') {\n\t\t\terrorMessage.value =\n\t\t\t\t'Your card was declined. It might be due to restrictions on your card, like international transactions or online payments. Please try with another card or contact your bank.';\n\t\t\tshowAddAnotherCardButton.value = true;\n\t\t} else if (_errorMessage != 'Your card number is incomplete.') {\n\t\t\terrorMessage.value = _errorMessage;\n\t\t}\n\t} else {\n\t\tif (setupIntent?.status === 'succeeded') {\n\t\t\tsetupIntentSuccess.submit({ setupIntent });\n\t\t}\n\t}\n}\n\nasync function verifyWithMicroChargeIfApplicable() {\n\tconst teamCurrency = team.doc?.currency;\n\tconst verifyCardsWithMicroCharge = window.verify_cards_with_micro_charge;\n\tconst isMicroChargeApplicable =\n\t\tverifyCardsWithMicroCharge === 'Both INR and USD' ||\n\t\t(verifyCardsWithMicroCharge == 'Only INR' && teamCurrency === 'INR') ||\n\t\t(verifyCardsWithMicroCharge === 'Only USD' && teamCurrency === 'USD');\n\tif (isMicroChargeApplicable) {\n\t\tawait _verifyWithMicroCharge();\n\t} else {\n\t\tsubmit();\n\t}\n}\n\nasync function _verifyWithMicroCharge() {\n\ttryingMicroCharge.value = true;\n\treturn verifyCardWithMicroCharge.submit();\n}\n\nfunction getCountryCode(country) {\n\tlet code = countryList.data.find((d) => d.name === country).code;\n\treturn code.toUpperCase();\n}\n\nasync function clearForm() {\n\tready.value = false;\n\terrorMessage.value = null;\n\tshowAddAnotherCardButton.value = false;\n\tcard.value = null;\n\tsetupStripeIntent();\n}\n\nconst formattedMicroChargeAmount = computed(() => {\n\tif (!team.doc?.currency) {\n\t\treturn 0;\n\t}\n\treturn currency(\n\t\tteam.doc?.billing_info?.micro_debit_charge_amount,\n\t\tteam.doc?.currency,\n\t);\n});\n</script>\n"],"names":["emit","__emit","team","inject","billingInformation","_useModel","__props","props","updateBillingInformation","createResource","__async","error","validate","DashboardError","toast","gstApplicable","ref","watch","gstin","field","sections","s","validateGST","_indianStates","_countryList","userCountry","_a","country","_b","countryList","d","computed","indianStates","state","getInputType","_validateGST","__expose","_hoisted_1","_sfc_render","_ctx","_cache","_createElementVNode","stripe","elements","card","ready","_setupIntent","errorMessage","cardErrorMessage","addingCard","tryingMicroCharge","showAddAnotherCardButton","microChargeCompleted","onMounted","setupStripeIntent","cardElementRef","getPublishedKeyAndSetupIntent","data","publishable_key","setup_intent","loadStripe","style","event","browserTimezone","reactive","setupIntentSuccess","setupIntent","_0","payment_method_name","verifyCardWithMicroCharge","paymentIntent","client_secret","payload","submit","first_name","last_name","fullname","addressFormRef","message","getCountryCode","declineCode","_errorMessage","verifyWithMicroChargeIfApplicable","teamCurrency","verifyCardsWithMicroCharge","_verifyWithMicroCharge","clearForm","formattedMicroChargeAmount","currency","_c","_d"],"mappings":"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"}