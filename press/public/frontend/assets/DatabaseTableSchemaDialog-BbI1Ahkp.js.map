{"version":3,"file":"DatabaseTableSchemaDialog-BbI1Ahkp.js","sources":["../../../../dashboard/src2/components/devtools/database/ResultTable.vue","../../../../dashboard/src2/components/devtools/database/DatabaseTableSchemaDialog.vue"],"sourcesContent":["<script setup>\nimport {\n\tFlexRender,\n\tgetCoreRowModel,\n\tgetPaginationRowModel,\n\tuseVueTable,\n} from '@tanstack/vue-table';\nimport { computed, ref, watch } from 'vue';\nimport { unparse } from 'papaparse';\nimport MaximizedIcon from '~icons/lucide/maximize-2';\n\nconst props = defineProps({\n\tcolumns: { type: Array, required: true },\n\tdata: { type: Array, required: true },\n\talignColumns: { type: Object, default: {} },\n\tcellFormatters: { type: Object, default: {} }, // For cell level formatters\n\tfullViewFormatters: { type: Object, default: {} }, // For full view formatters\n\tborderLess: { type: Boolean, default: false },\n\tenableCSVExport: { type: Boolean, default: true },\n\tactionHeaderLabel: { type: String },\n\tactionComponent: { type: Object },\n\tactionComponentProps: { type: Object, default: {} },\n\tisTruncateText: { type: Boolean, default: false },\n\ttruncateLength: { type: Number, default: 70 },\n});\n\nconst generateData = computed(() => {\n\tlet data = [];\n\tfor (let i = 0; i < props.data.length; i++) {\n\t\tlet row = {};\n\t\tfor (let j = 0; j < props.data[i].length; j++) {\n\t\t\trow[props.columns[j]] = props.data[i][j];\n\t\t}\n\t\tdata.push(row);\n\t}\n\treturn data;\n});\n\nconst table = useVueTable({\n\tdata: generateData,\n\tget columns() {\n\t\tif (!props.columns?.length) return [];\n\t\tconst indexColumn = {\n\t\t\tid: '__index',\n\t\t\theader: '#',\n\t\t\taccessorKey: '__index',\n\t\t\tcell: (props) => props.row.index + 1,\n\t\t};\n\t\tconst cols = props.columns.map((column) => {\n\t\t\treturn {\n\t\t\t\tid: column,\n\t\t\t\tcell: (cellProps) => {\n\t\t\t\t\tconst value = cellProps.getValue();\n\t\t\t\t\tif (props.isTruncateText) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\t\ttypeof value === 'string' &&\n\t\t\t\t\t\t\tvalue.length > props.truncateLength\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn `${value.substring(0, props.truncateLength)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (props.cellFormatters[cellProps.column.columnDef.id]) {\n\t\t\t\t\t\treturn props.cellFormatters[cellProps.column.columnDef.id](value);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\theader: column,\n\t\t\t\taccessorKey: column,\n\t\t\t\tenableSorting: false,\n\t\t\t\tisNumber: false,\n\t\t\t\tmeta: {\n\t\t\t\t\talign: props.alignColumns[column] || 'left',\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t\treturn [indexColumn, ...cols];\n\t},\n\tinitialState: {\n\t\tpagination: {\n\t\t\tpageSize: 10,\n\t\t\tpageIndex: 0,\n\t\t},\n\t},\n\tfilterFns: {},\n\tgetCoreRowModel: getCoreRowModel(),\n\tgetPaginationRowModel: getPaginationRowModel(),\n});\n\nconst isTextTruncated = (cell) => {\n\tconst value = cell.getValue();\n\treturn (\n\t\tprops.isTruncateText &&\n\t\tvalue &&\n\t\ttypeof value === 'string' &&\n\t\tvalue.length > props.truncateLength\n\t);\n};\n\nconst fullViewDialogHeader = ref(null);\nconst fullViewDialogBody = ref(null);\nconst showFullViewDialog = ref(false);\nconst handleViewFull = (cell) => {\n\tconst fullText = cell.getValue();\n\tfullViewDialogHeader.value = cell.column.columnDef.header;\n\tfullViewDialogBody.value = fullText;\n\tif (props.fullViewFormatters[cell.column.columnDef.id]) {\n\t\tfullViewDialogBody.value =\n\t\t\tprops.fullViewFormatters[cell.column.columnDef.id](fullText);\n\t}\n\tshowFullViewDialog.value = true;\n};\n\nconst pageLength = computed(() => table.getState().pagination.pageSize);\nconst currPage = computed(() => table.getState().pagination.pageIndex + 1);\n\nconst pageStart = computed(() => (currPage.value - 1) * pageLength.value + 1);\nconst pageEnd = computed(() => {\n\tconst end = currPage.value * pageLength.value;\n\treturn end > props.data.length ? props.data.length : end;\n});\nconst totalRows = computed(() => props.data.length);\nconst showPagination = computed(\n\t() => props.data?.length && totalRows.value > pageLength.value,\n);\n\nconst pageSize = ref(10);\nwatch(pageSize, () => {\n\tcurrPage.value = 1;\n\ttable.setPageSize(pageSize.value);\n});\n\nconst downloadCSV = async () => {\n\tlet csv = unparse({\n\t\tfields: props.columns,\n\t\tdata: props.data,\n\t});\n\tcsv = '\\uFEFF' + csv; // for utf-8\n\t// create a blob and trigger a download\n\tconst blob = new Blob([csv], { type: 'text/csv;charset=utf-8' });\n\tconst randomId = Math.random().toString(36).substring(2, 10);\n\tconst filename = `${randomId}.csv`;\n\tconst link = document.createElement('a');\n\tlink.href = URL.createObjectURL(blob);\n\tlink.download = filename;\n\tlink.click();\n\tURL.revokeObjectURL(link.href);\n};\n</script>\n\n<template>\n\t<!-- Full Value -->\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: fullViewDialogHeader,\n\t\t\tsize: '3xl',\n\t\t}\"\n\t\tv-model=\"showFullViewDialog\"\n\t>\n\t\t<template #body-content>\n\t\t\t<pre\n\t\t\t\tclass=\"mt-2 whitespace-pre-wrap rounded-lg border-2 border-gray-200 bg-gray-100 p-3 text-sm text-gray-700\"\n\t\t\t\t>{{ fullViewDialogBody }}</pre\n\t\t\t>\n\t\t</template>\n\t</Dialog>\n\t<!-- Table -->\n\t<div\n\t\tclass=\"flex h-full w-full flex-col overflow-hidden\"\n\t\t:class=\"{\n\t\t\t'rounded border': !borderLess,\n\t\t}\"\n\t>\n\t\t<div class=\"relative flex flex-1 flex-col overflow-auto text-base\">\n\t\t\t<table\n\t\t\t\tv-if=\"props?.columns?.length || props.data?.length\"\n\t\t\t\tclass=\"border-separate border-spacing-0\"\n\t\t\t>\n\t\t\t\t<thead class=\"sticky top-0 bg-gray-50\">\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-for=\"headerGroup in table.getHeaderGroups()\"\n\t\t\t\t\t\t:key=\"headerGroup.id\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tv-for=\"header in headerGroup.headers\"\n\t\t\t\t\t\t\t:key=\"header.id\"\n\t\t\t\t\t\t\t:colSpan=\"header.colSpan\"\n\t\t\t\t\t\t\tclass=\"border-b border-r text-gray-800\"\n\t\t\t\t\t\t\t:width=\"\n\t\t\t\t\t\t\t\theader.column.columnDef.id === '__index' ? '6rem' : 'auto'\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-2 truncate px-3 py-2\">\n\t\t\t\t\t\t\t\t<FlexRender\n\t\t\t\t\t\t\t\t\tv-if=\"!header.isPlaceholder\"\n\t\t\t\t\t\t\t\t\t:render=\"header.column.columnDef.header\"\n\t\t\t\t\t\t\t\t\t:props=\"header.getContext()\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclass=\"w-[10rem] border-b border-r text-center text-gray-800\"\n\t\t\t\t\t\t\tv-if=\"actionHeaderLabel\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ actionHeaderLabel }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr v-for=\"(row, index) in table.getRowModel().rows\" :key=\"row.id\">\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tv-for=\"cell in row.getVisibleCells()\"\n\t\t\t\t\t\t\t:key=\"cell.id\"\n\t\t\t\t\t\t\t:align=\"cell.column.columnDef.meta?.align\"\n\t\t\t\t\t\t\tclass=\"truncate border-r px-3 py-2\"\n\t\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t\t'border-b': !(\n\t\t\t\t\t\t\t\t\tindex === table.getRowModel().rows.length - 1 && borderLess\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'min-w-[6rem] ': cell.column.columnDef.id !== 'index',\n\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FlexRender\n\t\t\t\t\t\t\t\t:render=\"cell.column.columnDef.cell\"\n\t\t\t\t\t\t\t\t:props=\"cell.getContext()\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<MaximizedIcon\n\t\t\t\t\t\t\t\tv-if=\"isTextTruncated(cell)\"\n\t\t\t\t\t\t\t\t@click=\"handleViewFull(cell)\"\n\t\t\t\t\t\t\t\tclass=\"!my-0 ml-2 inline-block !h-4 !w-4 cursor-pointer text-gray-700\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclass=\"w-[6rem] border-b border-r text-center text-gray-800\"\n\t\t\t\t\t\t\tv-if=\"actionComponent\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t:is=\"actionComponent\"\n\t\t\t\t\t\t\t\t:row=\"row.original\"\n\t\t\t\t\t\t\t\tv-bind=\"actionComponentProps\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr height=\"99%\" class=\"border-b\"></tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<div\n\t\t\t\tv-if=\"props.data?.length == 0\"\n\t\t\t\tclass=\"flex min-h-[20vh] items-center justify-center\"\n\t\t\t>\n\t\t\t\t<div>No results to display</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div\n\t\t\tclass=\"flex justify-between p-1\"\n\t\t\tv-if=\"props.data?.length != 0 && (enableCSVExport || showPagination)\"\n\t\t>\n\t\t\t<Button\n\t\t\t\t@click=\"downloadCSV\"\n\t\t\t\ticonLeft=\"download\"\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tv-if=\"enableCSVExport\"\n\t\t\t\t>Download as CSV</Button\n\t\t\t>\n\t\t\t<div v-else></div>\n\t\t\t<!-- blank div added to prevent broken layout -->\n\t\t\t<div\n\t\t\t\tv-if=\"showPagination\"\n\t\t\t\tclass=\"flex flex-shrink-0 items-center justify-end gap-3\"\n\t\t\t>\n\t\t\t\t<div class=\"flex flex-shrink-0 items-center justify-end gap-3\">\n\t\t\t\t\t<div class=\"flex flex-shrink-0 items-center gap-2 border-r-2 pr-3\">\n\t\t\t\t\t\t<p class=\"text-sm text-gray-600\">Per Page</p>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclass=\"form-select block !py-0.5 text-sm\"\n\t\t\t\t\t\t\tv-model=\"pageSize\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"10\">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option>\n\t\t\t\t\t\t\t<option value=\"50\">50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option>\n\t\t\t\t\t\t\t<option value=\"100\">\n\t\t\t\t\t\t\t\t100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value=\"200\">\n\t\t\t\t\t\t\t\t200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class=\"tnum text-sm text-gray-600\">\n\t\t\t\t\t\t{{ pageStart }} - {{ pageEnd }} of {{ totalRows }} rows\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"flex gap-2\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t@click=\"table.previousPage()\"\n\t\t\t\t\t\t\t:disabled=\"!table.getCanPreviousPage()\"\n\t\t\t\t\t\t\ticonLeft=\"arrow-left\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPrev\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t@click=\"table.nextPage()\"\n\t\t\t\t\t\t\t:disabled=\"!table.getCanNextPage()\"\n\t\t\t\t\t\t\ticonRight=\"arrow-right\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n","<template>\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: 'Browse Schema',\n\t\t\tsize: '2xl'\n\t\t}\"\n\t>\n\t\t<template #body-content>\n\t\t\t<p class=\"mb-2 text-sm text-gray-700\">Select Table</p>\n\t\t\t<div class=\"flex flex-row gap-2\">\n\t\t\t\t<FormControl\n\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\ttype=\"autocomplete\"\n\t\t\t\t\t:options=\"autocompleteOptions\"\n\t\t\t\t\tv-model=\"selectedSchema\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ticon=\"copy\"\n\t\t\t\t\t@click=\"copyTableNameToClipboard\"\n\t\t\t\t\tv-if=\"selectedSchema\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"mt-3 flex flex-row gap-2\"\n\t\t\t\tv-if=\"selectedSchema && showSQLActions\"\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\ticonLeft=\"play\"\n\t\t\t\t\tclass=\"grow\"\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t@click=\"viewTop100Rows\"\n\t\t\t\t\t>View Top 100 Rows</Button\n\t\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\ticonLeft=\"play\"\n\t\t\t\t\tclass=\"grow\"\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t@click=\"viewLast100Rows\"\n\t\t\t\t\t>View Last 100 Rows</Button\n\t\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\ticonLeft=\"play\"\n\t\t\t\t\tclass=\"grow\"\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t@click=\"viewAllRows\"\n\t\t\t\t\t>View All Rows</Button\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<ObjectList :options=\"listOptions\" v-if=\"selectedSchema\" />\n\t\t</template>\n\t</Dialog>\n</template>\n<script>\nimport { h } from 'vue';\nimport { FormControl } from 'frappe-ui';\nimport ObjectList from '../../ObjectList.vue';\nimport { icon } from '../../../utils/components';\nimport { toast } from 'vue-sonner';\n\nexport default {\n\tname: 'DatabaseTableSchemaDialog',\n\tprops: {\n\t\tsite: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\ttableSchemas: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tshowSQLActions: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tpreSelectedSchema: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t}\n\t},\n\temits: ['runSQLQuery'],\n\tcomponents: {\n\t\tFormControl,\n\t\tObjectList\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselectedSchema: null\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.preSelectSchema();\n\t},\n\twatch: {\n\t\tpreSelectedSchema() {\n\t\t\tthis.preSelectSchema();\n\t\t}\n\t},\n\tcomputed: {\n\t\tautocompleteOptions() {\n\t\t\treturn Object.keys(this.tableSchemas).map(x => ({\n\t\t\t\tlabel:\n\t\t\t\t\tthis.tableSchemas[x].size.total_size > 0.01\n\t\t\t\t\t\t? `${x} (${this.bytesToMB(this.tableSchemas[x].size.total_size)}MB)`\n\t\t\t\t\t\t: x,\n\t\t\t\tvalue: x\n\t\t\t}));\n\t\t},\n\t\tlistOptions() {\n\t\t\tif (!this.selectedSchema || !this.selectedSchema.value) return {};\n\t\t\treturn {\n\t\t\t\tdata: () => {\n\t\t\t\t\treturn this.tableSchemas?.[this.selectedSchema.value]?.columns ?? [];\n\t\t\t\t},\n\t\t\t\thideControls: true,\n\t\t\t\tcolumns: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Column',\n\t\t\t\t\t\tfieldname: 'column',\n\t\t\t\t\t\twidth: 0.5,\n\t\t\t\t\t\ttype: 'Component',\n\t\t\t\t\t\tcomponent({ row }) {\n\t\t\t\t\t\t\treturn h(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclass: 'truncate text-base cursor-copy',\n\t\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\t\tif ('clipboard' in navigator) {\n\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(row.column);\n\t\t\t\t\t\t\t\t\t\t\ttoast.success('Copied to clipboard');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[row.column]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Data Type',\n\t\t\t\t\t\tfieldname: 'data_type',\n\t\t\t\t\t\twidth: 0.2,\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Default',\n\t\t\t\t\t\tfieldname: 'default',\n\t\t\t\t\t\twidth: 0.3,\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Nullable',\n\t\t\t\t\t\tfieldname: 'is_nullable',\n\t\t\t\t\t\twidth: 0.15,\n\t\t\t\t\t\ttype: 'Icon',\n\t\t\t\t\t\tIcon(value) {\n\t\t\t\t\t\t\treturn value ? 'check' : 'x';\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'center'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Is Indexed',\n\t\t\t\t\t\twidth: 0.15,\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\ttype: 'Component',\n\t\t\t\t\t\tcomponent({ row }) {\n\t\t\t\t\t\t\treturn row.index_info.is_indexed\n\t\t\t\t\t\t\t\t? icon('check', 'w-4 w-4')\n\t\t\t\t\t\t\t\t: icon('x', 'w-4 w-4');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tcopyTableNameToClipboard() {\n\t\t\tif ('clipboard' in navigator) {\n\t\t\t\tnavigator.clipboard.writeText(this.selectedSchema.value);\n\t\t\t\ttoast.success('Copied to clipboard');\n\t\t\t}\n\t\t},\n\t\tviewTop100Rows() {\n\t\t\tthis.$emit(\n\t\t\t\t'runSQLQuery',\n\t\t\t\t`SELECT * FROM \\`${this.selectedSchema.value}\\` LIMIT 100;`\n\t\t\t);\n\t\t},\n\t\tviewLast100Rows() {\n\t\t\tthis.$emit(\n\t\t\t\t'runSQLQuery',\n\t\t\t\t`SELECT * FROM \\`${this.selectedSchema.value}\\` ORDER BY name DESC LIMIT 100;`\n\t\t\t);\n\t\t},\n\t\tviewAllRows() {\n\t\t\tthis.$emit(\n\t\t\t\t'runSQLQuery',\n\t\t\t\t`SELECT * FROM \\`${this.selectedSchema.value}\\`;`\n\t\t\t);\n\t\t},\n\t\tbytesToMB(bytes) {\n\t\t\treturn (bytes / (1024 * 1024)).toFixed(2);\n\t\t},\n\t\tpreSelectSchema() {\n\t\t\tif (!this.preSelectedSchema) return;\n\t\t\tif (!this.tableSchemas) return;\n\t\t\tif (this.autocompleteOptions.length == 0) return;\n\t\t\tthis.selectedSchema = {\n\t\t\t\tlabel: this.preSelectedSchema,\n\t\t\t\tvalue: this.preSelectedSchema\n\t\t\t};\n\t\t}\n\t}\n};\n</script>\n"],"names":["props","__props","generateData","computed","data","i","row","j","table","useVueTable","_a","indexColumn","cols","column","cellProps","value","getCoreRowModel","getPaginationRowModel","isTextTruncated","cell","fullViewDialogHeader","ref","fullViewDialogBody","showFullViewDialog","handleViewFull","fullText","pageLength","currPage","pageStart","pageEnd","end","totalRows","showPagination","pageSize","watch","downloadCSV","__async","csv","unparse","blob","filename","link","_sfc_main","ObjectList","x","_c","_b","h","toast","icon","bytes","_hoisted_1","_withCtx","_cache","_createElementVNode","$options","$data","$event","_createCommentVNode","$props","_openBlock","_createElementBlock","_hoisted_2","_createTextVNode"],"mappings":"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"}