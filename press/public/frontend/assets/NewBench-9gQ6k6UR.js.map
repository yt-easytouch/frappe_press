{"version":3,"file":"NewBench-9gQ6k6UR.js","sources":["../../../../dashboard/src/views/bench/NewBench.vue"],"sourcesContent":["<template>\n\t<WizardCard>\n\t\t<div>\n\t\t\t<div class=\"mb-6 text-center\">\n\t\t\t\t<h1 class=\"text-2xl font-bold sm:text-center\">New Bench</h1>\n\t\t\t\t<p v-if=\"serverTitle\" class=\"text-base text-gray-700\">\n\t\t\t\t\tBench will be created on server\n\t\t\t\t\t<span class=\"font-medium\">{{ serverTitle.slice(0, -14) }}</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div v-if=\"$resources.options.loading\" class=\"flex justify-center\">\n\t\t\t\t<LoadingText />\n\t\t\t</div>\n\t\t\t<div class=\"space-y-8 sm:space-y-6\" v-else>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"text-lg font-semibold\">\n\t\t\t\t\t\tChoose a name for your bench\n\t\t\t\t\t</label>\n\t\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\t\tName your bench based on its purpose. For e.g., Personal Websites,\n\t\t\t\t\t\tStaging Bench, etc.\n\t\t\t\t\t</p>\n\t\t\t\t\t<FormControl class=\"mt-2\" v-model=\"benchTitle\" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"regionOptions.length > 0\">\n\t\t\t\t\t<h2 class=\"text-lg font-semibold\">Select Region</h2>\n\t\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\t\tSelect the datacenter region where your bench should be created\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t<RichSelect\n\t\t\t\t\t\t\t:value=\"selectedRegion\"\n\t\t\t\t\t\t\t@change=\"selectedRegion = $event\"\n\t\t\t\t\t\t\t:options=\"regionOptions\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"text-lg font-semibold\"> Select a Frappe version </label>\n\t\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\t\tSelect a Frappe version for your bench.\n\t\t\t\t\t</p>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tclass=\"mt-2\"\n\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\tv-model=\"selectedVersionName\"\n\t\t\t\t\t\t:options=\"versionOptions\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div v-if=\"selectedVersionName\">\n\t\t\t\t\t<label class=\"text-lg font-semibold\"> Select apps to install </label>\n\t\t\t\t\t<p class=\"text-base text-gray-700\">\n\t\t\t\t\t\tThese apps will be available for sites on your bench. You can also\n\t\t\t\t\t\tadd apps to your bench later.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t\t<AppSourceSelector\n\t\t\t\t\t\t\t:apps=\"[\n\t\t\t\t\t\t\t\t...selectedVersion.apps.filter(app => app.name === 'frappe'),\n\t\t\t\t\t\t\t\t...selectedVersion.apps.filter(app => app.name !== 'frappe')\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\tv-model=\"selectedApps\"\n\t\t\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- Region consent checkbox -->\n\t\t\t\t<div class=\"my-6\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"region-consent\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclass=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n\t\t\t\t\t\tv-model=\"agreedToRegionConsent\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\tfor=\"region-consent\"\n\t\t\t\t\t\tclass=\"ml-1 text-sm font-semibold text-gray-900\"\n\t\t\t\t\t>\n\t\t\t\t\t\tI agree that the laws of the region selected by me shall stand\n\t\t\t\t\t\tapplicable to me and Frappe.\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t<ErrorMessage class=\"mb-2\" :message=\"$resources.createBench.error\" />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\tclass=\"ml-auto\"\n\t\t\t\t\t\t:loading=\"$resources.createBench.loading\"\n\t\t\t\t\t\t@click=\"$resources.createBench.submit()\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate Bench\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</WizardCard>\n</template>\n\n<script>\nimport WizardCard from '@/components/WizardCard.vue';\nimport AppSourceSelector from '@/components/AppSourceSelector.vue';\nimport RichSelect from '@/components/RichSelect.vue';\nexport default {\n\tname: 'NewBench',\n\tprops: ['saas_app', 'server'],\n\tcomponents: {\n\t\tWizardCard,\n\t\tAppSourceSelector,\n\t\tRichSelect\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tbenchTitle: null,\n\t\t\tselectedVersionName: null,\n\t\t\tselectedApps: [],\n\t\t\tselectedRegion: null,\n\t\t\tserverTitle: null,\n\t\t\tagreedToRegionConsent: false\n\t\t};\n\t},\n\tresources: {\n\t\toptions() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.bench.options',\n\t\t\t\tinitialData: {\n\t\t\t\t\tversions: [],\n\t\t\t\t\tclusters: []\n\t\t\t\t},\n\t\t\t\tauto: true,\n\t\t\t\tonSuccess(options) {\n\t\t\t\t\tif (!this.selectedVersionName) {\n\t\t\t\t\t\tthis.selectedVersionName = this.options.versions.filter(\n\t\t\t\t\t\t\tv => v.default == 1\n\t\t\t\t\t\t)[0].name;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.selectedRegion) {\n\t\t\t\t\t\tthis.selectedRegion = this.options.clusters[0].name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcreateBench() {\n\t\t\treturn {\n\t\t\t\turl: 'press.api.bench.new',\n\t\t\t\tparams: {\n\t\t\t\t\tbench: {\n\t\t\t\t\t\ttitle: this.benchTitle,\n\t\t\t\t\t\tversion: this.selectedVersionName,\n\t\t\t\t\t\tcluster: this.selectedRegion,\n\t\t\t\t\t\tsaas_app: this.saas_app || null,\n\t\t\t\t\t\tapps: this.selectedApps.map(app => ({\n\t\t\t\t\t\t\tname: app.app,\n\t\t\t\t\t\t\tsource: app.source.name\n\t\t\t\t\t\t})),\n\t\t\t\t\t\tserver: this.server || null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvalidate() {\n\t\t\t\t\tif (!this.benchTitle) {\n\t\t\t\t\t\treturn 'Bench Title cannot be blank';\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.selectedVersionName) {\n\t\t\t\t\t\treturn 'Select a version to create bench';\n\t\t\t\t\t}\n\t\t\t\t\tif (this.selectedApps.length < 1) {\n\t\t\t\t\t\treturn 'Select atleast one app to create bench';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.agreedToRegionConsent) {\n\t\t\t\t\t\tdocument.getElementById('region-consent').focus();\n\t\t\t\t\t\treturn 'Please agree to the above consent to create bench';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonSuccess(benchName) {\n\t\t\t\t\tthis.$router.push(`/groups/${benchName}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tasync mounted() {\n\t\tif (this.server) {\n\t\t\tlet { title, cluster } = await this.$call(\n\t\t\t\t'press.api.server.get_title_and_cluster',\n\t\t\t\t{\n\t\t\t\t\tname: this.server\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.serverTitle = title;\n\t\t\tthis.selectedRegion = cluster;\n\t\t}\n\t},\n\twatch: {\n\t\tselectedVersionName() {\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tlet frappeApp = this.getFrappeApp(this.selectedVersion.apps);\n\t\t\t\tthis.selectedApps = [{ app: frappeApp.name, source: frappeApp.source }];\n\t\t\t});\n\t\t},\n\t\tselectedApps: {\n\t\t\thandler(newVal, oldVal) {\n\t\t\t\t// dont remove frappe app\n\t\t\t\tlet hasFrappe = newVal.find(app => app.app === 'frappe');\n\t\t\t\tif (!hasFrappe && oldVal) {\n\t\t\t\t\tthis.selectedApps = oldVal;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeep: true\n\t\t}\n\t},\n\tmethods: {\n\t\tgetFrappeApp(apps) {\n\t\t\treturn apps.find(app => app.name === 'frappe');\n\t\t}\n\t},\n\tcomputed: {\n\t\toptions() {\n\t\t\treturn this.$resources.options.data;\n\t\t},\n\t\tselectedVersion() {\n\t\t\treturn this.options.versions.find(\n\t\t\t\tv => v.name === this.selectedVersionName\n\t\t\t);\n\t\t},\n\t\tversionOptions() {\n\t\t\treturn this.options.versions.map(v => ({\n\t\t\t\tlabel: `${v.name} (${v.status})`,\n\t\t\t\tvalue: v.name\n\t\t\t}));\n\t\t},\n\t\tregionOptions() {\n\t\t\tlet clusters = this.options.clusters;\n\t\t\tif (this.server && this.selectedRegion) {\n\t\t\t\tclusters = clusters.filter(\n\t\t\t\t\tcluster => cluster.name === this.selectedRegion\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn clusters.map(d => ({\n\t\t\t\tlabel: d.title,\n\t\t\t\tvalue: d.name,\n\t\t\t\timage: d.image,\n\t\t\t\tbeta: d.beta\n\t\t\t}));\n\t\t}\n\t}\n};\n</script>\n"],"names":["_sfc_main","AppSourceSelector","RichSelect","options","v","app","benchName","__async","title","cluster","frappeApp","apps","clusters","_hoisted_1","_hoisted_3","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_withCtx","_createElementVNode","_cache","_openBlock","_createElementBlock","_hoisted_2","_createTextVNode","_toDisplayString","$data","_createCommentVNode","_hoisted_4","_hoisted_5","$event","$options","_hoisted_6","_hoisted_8","_ctx"],"mappings":"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"}