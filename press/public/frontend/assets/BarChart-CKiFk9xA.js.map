{"version":3,"file":"BarChart-CKiFk9xA.js","sources":["../../../../dashboard/src/components/charts/BarChart.vue"],"sourcesContent":["<template>\n\t<component\n\t\t:is=\"showCard ? Card : 'div'\"\n\t\t:title=\"title\"\n\t\t:class=\"showCard ? 'h-80' : ''\"\n\t\t:loading=\"loading\"\n\t\t:stopOverflow=\"true\"\n\t>\n\t\t<template #actions>\n\t\t\t<slot name=\"actions\"></slot>\n\t\t</template>\n\t\t<div\n\t\t\tv-if=\"loading && !showCard\"\n\t\t\tclass=\"flex h-full items-center justify-center\"\n\t\t>\n\t\t\t<LoadingText />\n\t\t</div>\n\t\t<div\n\t\t\tv-else-if=\"error || !data.datasets.length\"\n\t\t\tclass=\"flex h-full items-center justify-center\"\n\t\t>\n\t\t\t<ErrorMessage v-if=\"error\" :message=\"error\" />\n\t\t\t<span v-else class=\"text-base text-gray-700\">No data</span>\n\t\t</div>\n\t\t<VChart\n\t\t\tv-else\n\t\t\tautoresize\n\t\t\tclass=\"chart\"\n\t\t\t:option=\"options\"\n\t\t\t:init-options=\"initOptions\"\n\t\t/>\n\t</component>\n</template>\n\n<script setup>\nimport { ref, toRefs } from 'vue';\nimport { DateTime } from 'luxon';\nimport { use, graphic } from 'echarts/core';\nimport { SVGRenderer } from 'echarts/renderers';\nimport { BarChart } from 'echarts/charts';\nimport {\n\tGridComponent,\n\tLegendComponent,\n\tTooltipComponent,\n\tMarkLineComponent\n} from 'echarts/components';\nimport VChart from 'vue-echarts';\nimport Card from '../global/Card.vue';\nimport theme from '../../../tailwind.theme.json';\nimport { formatBytes, getUnit } from './utils';\n\nconst props = defineProps({\n\tshowCard: {\n\t\ttype: Boolean,\n\t\trequired: false,\n\t\tdefault: () => true\n\t},\n\ttitle: {\n\t\ttype: String,\n\t\trequired: false\n\t},\n\tunit: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: () => ''\n\t},\n\tdata: {\n\t\ttype: Object,\n\t\trequired: true,\n\t\tdefault: () => ({ labels: [], datasets: [] })\n\t},\n\ttype: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: () => 'category'\n\t},\n\tchartTheme: {\n\t\ttype: Array,\n\t\trequired: false,\n\t\tdefault: () => [\n\t\t\ttheme.colors.red[500],\n\t\t\ttheme.colors.blue[500],\n\t\t\ttheme.colors.green[500],\n\t\t\ttheme.colors.purple[500],\n\t\t\ttheme.colors.yellow[500],\n\t\t\ttheme.colors.teal[500],\n\t\t\ttheme.colors.pink[500],\n\t\t\ttheme.colors.cyan[500]\n\t\t]\n\t},\n\tloading: {\n\t\ttype: Boolean,\n\t\trequired: false,\n\t\tdefault: () => false\n\t},\n\terror: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: () => ''\n\t}\n});\n\nconst { title, unit, data, type, chartTheme } = toRefs(props);\n\nuse([\n\tBarChart,\n\tSVGRenderer,\n\tGridComponent,\n\tLegendComponent,\n\tTooltipComponent,\n\tMarkLineComponent\n]);\n\nconst initOptions = {\n\trenderer: 'svg'\n};\n\nconst options = ref({\n\tgrid: {\n\t\ttop: 20,\n\t\tleft: 60,\n\t\tright: 40,\n\t\tbottom: 50\n\t},\n\ttooltip: {\n\t\ttrigger: 'axis',\n\t\tconfine: true,\n\t\textraCssText: 'width: 60%; white-space: normal; word-wrap: break-word;',\n\t\tformatter: params => {\n\t\t\t// for the dot to follow the same color as the line ðŸ—¿\n\t\t\tlet tooltip = `<p>${DateTime.fromSQL(\n\t\t\t\tparams[0].axisValueLabel\n\t\t\t).toLocaleString(DateTime.DATETIME_MED)}</p>`;\n\n\t\t\tparams.forEach(({ value, seriesName }, i) => {\n\t\t\t\tlet colorSpan = color =>\n\t\t\t\t\t'<span style=\"display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' +\n\t\t\t\t\tcolor +\n\t\t\t\t\t'\"></span>';\n\n\t\t\t\ttooltip += `<p>${colorSpan(chartTheme.value[i])}  ${getUnit(\n\t\t\t\t\tvalue,\n\t\t\t\t\tunit.value\n\t\t\t\t)} ${unit.value !== seriesName ? `- ${seriesName}` : ''}</p>`;\n\t\t\t});\n\t\t\treturn tooltip;\n\t\t}\n\t},\n\txAxis: {\n\t\ttype: type,\n\t\tboundaryGap: false,\n\t\tdata: data.value.labels,\n\t\taxisLine: {\n\t\t\tshow: false\n\t\t},\n\t\taxisTick: {\n\t\t\tshow: false\n\t\t}\n\t},\n\tyAxis: {\n\t\ttype: 'value',\n\t\tmax: data.value.yMax,\n\t\taxisLabel: {\n\t\t\tformatter: value => {\n\t\t\t\tif (unit.value === 'bytes') {\n\t\t\t\t\treturn formatBytes(value, 0);\n\t\t\t\t} else {\n\t\t\t\t\tif (value >= 1000000000) return `${value / 1000000000}B`;\n\t\t\t\t\telse if (value >= 1000000) return `${value / 1000000}M`;\n\t\t\t\t\telse if (value >= 1000) return `${value / 1000}K`;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t},\n\t\t\tpadding: 5\n\t\t}\n\t},\n\tlabelLine: {\n\t\tsmooth: 0.2,\n\t\tlength: 10,\n\t\tlength2: 20\n\t},\n\tlegend: {\n\t\ttype: 'scroll',\n\t\ttop: 'bottom',\n\t\ticon: 'circle',\n\t\tshow: data.value.datasets.length > 1\n\t},\n\tseries: data.value.datasets.map((dataset, i) => {\n\t\treturn {\n\t\t\tname: dataset.path.replace(/\\n|\\t/g, '') || unit,\n\t\t\ttype: 'bar',\n\t\t\tstack: dataset.stack,\n\t\t\tshowSymbol: false,\n\t\t\tdata: dataset.values || dataset,\n\t\t\tmarkLine: data.value.markLine,\n\t\t\temphasis: {\n\t\t\t\titemStyle: {\n\t\t\t\t\tshadowBlur: 10,\n\t\t\t\t\tshadowOffsetX: 0,\n\t\t\t\t\tshadowColor: 'rgba(0, 0, 0, 0.5)'\n\t\t\t\t}\n\t\t\t},\n\t\t\tlineStyle: {\n\t\t\t\tcolor: chartTheme.value[i]\n\t\t\t},\n\t\t\titemStyle: {\n\t\t\t\tcolor: chartTheme.value[i]\n\t\t\t},\n\t\t\tareaStyle: {\n\t\t\t\tcolor: new graphic.LinearGradient(0, 0, 0, 1, [\n\t\t\t\t\t{\n\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\tcolor: chartTheme.value[i]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\tcolor: '#fff'\n\t\t\t\t\t}\n\t\t\t\t]),\n\t\t\t\topacity: 0.3\n\t\t\t}\n\t\t};\n\t})\n});\n</script>\n"],"names":["props","__props","title","unit","data","type","chartTheme","toRefs","use","BarChart","SVGRenderer","GridComponent","LegendComponent","TooltipComponent","MarkLineComponent","initOptions","options","ref","params","tooltip","DateTime","value","seriesName","i","color","getUnit","formatBytes","dataset","graphic.LinearGradient"],"mappings":"2vDAmDA,MAAAA,EAAAC,EAmDA,CAAA,MAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,WAAAC,CAAA,EAAAC,EAAAP,CAAA,EAEAQ,EAAA,CACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CACA,CAAA,EAEA,MAAAC,EAAA,CACA,SAAA,KACA,EAEAC,EAAAC,EAAA,CACA,KAAA,CACA,IAAA,GACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,QAAA,CACA,QAAA,OACA,QAAA,GACA,aAAA,0DACA,UAAAC,GAAA,CAEA,IAAAC,EAAA,MAAAC,EAAA,QACAF,EAAA,CAAA,EAAA,cACA,EAAA,eAAAE,EAAA,YAAA,CAAA,OAEA,OAAAF,EAAA,QAAA,CAAA,CAAA,MAAAG,EAAA,WAAAC,CAAA,EAAAC,IAAA,CAMAJ,GAAA,OALAK,GACA,iHACAA,EACA,aAEAlB,EAAA,MAAAiB,CAAA,CAAA,CAAA,KAAAE,EACAJ,EACAlB,EAAA,KACA,CAAA,IAAAA,EAAA,QAAAmB,EAAA,KAAAA,CAAA,GAAA,EAAA,MACA,CAAA,EACAH,CACA,CACA,EACA,MAAA,CACA,KAAAd,EACA,YAAA,GACA,KAAAD,EAAA,MAAA,OACA,SAAA,CACA,KAAA,EACA,EACA,SAAA,CACA,KAAA,EACA,CACA,EACA,MAAA,CACA,KAAA,QACA,IAAAA,EAAA,MAAA,KACA,UAAA,CACA,UAAAiB,GACAlB,EAAA,QAAA,QACAuB,EAAAL,EAAA,CAAA,EAEAA,GAAA,IAAA,GAAAA,EAAA,GAAA,IACAA,GAAA,IAAA,GAAAA,EAAA,GAAA,IACAA,GAAA,IAAA,GAAAA,EAAA,GAAA,IACAA,EAGA,QAAA,CACA,CACA,EACA,UAAA,CACA,OAAA,GACA,OAAA,GACA,QAAA,EACA,EACA,OAAA,CACA,KAAA,SACA,IAAA,SACA,KAAA,SACA,KAAAjB,EAAA,MAAA,SAAA,OAAA,CACA,EACA,OAAAA,EAAA,MAAA,SAAA,IAAA,CAAAuB,EAAAJ,KACA,CACA,KAAAI,EAAA,KAAA,QAAA,SAAA,EAAA,GAAAxB,EACA,KAAA,MACA,MAAAwB,EAAA,MACA,WAAA,GACA,KAAAA,EAAA,QAAAA,EACA,SAAAvB,EAAA,MAAA,SACA,SAAA,CACA,UAAA,CACA,WAAA,GACA,cAAA,EACA,YAAA,oBACA,CACA,EACA,UAAA,CACA,MAAAE,EAAA,MAAAiB,CAAA,CACA,EACA,UAAA,CACA,MAAAjB,EAAA,MAAAiB,CAAA,CACA,EACA,UAAA,CACA,MAAA,IAAAK,EAAA,EAAA,EAAA,EAAA,EAAA,CACA,CACA,OAAA,EACA,MAAAtB,EAAA,MAAAiB,CAAA,CACA,EACA,CACA,OAAA,EACA,MAAA,MACA,CACA,CAAA,EACA,QAAA,EACA,CACA,EACA,CACA,CAAA"}